[
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class vUaygUe extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240343,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class azupoKV extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240344,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class KEgZhjj extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240347,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class DYZIqVB extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240349,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class xHqWlJg extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240351,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class VLzfyFx extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240360,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class EGTKefK extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240362,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class uklKruM extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240378,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xNarDqv extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new dqUKrmb()).RYNMBky(data, request, response);\n    }\n}\n\npublic class LpJGwuw {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class dqUKrmb {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new LpJGwuw()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240382,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class rqJzcFc extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new MdlaHgy()).RYNMBky(data, request, response);\n    }\n}\n\npublic class VkOCOzb {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class RlBbbNk {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new VkOCOzb()).RYNMBky(data, request, response);\n    }\n}\n\npublic class MdlaHgy {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new RlBbbNk()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240384,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class NRzJMQw extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240406,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class WMqDtbK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240411,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class zqhaulK extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240413,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class yJraYDi extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240421,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class dXrwXyl extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240427,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class GbaWGCo extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240431,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class rSZREXp extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240444,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ghNmfqX extends AbstractTestCaseServlet {\n\n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240449,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SeBJksA extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new uPFnNRz()).RYNMBky(data, request, response);\n    }\n}\n\npublic class qTFpvfv {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class uPFnNRz {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new qTFpvfv()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240454,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class PrgsDwr extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240485,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class HoiJQLm extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240487,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class AFszomx extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240491,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class OjikIGa extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new MHJJgpV()).RYNMBky(dataLinkedList, request, response);\n    }\n}\n\npublic class MHJJgpV {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240544,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class WkZFclG extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new MiFcKyG()).fDqjRYE(dataHashMap, request, response);\n    }\n}\n\npublic class MiFcKyG {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240547,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class XxCZNeV extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240564,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class tJByEFV extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240574,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ANWRRoN extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240580,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class MyclFop extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240582,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class kxlBfCJ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240588,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class feiMtRN extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new FrmVRek()).RYNMBky(data, request, response);\n    }\n}\n\npublic class FrmVRek {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new tSRaphf()).RYNMBky(data, request, response);\n    }\n}\n\npublic class tSRaphf {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240598,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class xexjBTj extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new sXnCTks()).ImBBndW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class sXnCTks {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240604,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class mbwZYFH extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new XrbTxVn()).fDqjRYE(dataLinkedList, request, response);\n    }\n}\n\npublic class XrbTxVn {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240617,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class FLiuzcH extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240632,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class gGOVmNg extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240640,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class RFJywfs extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240647,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class AjlAaID extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240648,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class NWmKRVo extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240660,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class omYRojT extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240664,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class omYRojT extends AbstractTestCaseServlet {\n\n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240665,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class sjuOTQx extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new gPloMMf()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class gPloMMf {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240686,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class oOJcuJV extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240702,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class SHequmR extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240710,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class lyssxIH extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240713,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class wnXvtTf extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240721,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class AJQjSKC extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n            break;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240724,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class QmOXsUY extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240727,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NhyBywf extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new XwtLPCN()).RYNMBky(data, request, response);\n    }\n}\n\npublic class XwtLPCN {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new VuBnXXU()).RYNMBky(data, request, response);\n    }\n}\n\npublic class gTWFHXf {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class VuBnXXU {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new gTWFHXf()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240744,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class oQQwapE extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new UurUVeq()).RYNMBky(data, request, response);\n    }\n}\n\npublic class sDzCAAm {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class UurUVeq {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new jjpANcN()).RYNMBky(data, request, response);\n    }\n}\n\npublic class jjpANcN {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new aEyvLhq()).RYNMBky(data, request, response);\n    }\n}\n\npublic class aEyvLhq {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new sDzCAAm()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240746,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class QvZlMZS {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class ljULmcO extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new QvZlMZS()).wHnwAlc(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240749,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mrUwbVO extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new xYAfIQr()).RYNMBky(dataContainer, request, response);\n    }\n}\n\npublic class xYAfIQr {\n\n    public void RYNMBky(mrUwbVO.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240752,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class hMMVkou extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new GKkWnlv()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class GKkWnlv {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240758,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class nlKxYRK extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240766,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class GmimGGn extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240769,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class THdZLrh extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240770,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class THdZLrh extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240771,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class YoEhwBL extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240776,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class YoEhwBL extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240777,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class LuYOQoC extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240781,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class mfycZVI extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240784,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class uvWPLpB extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240789,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class OfBZGwR extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new RsNfTWR()).RYNMBky(dataContainer, request, response);\n    }\n}\n\npublic class RsNfTWR {\n\n    public void RYNMBky(OfBZGwR.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240824,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class rHXiQtZ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240838,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class uSqjkiV extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240840,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class YMTNHVV extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240843,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class sSCDWea extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240845,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class VAHrlWM extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240848,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class bCAKuNr extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240850,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class WCzlqKN extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240860,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class PzBAgno extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String MZKvgmW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String ymJWUuP(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240873,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class GiahOIr extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240882,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BrmJglM extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new WMveSBV()).RYNMBky(data, request, response);\n    }\n}\n\npublic class EghVzxk {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new lOnscvM()).RYNMBky(data, request, response);\n    }\n}\n\npublic class lOnscvM {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class QNUGBsM {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new EghVzxk()).RYNMBky(data, request, response);\n    }\n}\n\npublic class WMveSBV {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new QNUGBsM()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240890,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class GLJfKBf {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class RVbvqxc extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new GLJfKBf()).wHnwAlc(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240893,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class bSLEfBA extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new YotUPzx()).RYNMBky(request, response);\n    }\n}\n\npublic class YotUPzx {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = bSLEfBA.data;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240898,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class rNiwxMa extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ylEZADG()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class ylEZADG {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240902,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class rNiwxMa extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ylEZADG()).fDqjRYE(dataVector, request, response);\n    }\n}\n\npublic class ylEZADG {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240903,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class Ifnpbhj extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new ECZYjPv()).RYNMBky(dataLinkedList, request, response);\n    }\n}\n\npublic class ECZYjPv {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240904,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class UhDGLJG extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240914,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class UhDGLJG extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240915,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class iKWztiA extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240921,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class XegIEQN extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240922,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class adbCVYX extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240926,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class pBgskpk extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240930,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class KBqJLRM extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String LqPHiJL(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240944,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class PeWbSPF extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new HBHRGTn()).fDqjRYE(request, response);\n    }\n}\n\npublic class HBHRGTn {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = PeWbSPF.data;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240971,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class TrWFhgF extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        (new WRRAagB()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class WRRAagB {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240972,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class vapzkjn extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new XfjAxBT()).fDqjRYE(dataHashMap, request, response);\n    }\n}\n\npublic class XfjAxBT {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240979,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xfZROsa extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new OStXCtu()).fDqjRYE(dataLinkedList, request, response);\n    }\n}\n\npublic class OStXCtu {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240401,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class sSUvgkc extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240416,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class GSwxaoh extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240419,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eGDsIQJ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new NkEVbeY()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class NkEVbeY {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240453,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class IFUgYNp extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240482,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class KpyWDqb extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240510,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class KpyWDqb extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240511,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ygizKrP extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240571,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class tJByEFV extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240575,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class cBbTkoY extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240592,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class cBbTkoY extends AbstractTestCaseServlet {\n\n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240593,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class gDnVGpF extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240594,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class nuqaWru extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240622,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class qVwZWUE extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            break;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240652,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class CNOcipH extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new HlxvdcE()).fDqjRYE(dataLinkedList, request, response);\n    }\n}\n\npublic class HlxvdcE {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240689,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class xnxyEva extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new KTYRSPq()).RYNMBky(dataHashMap, request, response);\n    }\n}\n\npublic class KTYRSPq {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240690,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class MmGAPIx extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240695,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class WxowlOe extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240705,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class QmOXsUY extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240726,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class XdhrZYI extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new bShLvZM()).fDqjRYE(dataLinkedList, request, response);\n    }\n}\n\npublic class bShLvZM {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240761,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class NokHbij extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240337,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class CTXDsjD extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240338,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class azupoKV extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240345,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class DYZIqVB extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240348,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class xivFSdL extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240358,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class IjwZpIE extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String MZKvgmW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String ymJWUuP(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240369,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class iBQDWeA extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new uOTVSlf()).fDqjRYE(dataArray, request, response);\n    }\n}\n\npublic class uOTVSlf {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240391,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class fzyYvyL extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new oVOKPMl()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class oVOKPMl {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240404,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class rSZREXp extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240445,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class bhGVWmD extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240492,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class fWWxgme extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240499,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class JglXtMH extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String MZKvgmW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String ymJWUuP(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240513,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class hfvExJS extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ApUvNoO()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class ApUvNoO {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240525,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tVZWqjP extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new VRBhvEN()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class yQILGwa {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ruPHfLG()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class JfVIvGk {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new yQILGwa()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class VRBhvEN {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new JfVIvGk()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class ruPHfLG {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240531,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class RLgkShP extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240568,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ygizKrP extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240570,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class kxlBfCJ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240589,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class mbwZYFH extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new XrbTxVn()).RYNMBky(dataLinkedList, request, response);\n    }\n}\n\npublic class XrbTxVn {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240616,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class toprVHz extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240635,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class uGMvQkd extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240643,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class oBcQRoD extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240654,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class stcVppD extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new QhvUTRk()).fDqjRYE(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class QhvUTRk {\n\n    \n    public void fDqjRYE(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240693,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class MmGAPIx extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240694,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class OtICZAJ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240698,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class VvNjaNv extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240708,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class cqxqcmM extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240717,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class kKFOQvE extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new cEtZadj()).TkRMSAh(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new cEtZadj()).szAnMjq(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class cEtZadj {\n\n    \n    public String TkRMSAh(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (kKFOQvE.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (kKFOQvE.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240731,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class phfTGxT extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240733,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NhyBywf extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new XwtLPCN()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class XwtLPCN {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new VuBnXXU()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class gTWFHXf {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class VuBnXXU {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new gTWFHXf()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240745,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class vQHEMrD extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new ZZtSXJE()).fDqjRYE(dataArray, request, response);\n    }\n}\n\npublic class ZZtSXJE {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240751,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ymAAUpL extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240773,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class uvWPLpB extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240788,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class bAsdqKa extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240797,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PIomcXO extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new yLKTELx()).RYNMBky(data, request, response);\n    }\n}\n\npublic class yLKTELx {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240812,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class NokHbij extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240336,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class bjclADb extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240341,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class nKmndga extends AbstractTestCaseServlet {\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240374,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GSlCiDO extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new ZFyLoBB()).RYNMBky(dataHashMap, request, response);\n    }\n}\n\npublic class ZFyLoBB {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240402,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class fzyYvyL extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new oVOKPMl()).fDqjRYE(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class oVOKPMl {\n\n    \n    public void fDqjRYE(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240405,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class XvuxTdx extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String LqPHiJL(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240440,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class OjEApxx extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new oRfvhke()).RYNMBky(data, request, response);\n    }\n}\n\npublic class qmULDoQ {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class KSRbGIz {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new qmULDoQ()).RYNMBky(data, request, response);\n    }\n}\n\npublic class oRfvhke {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new KSRbGIz()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240456,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class TSuRquU extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new vgrJzks()).fDqjRYE(request, response);\n    }\n}\n\npublic class vgrJzks {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = TSuRquU.data;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240467,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class jkdQDVI extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240489,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class ljHRZNr extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240495,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class JglXtMH extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    private String LqPHiJL(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240512,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class CskjfhE extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240516,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class CskjfhE extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240517,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class tESqUIB extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240519,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class nKHmdJJ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new YAPncIH()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class waCciBL {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class YAPncIH {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new IKkvBAu()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class IKkvBAu {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new waCciBL()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240529,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class PusFLbP extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new YUBKWTe()).ImBBndW(request, response);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n\npublic class YUBKWTe {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240532,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class zNZLjwd extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240557,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class pqnPHBT extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240563,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class KyFmAqa extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new DceJSTU()).RYNMBky(data, request, response);\n    }\n}\n\npublic class DceJSTU {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240596,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class HDwHzQr extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new ldrzEib()).RYNMBky(dataContainer, request, response);\n    }\n}\n\npublic class ldrzEib {\n\n    public void RYNMBky(HDwHzQr.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240608,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YrnBlMp extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new NWGYDet()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class NWGYDet {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240614,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class nuqaWru extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240623,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class txwACmP extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240625,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class AjlAaID extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240649,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class NWmKRVo extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                URI uri;\n                try {\n                    uri = new URI(data);\n                } catch (URISyntaxException exceptURISyntax) {\n                    response.getWriter().write(\"YRtrtwJ\");\n                    return;\n                }\n                \n                response.sendRedirect(data);\n                return;\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240661,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class QFMjJjI extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240663,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class MrXZTCP extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new uLlGFXi()).fDqjRYE(dataArray, request, response);\n    }\n}\n\npublic class uLlGFXi {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240679,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class OtICZAJ extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240699,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class KasEvZE extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240701,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\npublic class wnXvtTf extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240720,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  },
  {
    "CWE_ID": [
      "CWE-601"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class eLznBBw extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new QKradld()).fDqjRYE(dataHashMap, request, response);\n    }\n}\n\npublic class QKradld {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            URI uri;\n            try {\n                uri = new URI(data);\n            } catch (URISyntaxException exceptURISyntax) {\n                response.getWriter().write(\"YRtrtwJ\");\n                return;\n            }\n            \n            response.sendRedirect(data);\n            return;\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1240763,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-918",
      "CWE-502"
    ]
  }
]