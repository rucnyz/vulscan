[
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RjxQrYl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218252,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RjxQrYl extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218253,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gfcOFLi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218256,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gfcOFLi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218257,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kOvsZkJ extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218259,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hdLtKsB extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218260,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hdLtKsB extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218261,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JhdDuCo extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218264,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TQbkCwh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218267,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jtdlstm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218271,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KIjGKkk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218276,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ErHekXJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218283,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HLvZMKb extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218285,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aqnDGzs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218288,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ABGKaaa extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218290,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dkagAoE extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218292,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VUiGYDm extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218294,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VUiGYDm extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218295,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hIOsWBw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new fUHMcRB()).RYNMBky(dataArray);\n    }\n}\n\npublic class fUHMcRB {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218306,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zEkEgKX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new WSIqMFO()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class WSIqMFO {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218316,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kNLVNmh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218326,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ilOQqKc extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218329,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class REAhmEw extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218332,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class REAhmEw extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218333,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class EEnHavl extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218335,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PYOxpdy extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218337,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sBViSxr extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218339,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZdHqNns extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218348,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZdHqNns extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218349,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nYskxEA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218354,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DvyOqft extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218360,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lXAFhxI extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218365,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GNAFdED extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218366,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class OPmYXIY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new mdzYZFf()).RYNMBky(data);\n    }\n}\n\npublic class mdzYZFf {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new jXYvjxQ()).RYNMBky(data);\n    }\n}\n\npublic class jXYvjxQ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218370,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gzDudhr {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class bvFfGrP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new gzDudhr()).wHnwAlc();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new gzDudhr()).snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218377,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xmmTiTO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new CCVWmky()).RYNMBky((Object) data);\n    }\n}\n\npublic class CCVWmky {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218384,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class XnsrJqz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new CjdxSHo()).RYNMBky(dataVector);\n    }\n}\n\npublic class CjdxSHo {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218386,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class nOfIDiP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QgaTOeZ()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class QgaTOeZ {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218388,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wszjUME extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218395,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jpOfjYI extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218401,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jeeqgbJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218405,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gIWcOzq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218413,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FFPuYSP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218420,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FFPuYSP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218421,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ujzKSXx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218429,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DWjJOfv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218435,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nWQMzby extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218438,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WHvANUA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new ollPufQ()).RYNMBky(data);\n    }\n}\n\npublic class AowFYZj {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new pnolDXF()).RYNMBky(data);\n    }\n}\n\npublic class pnolDXF {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class ollPufQ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new AowFYZj()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218444,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UltEtfB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new XbHaZKZ()).RYNMBky(data);\n    }\n}\n\npublic class RoEnkZY {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new GCUyrFM()).RYNMBky(data);\n    }\n}\n\npublic class XbHaZKZ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new AdGEuDL()).RYNMBky(data);\n    }\n}\n\npublic class AdGEuDL {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new RoEnkZY()).RYNMBky(data);\n    }\n}\n\npublic class GCUyrFM {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218446,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dosZRwz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new XFoWaKh()).ImBBndW();\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class XFoWaKh {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218448,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XFoWaKh {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class dosZRwz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new XFoWaKh()).wHnwAlc();\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new XFoWaKh()).snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218449,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LmWFMvd extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new JFXJYmQ()).RYNMBky(dataContainer);\n    }\n}\n\npublic class JFXJYmQ {\n\n    public void RYNMBky(LmWFMvd.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218452,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KRjPIdd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218467,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VvpbZRJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218477,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TRjOgbV extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218478,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pJPUlQG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218482,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pJPUlQG extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218483,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vrlNUEe extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218484,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vrlNUEe extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218485,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PXokhfK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218488,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ccIZKWu extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218497,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hqcblWT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218498,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DzTwNvv {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (OjFMSvl.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (OjFMSvl.HHhrjCy) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (OjFMSvl.Pywwbtz) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class OjFMSvl extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new DzTwNvv()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new DzTwNvv()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new DzTwNvv()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218503,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zlfOoLc extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218506,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mNQwVZW extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218508,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bKYRPJS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new VLJmFFe()).RYNMBky(dataArray);\n    }\n}\n\npublic class VLJmFFe {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218522,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mknWxPr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new oyMjvCE()).RYNMBky((Object) data);\n    }\n}\n\npublic class oyMjvCE {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218528,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rJcFBBp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218541,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DNpRRHz extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218544,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YVgNYuR extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218546,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KoJnojW extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218548,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KoJnojW extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218549,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class svRXNNp extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218551,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class UComNRJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = Byte.MIN_VALUE;\n            break;\n        }\n        while (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218569,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qLXLHgt extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        qRMEpGJ = true;\n        (new uVrFDzL()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class uVrFDzL {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (qLXLHgt.qRMEpGJ) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218574,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HeWaghB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218576,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IVdHEsc extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218578,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class aubBfTg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new ObYWRtY()).RYNMBky(data);\n    }\n}\n\npublic class ObYWRtY {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new nHlfZiP()).RYNMBky(data);\n    }\n}\n\npublic class jxSmfdJ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n\npublic class nHlfZiP {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new jxSmfdJ()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218588,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class fHGmDdZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new UxGANqO()).RYNMBky(dataArray);\n    }\n}\n\npublic class UxGANqO {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218594,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class NCXLHal extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new CscKBOt()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class CscKBOt {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218604,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class lnIHhaq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new tMRFBXa()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class tMRFBXa {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218606,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class BYmFHHn extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218617,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class QJeECEU extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218620,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class WvygXOS extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218622,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class xBsDEex extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218627,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RvGdLhj extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218629,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YUkSngp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218631,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class OonKeBi extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = Byte.MIN_VALUE;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218633,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vYnimWH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218634,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gbVFkmn extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218637,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class PdIEVyK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = Byte.MIN_VALUE;\n            break;\n        }\n        while (true) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218640,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lZyCZxb extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        for (int k = 0; k < 1; k++) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218643,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class iWJmlMh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218648,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class iWJmlMh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218649,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YAjAXHy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218651,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qwQhglj extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218653,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SjYlGVt extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218654,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gZUxMSE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new DSilTIJ()).RYNMBky(data);\n    }\n}\n\npublic class DSilTIJ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218656,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CGmdjiv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new biEWgoN()).ImBBndW();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class biEWgoN {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218664,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FlXrPCv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new fdoxCOc()).RYNMBky(dataArray);\n    }\n}\n\npublic class fdoxCOc {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218666,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bHgjMNz extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new JMRRcmX()).RYNMBky(dataContainer);\n    }\n}\n\npublic class JMRRcmX {\n\n    public void RYNMBky(bHgjMNz.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218668,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class JdWzYyR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new gABQgCL()).RYNMBky((Object) data);\n    }\n}\n\npublic class gABQgCL {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218672,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YMOKgtw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218683,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KlpzDda extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218684,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IVMGLQj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218686,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class kdgSkyp extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218688,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ZBggRfY extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218690,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hlgyUpe extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218692,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lmCKjsb extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218697,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class awVIQEo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218700,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LrPLTGK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218702,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qSnXtxd extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218716,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hqdVnTM {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (OEbpVRC.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (OEbpVRC.HHhrjCy) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (OEbpVRC.Pywwbtz) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class OEbpVRC extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        ydhDOMq = false;\n        (new hqdVnTM()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        HHhrjCy = true;\n        (new hqdVnTM()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new hqdVnTM()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218719,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vPJKKPZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218720,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jpHauNV extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218725,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GoMfoMm extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218727,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class BNUgFHs extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new fhXuCVF()).RYNMBky(dataContainer);\n    }\n}\n\npublic class fhXuCVF {\n\n    public void RYNMBky(BNUgFHs.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218740,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jXrWIQR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new zUEhZgT()).RYNMBky((Object) data);\n    }\n}\n\npublic class zUEhZgT {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218744,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class vAEmqdh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new VhvtQOf()).RYNMBky(dataVector);\n    }\n}\n\npublic class VhvtQOf {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218746,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class eOiKmOo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218754,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lEKZHeM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218758,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gnclUbu extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218762,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class kRddxLo extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218765,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lIeYHzv extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218766,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YaPEcqV extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = Byte.MIN_VALUE;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218777,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ultCEPE extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218779,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YCXdJoM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = Byte.MIN_VALUE;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218786,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jciXKXm extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218789,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HmvQlbP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new xanXbgW()).RYNMBky(data);\n    }\n}\n\npublic class IxBVmJG {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new qUDIMOE()).RYNMBky(data);\n    }\n}\n\npublic class qUDIMOE {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class xanXbgW {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new IxBVmJG()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218804,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sVOPUJW {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n}\n\npublic class HWajlnn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new sVOPUJW()).wHnwAlc();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new sVOPUJW()).snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218809,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GPyWISR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new ZUudgym()).RYNMBky(dataArray);\n    }\n}\n\npublic class ZUudgym {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218810,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class XZgLAVG {\n\n    \n    public void fDqjRYE(NNcxrtA.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(NNcxrtA.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class NNcxrtA extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new XZgLAVG()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new XZgLAVG()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218813,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SWddNLF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new QIHMgcS()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class QIHMgcS {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218824,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hpFZtKd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218827,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qGyXxuq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218828,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qGyXxuq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218829,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bsngDXv extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218834,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class waASwRQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218847,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RMCnOqW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218853,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nyveapw extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218861,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hybGuhx extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218871,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class PwDWChZ extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new ngCjsCU()).RYNMBky(dataContainer);\n    }\n}\n\npublic class ngCjsCU {\n\n    public void RYNMBky(PwDWChZ.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218884,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gSPlKkW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new abWlLGg()).RYNMBky((Object) data);\n    }\n}\n\npublic class abWlLGg {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218888,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class LphDJMm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new OnMCfll()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class OnMCfll {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218892,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CnsWGgt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218902,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uhRcOiy extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218919,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LJabffg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218923,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class POrlFyZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218925,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vCMStQY extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new MCgAwQz()).RYNMBky(dataContainer);\n    }\n}\n\npublic class MCgAwQz {\n\n    public void RYNMBky(vCMStQY.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218956,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HFtkvSA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218973,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pAoLwzx extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218985,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IhPmFOS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218986,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rMscPJf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219002,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rMscPJf extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int k = 0; k < 1; k++) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219003,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wHkQxof {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new Zdxnbcw()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new Zdxnbcw()).KgJSeXB(data);\n    }\n}\n\npublic class WSYPOqa {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new wHkQxof()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new wHkQxof()).KgJSeXB(data);\n    }\n}\n\npublic class UtzoxNP {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class Zdxnbcw {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new UtzoxNP()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new UtzoxNP()).KgJSeXB(data);\n    }\n}\n\npublic class RhYOPem extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new WSYPOqa()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new WSYPOqa()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219023,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class AvtiAnG {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n}\n\npublic class vGcxNxz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new AvtiAnG()).wHnwAlc();\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new AvtiAnG()).snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219025,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class XzdacyZ extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new nmOvXCD()).RYNMBky(dataContainer);\n    }\n}\n\npublic class nmOvXCD {\n\n    public void RYNMBky(XzdacyZ.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219028,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pixhbMq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219043,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wkzThBL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219047,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sCjVVwE extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219050,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HgQcRPE extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219057,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class eySStYr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219060,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class AFZWcVZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219062,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gtxEsSC extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219087,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qZphErw {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n}\n\npublic class hTMLaxz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new qZphErw()).wHnwAlc();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new qZphErw()).snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219097,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class lGmYzHj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219116,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vsMlfrI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219118,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vsMlfrI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219119,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class OrmjKnH extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219122,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class OrmjKnH extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219123,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kOvsZkJ extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218258,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JhdDuCo extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218265,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dkagAoE extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218293,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ytynKra extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218346,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bvFfGrP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new gzDudhr()).ImBBndW();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class gzDudhr {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218376,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tSUyjRt extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218407,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vBJhudH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218416,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ijLQvQs extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218425,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GBtQwDd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218433,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class eruZqWp extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new UwXiyEs()).RYNMBky();\n    }\n}\n\npublic class UwXiyEs {\n\n    public void RYNMBky() throws Throwable {\n        byte data = eruZqWp.data;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218454,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class wcLPJaP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new JUpkUvF()).RYNMBky(dataVector);\n    }\n}\n\npublic class JUpkUvF {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218458,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nPQaiHT extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218469,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PkvYJMe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218505,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class VLJmFFe {\n\n    \n    public void fDqjRYE(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class bKYRPJS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new VLJmFFe()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new VLJmFFe()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218523,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HsUeKVF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218558,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DROTQvq extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new RbaycUy()).RYNMBky(dataContainer);\n    }\n}\n\npublic class RbaycUy {\n\n    public void RYNMBky(DROTQvq.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218596,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vERWcNy {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n\npublic class JERRRXV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new vERWcNy()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new vERWcNy()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218601,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KMxoejQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218611,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class OonKeBi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218632,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FrJWzHg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new oazYkxW()).RYNMBky(data);\n    }\n}\n\npublic class iIyGpRG {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class oazYkxW {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new pdKmxhG()).RYNMBky(data);\n    }\n}\n\npublic class pdKmxhG {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new iDeOkQC()).RYNMBky(data);\n    }\n}\n\npublic class iDeOkQC {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new iIyGpRG()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218734,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gnclUbu extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218763,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tCETOCq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218770,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RhhZquN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218775,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uxbgbXc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MIN_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218782,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class Dpccold extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218797,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ZUudgym {\n\n    \n    public void fDqjRYE(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class GPyWISR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new ZUudgym()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new ZUudgym()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218811,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class NTZZotm {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class ZlbCriI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new NTZZotm()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new NTZZotm()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218821,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class waASwRQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218846,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SPZxxsy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218848,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SUaVnxS extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218868,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ajsfgFO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218899,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lNDifQZ {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (xcWGGau.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (xcWGGau.HHhrjCy) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (xcWGGau.Pywwbtz) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class xcWGGau extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        ydhDOMq = false;\n        (new lNDifQZ()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        HHhrjCy = true;\n        (new lNDifQZ()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new lNDifQZ()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218935,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class yhAzuOr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218939,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ySXqRLo {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class KshXTrm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new ySXqRLo()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new ySXqRLo()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218969,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class VizIYoe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218971,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IhPmFOS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218987,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bvidaho {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class IsiowQX {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new SsdnbpD()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new SsdnbpD()).KgJSeXB(data);\n    }\n}\n\npublic class SsdnbpD {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new bvidaho()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new bvidaho()).KgJSeXB(data);\n    }\n}\n\npublic class UEIwYYh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new IsiowQX()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new IsiowQX()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219021,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sCjVVwE extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219051,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class UKUXTXf extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219126,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qQJAaRf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data < 0) \n                {\n                    \n                    if (data > (Integer.MIN_VALUE / 2)) {\n                        int result = (int) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    if (data > (Integer.MIN_VALUE / 2)) {\n                        int result = (int) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219143,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class orJfAwm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219153,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class yDnGjWR extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        int data = EuzMspW;\n        if (data < 0) \n        {\n            \n            int result = (int) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219158,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class DKegPhF {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new oPsyjPP()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new oPsyjPP()).KgJSeXB(data);\n    }\n}\n\npublic class tKXddob {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (data < 0) \n        {\n            \n            int result = (int) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        if (data < 0) \n        {\n            \n            if (data > (Integer.MIN_VALUE / 2)) {\n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n\npublic class oPsyjPP {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new oAmgkBD()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new oAmgkBD()).KgJSeXB(data);\n    }\n}\n\npublic class oAmgkBD {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new tKXddob()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new tKXddob()).KgJSeXB(data);\n    }\n}\n\npublic class CvXReaK extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new DKegPhF()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new DKegPhF()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219167,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RUqENYO extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219195,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BVTTFCx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219206,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class uBHqimP extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219209,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MKAUKZx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data > Integer.MIN_VALUE) {\n                data--;\n                int result = (int) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            data--;\n            int result = (int) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219221,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MqfCtfj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new lpsLsxn()).RYNMBky(data);\n    }\n}\n\npublic class lpsLsxn {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new lRCtFeS()).RYNMBky(data);\n    }\n}\n\npublic class lRCtFeS {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        data--;\n        int result = (int) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219234,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bwDoPAs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new vjFxYUj()).RYNMBky(data);\n    }\n}\n\npublic class vjFxYUj {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new OlcXgds()).RYNMBky(data);\n    }\n}\n\npublic class OlcXgds {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new csSyGjs()).RYNMBky(data);\n    }\n}\n\npublic class csSyGjs {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        data--;\n        int result = (int) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219236,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class uWXzaYR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new NPgWoVU()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class NPgWoVU {\n\n    public void RYNMBky(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        data--;\n        int result = (int) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219252,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HqRcSjp extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219269,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ULhJTvZ extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219272,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ULhJTvZ extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219273,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class CLZBIyn {\n\n    \n    public void fDqjRYE(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int result = (int) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        if (data > Integer.MIN_VALUE) {\n            int result = (int) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class tgwnPXq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new CLZBIyn()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new CLZBIyn()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219323,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class hELhlvn extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219345,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BQouibR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219347,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RRGXtIv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219349,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class OUEpKGm {\n\n    \n    public void ZpnQtvQ(int data) throws Throwable {\n        if (PJbwsAR.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(int data) throws Throwable {\n        if (PJbwsAR.HHhrjCy) {\n            \n            if (data > Integer.MIN_VALUE) {\n                int result = (int) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (PJbwsAR.Pywwbtz) {\n            \n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class PJbwsAR extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new OUEpKGm()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new OUEpKGm()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new OUEpKGm()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219367,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oKPYUMV extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219370,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NJzpoUX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new lmKJjBx()).RYNMBky(data);\n    }\n}\n\npublic class DGaPxPu {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new NeYSXHt()).RYNMBky(data);\n    }\n}\n\npublic class NeYSXHt {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class lmKJjBx {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new DGaPxPu()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219380,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WoetzRv extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new zRUSPpU()).RYNMBky(dataContainer);\n    }\n}\n\npublic class zRUSPpU {\n\n    public void RYNMBky(WoetzRv.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219388,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TZjgLVT extends AbstractTestCase {\n\n    public static int data;\n\n    public void boNMSnT() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new dbAViuZ()).RYNMBky();\n    }\n}\n\npublic class dbAViuZ {\n\n    public void RYNMBky() throws Throwable {\n        int data = TZjgLVT.data;\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219390,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class lUouXvu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new OsPqUAO()).RYNMBky((Object) data);\n    }\n}\n\npublic class OsPqUAO {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219392,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class oFJhJWU {\n\n    \n    public void fDqjRYE(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        if (data > Integer.MIN_VALUE) {\n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class XPHgMUr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new oFJhJWU()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new oFJhJWU()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219397,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jhirdlD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new LZXrtIg()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class LZXrtIg {\n\n    public void RYNMBky(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219398,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LZXrtIg {\n\n    \n    public void fDqjRYE(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        int result = (int) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        if (data > Integer.MIN_VALUE) {\n            int result = (int) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class jhirdlD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new LZXrtIg()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new LZXrtIg()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219399,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RNBSObZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data < 0) \n        {\n            \n            int result = (int) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219402,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CBDTfNF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219405,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zGHMEMq extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219410,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pccxRZM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                int result = (int) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Integer.MIN_VALUE / 2)) {\n                    int result = (int) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219427,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kVKoNnF extends AbstractTestCase {\n\n    private int ImBBndW() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data = ImBBndW();\n        if (data < 0) \n        {\n            \n            int result = (int) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219444,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cEwkyrb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new VoqtxBl()).RYNMBky((Object) data);\n    }\n}\n\npublic class VoqtxBl {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        if (data < 0) \n        {\n            \n            int result = (int) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219464,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class opZZovm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        data--;\n        int result = (int) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219474,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jtdlstm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218270,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fKESpmL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data < 0) \n                {\n                    \n                    if (data > (Byte.MIN_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    if (data > (Byte.MIN_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218279,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class EiujSCp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218280,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HLvZMKb extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218284,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DvyOqft extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218361,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mdzYZFf {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new jXYvjxQ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new jXYvjxQ()).KgJSeXB(data);\n    }\n}\n\npublic class jXYvjxQ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class OPmYXIY extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new mdzYZFf()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new mdzYZFf()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218371,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QqNbSUa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new nxaGYhS()).RYNMBky(data);\n    }\n}\n\npublic class VxCJKzs {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class iwoYLqp {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new VxCJKzs()).RYNMBky(data);\n    }\n}\n\npublic class nxaGYhS {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new iwoYLqp()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218372,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VxCJKzs {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class iwoYLqp {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new VxCJKzs()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new VxCJKzs()).KgJSeXB(data);\n    }\n}\n\npublic class nxaGYhS {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new iwoYLqp()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new iwoYLqp()).KgJSeXB(data);\n    }\n}\n\npublic class QqNbSUa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new nxaGYhS()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new nxaGYhS()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218373,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CCVWmky {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class xmmTiTO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new CCVWmky()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new CCVWmky()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218385,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class QgaTOeZ {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class nOfIDiP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QgaTOeZ()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QgaTOeZ()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218389,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SmUCmvC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218398,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jpOfjYI extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218400,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DXlXxZq {\n\n    \n    public void fDqjRYE(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class CuEyagD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new DXlXxZq()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new DXlXxZq()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218451,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LjdBurM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218471,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eggRiOf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218493,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CmtvMzD extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218511,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class xxlSMKu {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new aFBCyFU()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new aFBCyFU()).KgJSeXB(data);\n    }\n}\n\npublic class aFBCyFU {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new ypZtkAc()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new ypZtkAc()).KgJSeXB(data);\n    }\n}\n\npublic class ypZtkAc {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class gtjGSrI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new xxlSMKu()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new xxlSMKu()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218517,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TguizhY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new KCHmvcb()).RYNMBky(data);\n    }\n}\n\npublic class zkoHtmP {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new GORsUIu()).RYNMBky(data);\n    }\n}\n\npublic class VSKFdyw {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class KCHmvcb {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new zkoHtmP()).RYNMBky(data);\n    }\n}\n\npublic class GORsUIu {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new VSKFdyw()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218518,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JAZrMap extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new uZHAgpf()).RYNMBky(dataVector);\n    }\n}\n\npublic class uZHAgpf {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218530,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TglqAZd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new NxHizEB()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class NxHizEB {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218536,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wTQUZmZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218554,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HsUeKVF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218559,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wsgaAyT extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        for (int k = 0; k < 1; k++) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218571,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lGXLJrY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new VxDCylN()).RYNMBky(data);\n    }\n}\n\npublic class VxDCylN {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218584,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class iYkZXUj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new WhUaaIX()).RYNMBky(dataVector);\n    }\n}\n\npublic class WhUaaIX {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218602,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RvGdLhj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218628,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hHaLTuf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new CNxerJi()).RYNMBky(data);\n    }\n}\n\npublic class CNxerJi {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new DnVJczk()).RYNMBky(data);\n    }\n}\n\npublic class DnVJczk {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218658,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CBTGvPT extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MIN_VALUE;\n        (new jrIjNxx()).RYNMBky();\n    }\n}\n\npublic class jrIjNxx {\n\n    public void RYNMBky() throws Throwable {\n        byte data = CBTGvPT.data;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218670,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KAziEiZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218699,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ngpMARQ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = Byte.MIN_VALUE;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218705,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vPJKKPZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218721,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CmauYVH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new XcIsDrJ()).RYNMBky(data);\n    }\n}\n\npublic class XcIsDrJ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218728,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class TWSKDUE extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218761,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RhhZquN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218774,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class TtkuaKG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MIN_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218792,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class cWanEIq extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218833,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class kaAsRWy extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218840,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class kaAsRWy extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218841,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ynZgbRZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data < 0) \n                {\n                    \n                    if (data > (Byte.MIN_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    if (data > (Byte.MIN_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"eHwmCBF\");\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218855,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bkoovCr extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n            break;\n        }\n        while (true) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218857,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CtWmFEt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int j = 0; j < 1; j++) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218858,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hybGuhx extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218870,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class abWlLGg {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n\npublic class gSPlKkW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new abWlLGg()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new abWlLGg()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218889,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class NJaGUmE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new EBalgWg()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class EBalgWg {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218894,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hgJQLTn extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218909,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KQIAKKC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218914,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class aKqUBer extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218921,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class POrlFyZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218924,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class iHmLWdV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new QtGgbRt()).RYNMBky(data);\n    }\n}\n\npublic class RXNQjYz {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class QtGgbRt {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new RXNQjYz()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218946,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RXNQjYz {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class QtGgbRt {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new RXNQjYz()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new RXNQjYz()).KgJSeXB(data);\n    }\n}\n\npublic class iHmLWdV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new QtGgbRt()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new QtGgbRt()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218947,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RCozhOg {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = LXzdKQc.data;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = LXzdKQc.data;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class LXzdKQc extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new RCozhOg()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new RCozhOg()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218959,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class lXKanLx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new cHWpQbC()).RYNMBky(dataVector);\n    }\n}\n\npublic class cHWpQbC {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218962,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wIxByGX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218998,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SNWWBRj extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219014,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class bCSdMIN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new NehDbtQ()).RYNMBky(dataVector);\n    }\n}\n\npublic class NehDbtQ {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219034,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class wfjUfim extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new NSJMRfI()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class NSJMRfI {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219036,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class TgOtWgq extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1219055,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TQbkCwh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218266,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class foxeTXe extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218268,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KIjGKkk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218277,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aqnDGzs extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218289,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oXLwERj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new HFdxvKF()).RYNMBky(data);\n    }\n}\n\npublic class HFdxvKF {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218296,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class xnPGGrb {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class JkeXFEc extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new xnPGGrb()).wHnwAlc();\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new xnPGGrb()).snawHrb();\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218305,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yOOoFtC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new CvaTKit()).RYNMBky(dataVector);\n    }\n}\n\npublic class CvaTKit {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218314,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gzYKtnf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218340,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class atvoQjm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218343,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KtApOoF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218350,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class iePAlHl {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class OtSoBFH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new iePAlHl()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new iePAlHl()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218369,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SKXurtd extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new ajjqOyI()).RYNMBky();\n    }\n}\n\npublic class ajjqOyI {\n\n    public void RYNMBky() throws Throwable {\n        byte data = SKXurtd.data;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218382,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jKjipmg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218397,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JhbqjyO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218408,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aDZIOhF extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218427,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ujzKSXx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218428,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UcGnHVu {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new FIIgsfD()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new FIIgsfD()).KgJSeXB(data);\n    }\n}\n\npublic class FIIgsfD {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class liKUSxp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new UcGnHVu()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new UcGnHVu()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218443,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AowFYZj {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new pnolDXF()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new pnolDXF()).KgJSeXB(data);\n    }\n}\n\npublic class pnolDXF {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class ollPufQ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new AowFYZj()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new AowFYZj()).KgJSeXB(data);\n    }\n}\n\npublic class WHvANUA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new ollPufQ()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new ollPufQ()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218445,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class JFXJYmQ {\n\n    \n    public void fDqjRYE(LmWFMvd.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LmWFMvd.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class LmWFMvd extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new JFXJYmQ()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new JFXJYmQ()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218453,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BqvYjrI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new zFVcRHI()).RYNMBky((Object) data);\n    }\n}\n\npublic class zFVcRHI {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218456,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hQXNJhh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218494,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oWZaPSM extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218501,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mNQwVZW extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218509,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gtjGSrI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new xxlSMKu()).RYNMBky(data);\n    }\n}\n\npublic class xxlSMKu {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new aFBCyFU()).RYNMBky(data);\n    }\n}\n\npublic class aFBCyFU {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new ypZtkAc()).RYNMBky(data);\n    }\n}\n\npublic class ypZtkAc {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218516,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WwTxPHo {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = PSVLiHE.data;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = PSVLiHE.data;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class PSVLiHE extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new WwTxPHo()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new WwTxPHo()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218527,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class oyMjvCE {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class mknWxPr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new oyMjvCE()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new oyMjvCE()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218529,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YVgNYuR extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218547,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class svRXNNp extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218550,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lOjzeLj extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218553,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wTQUZmZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218555,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nSNlYEd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218560,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class WXtalxe extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MIN_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data < 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218566,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ObYWRtY {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new nHlfZiP()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new nHlfZiP()).KgJSeXB(data);\n    }\n}\n\npublic class jxSmfdJ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n\npublic class nHlfZiP {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new jxSmfdJ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new jxSmfdJ()).KgJSeXB(data);\n    }\n}\n\npublic class aubBfTg extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new ObYWRtY()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new ObYWRtY()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218589,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jUMMjCv extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MIN_VALUE;\n        (new rdczTKX()).RYNMBky();\n    }\n}\n\npublic class rdczTKX {\n\n    public void RYNMBky() throws Throwable {\n        byte data = jUMMjCv.data;\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218598,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class XLBpdun extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218612,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ssqyEfN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218614,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vYnimWH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218635,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IkgSfAq {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (ilDhnRd.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (ilDhnRd.HHhrjCy) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (ilDhnRd.Pywwbtz) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class ilDhnRd extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        ydhDOMq = false;\n        (new IkgSfAq()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        HHhrjCy = true;\n        (new IkgSfAq()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new IkgSfAq()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218647,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YAjAXHy extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218650,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class WUPySwQ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new qqeKyKH()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new qqeKyKH()).KgJSeXB(data);\n    }\n}\n\npublic class qmJTBBz {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class fHcTBgx {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new qmJTBBz()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new qmJTBBz()).KgJSeXB(data);\n    }\n}\n\npublic class qqeKyKH {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new fHcTBgx()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new fHcTBgx()).KgJSeXB(data);\n    }\n}\n\npublic class nznlNgS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new WUPySwQ()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new WUPySwQ()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218663,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gABQgCL {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class JdWzYyR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new gABQgCL()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new gABQgCL()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218673,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class MXvTqEB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new SbtPikv()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class SbtPikv {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218678,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hITSyUt {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class kUhYwcf extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new hITSyUt()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new hITSyUt()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218681,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mxsbRHP extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218694,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GQfKEUN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MIN_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218710,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YYDSgHq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new qLtyujJ()).RYNMBky(dataArray);\n    }\n}\n\npublic class qLtyujJ {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218738,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bjVQfMi extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MIN_VALUE;\n        (new QqREdix()).RYNMBky();\n    }\n}\n\npublic class QqREdix {\n\n    public void RYNMBky() throws Throwable {\n        byte data = bjVQfMi.data;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218742,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class QqREdix {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = bjVQfMi.data;\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = bjVQfMi.data;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class bjVQfMi extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new QqREdix()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = Byte.MIN_VALUE;\n        (new QqREdix()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218743,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class EBFIFGL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UShYKfj()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class UShYKfj {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (--data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218748,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class eOiKmOo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218755,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class kjbBvkk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218756,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lEKZHeM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218759,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tCETOCq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MIN_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218771,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jciXKXm extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218788,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sHwZVXR {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (MLViQFN.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (MLViQFN.HHhrjCy) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (data - 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"UGhJJEE\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (MLViQFN.Pywwbtz) {\n            \n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class MLViQFN extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        ydhDOMq = false;\n        (new sHwZVXR()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MIN_VALUE;\n        HHhrjCy = true;\n        (new sHwZVXR()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new sHwZVXR()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218791,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class Azhdxst extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218794,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qcHllMJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new SNVDgMN()).RYNMBky(data);\n    }\n}\n\npublic class SNVDgMN {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218800,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SNVDgMN {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class qcHllMJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new SNVDgMN()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new SNVDgMN()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218801,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CgvyzwB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new VgOEAUy()).RYNMBky(data);\n    }\n}\n\npublic class ukkUkql {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class VgOEAUy {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new ukkUkql()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218802,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ukkUkql {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            byte result = (byte) (data - 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"UGhJJEE\");\n        }\n    }\n}\n\npublic class VgOEAUy {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new ukkUkql()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new ukkUkql()).KgJSeXB(data);\n    }\n}\n\npublic class CgvyzwB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new VgOEAUy()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new VgOEAUy()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218803,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pGmgzdK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        (new UJXtQUF()).RYNMBky(data);\n    }\n}\n\npublic class EgWlQsE {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new hBAvWoo()).RYNMBky(data);\n    }\n}\n\npublic class agvaRZj {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class hBAvWoo {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new agvaRZj()).RYNMBky(data);\n    }\n}\n\npublic class UJXtQUF {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new EgWlQsE()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218806,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class HWajlnn extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new sVOPUJW()).ImBBndW();\n        \n        byte result = (byte) (data - 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class sVOPUJW {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MIN_VALUE;\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218808,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class cWanEIq extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218832,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class bsngDXv extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218835,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class WKmOqcZ extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218839,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class TGcBUvR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data < 0) \n            {\n                \n                if (data > (Byte.MIN_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"eHwmCBF\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218843,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GSzFxtT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new JsRfjJv()).RYNMBky(data);\n    }\n}\n\npublic class JsRfjJv {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218872,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class zWOWghr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new nNXzSSO()).RYNMBky(data);\n    }\n}\n\npublic class nNXzSSO {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new pByYnhu()).RYNMBky(data);\n    }\n}\n\npublic class pByYnhu {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218874,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class fSnZAMx {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        if (data < 0) \n        {\n            \n            if (data > (Byte.MIN_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"eHwmCBF\");\n            }\n        }\n    }\n}\n\npublic class SxiwMSV {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new fSnZAMx()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new fSnZAMx()).KgJSeXB(data);\n    }\n}\n\npublic class jMKQARt {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new SxiwMSV()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new SxiwMSV()).KgJSeXB(data);\n    }\n}\n\npublic class yrvSkBH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new jMKQARt()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new jMKQARt()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218877,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class UuRWuoc extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218905,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class cLZMuut extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218906,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KQIAKKC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218915,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uhRcOiy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218918,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vpQFYpI extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int k = 0; k < 1; k++) {\n            \n            if (data > Byte.MIN_VALUE) {\n                data--;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218931,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FUxeUhf extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218940,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class gTrBnEA extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218943,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uOylxvH {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class zZCkdAc extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new uOylxvH()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new uOylxvH()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218945,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class OdzgscT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new cxWWHDk()).ImBBndW();\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class cxWWHDk {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218952,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class MCgAwQz {\n\n    \n    public void fDqjRYE(vCMStQY.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(vCMStQY.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class vCMStQY extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new MCgAwQz()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new MCgAwQz()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218957,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class cHWpQbC {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        data--;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        if (data > Byte.MIN_VALUE) {\n            data--;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"sqeFTai\");\n        }\n    }\n}\n\npublic class lXKanLx extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new cHWpQbC()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new cHWpQbC()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218963,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rawSVQh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218993,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-191"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class NXIiTwM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (--data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data > Byte.MIN_VALUE) {\n                byte result = (byte) (--data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"sqeFTai\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1218995,
    "RELATED_CWE": [
      "CWE-190",
      "CWE-121",
      "CWE-122"
    ]
  }
]