[
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class WfHQMPE extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.staticReturnsTrueOrFalse()) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242949,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class WXXvWPz extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (IO.staticTrue) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242979,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class OJtenwH extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (IO.staticReturnsTrue()) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242981,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class EMEIKtf extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    float num = 0;\n                    IO.writeString(\"uZCqPzl\");\n                    try {\n                        num = Float.parseFloat(readerBuffered.readLine());\n                    } catch (NumberFormatException exceptionNumberFormat) {\n                        IO.writeLine(\"BUCuAbH\");\n                    }\n                    \n                    if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                        IO.writeLine(\"OmbHuIX\");\n                    } else {\n                        IO.writeLine(\"IbXSDGu\" + (int) num);\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        switch(7) {\n            case 7:\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    float num = 0;\n                    IO.writeString(\"uZCqPzl\");\n                    try {\n                        num = Float.parseFloat(readerBuffered.readLine());\n                    } catch (NumberFormatException exceptionNumberFormat) {\n                        IO.writeLine(\"BUCuAbH\");\n                    }\n                    \n                    if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                        IO.writeLine(\"OmbHuIX\");\n                    } else {\n                        IO.writeLine(\"IbXSDGu\" + (int) num);\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242989,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class yYZjSJo extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (true) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242929,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class bjzarhk extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (IO.STATIC_FINAL_TRUE) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242943,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class UceIwJd extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (true) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                    IO.writeLine(\"OmbHuIX\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) num);\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242963,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class LoBGSWi extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                IO.writeString(\"EJBDHUp\");\n                float num = 0;\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num < 0) {\n                    IO.writeLine(\"RWEhAAE\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) (Math.sqrt(num)));\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (5 == 5) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                IO.writeString(\"EJBDHUp\");\n                float num = 0;\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num < 0) {\n                    IO.writeLine(\"RWEhAAE\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) (Math.sqrt(num)));\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242999,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class JfRShLu extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                IO.writeString(\"EJBDHUp\");\n                float num = 0;\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num < 0) {\n                    IO.writeLine(\"RWEhAAE\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) (Math.sqrt(num)));\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (IO.staticReturnsTrue()) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                IO.writeString(\"EJBDHUp\");\n                float num = 0;\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num < 0) {\n                    IO.writeLine(\"RWEhAAE\");\n                } else {\n                    IO.writeLine(\"IbXSDGu\" + (int) (Math.sqrt(num)));\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243015,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class yYZjSJo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        if (true) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double doubleNumber = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    doubleNumber = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                IO.writeLine(\"IbXSDGu\" + (float) doubleNumber);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242928,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class sCSTpHt extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (privateTrue) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242935,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class WZWnaHW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        if (IO.staticReturnsTrue()) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double doubleNumber = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    doubleNumber = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                IO.writeLine(\"IbXSDGu\" + (float) doubleNumber);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242946,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class WfHQMPE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        if (IO.staticReturnsTrueOrFalse()) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double doubleNumber = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    doubleNumber = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                IO.writeLine(\"IbXSDGu\" + (float) doubleNumber);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242948,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class UiQfGlZ extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    double num = 0;\n                    IO.writeString(\"fylVcMD\");\n                    try {\n                        num = Double.parseDouble(readerBuffered.readLine());\n                    } catch (NumberFormatException exceptionNumberFormat) {\n                        IO.writeLine(\"BUCuAbH\");\n                    }\n                    \n                    if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                        IO.writeLine(\"vefaTXM\");\n                        return;\n                    }\n                    IO.writeLine(\"IbXSDGu\" + (float) num);\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        switch(7) {\n            case 7:\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    double num = 0;\n                    IO.writeString(\"fylVcMD\");\n                    try {\n                        num = Double.parseDouble(readerBuffered.readLine());\n                    } catch (NumberFormatException exceptionNumberFormat) {\n                        IO.writeLine(\"BUCuAbH\");\n                    }\n                    \n                    if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                        IO.writeLine(\"vefaTXM\");\n                        return;\n                    }\n                    IO.writeLine(\"IbXSDGu\" + (float) num);\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242955,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class xEAsYtZ extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        while (true) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242957,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class NvrlDJP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n    }\n\n    private void sEXYVUh() throws Throwable {\n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            float num = 0;\n            IO.writeString(\"uZCqPzl\");\n            try {\n                num = Float.parseFloat(readerBuffered.readLine());\n            } catch (NumberFormatException exceptionNumberFormat) {\n                IO.writeLine(\"BUCuAbH\");\n            }\n            \n            if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                IO.writeLine(\"OmbHuIX\");\n            } else {\n                IO.writeLine(\"IbXSDGu\" + (int) num);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242961,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class WpVlxqm extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        if (privateFive == 5) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                float num = 0;\n                IO.writeString(\"uZCqPzl\");\n                try {\n                    num = Float.parseFloat(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                IO.writeLine(\"IbXSDGu\" + (int) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242972,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class YocSygq extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (5 == 5) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242931,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class PPtnAAR extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double num = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    num = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                if (num > Float.MAX_VALUE || num < Float.MIN_VALUE) {\n                    IO.writeLine(\"vefaTXM\");\n                    return;\n                }\n                IO.writeLine(\"IbXSDGu\" + (float) num);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242933,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  },
  {
    "CWE_ID": [
      "CWE-681"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.*;\nimport java.util.logging.Level;\n\npublic class sCSTpHt extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        if (privateTrue) {\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                double doubleNumber = 0;\n                IO.writeString(\"fylVcMD\");\n                try {\n                    doubleNumber = Double.parseDouble(readerBuffered.readLine());\n                } catch (NumberFormatException exceptionNumberFormat) {\n                    IO.writeLine(\"BUCuAbH\");\n                }\n                \n                IO.writeLine(\"IbXSDGu\" + (float) doubleNumber);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1242934,
    "RELATED_CWE": [
      "CWE-352",
      "CWE-601",
      "CWE-918"
    ]
  }
]