[
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tpSnlTz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202627,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qTxUwQl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202628,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XtgFidK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202630,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class owffdIo extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202633,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class JWOKcdg extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202635,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class aEQnbZi extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202641,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ezEoqEJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202642,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ezEoqEJ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202643,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XDbXiAE extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202645,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XIBaaoD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202651,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tOGsste extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202653,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ItqgBNX extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202659,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vtavSDG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202665,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class SAFVEIL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202703,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class athDEFk extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202704,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ReNmHyn extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202715,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EXDotGS extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202729,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BIKFrRN extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202731,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VDGsiYv extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new eJkWNfa()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class eJkWNfa {\n\n    public void RYNMBky(int data) throws Throwable {\n        if (VDGsiYv.qRMEpGJ) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202734,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tBGUAeP extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202738,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tBGUAeP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202739,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class PSwQGGx extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202741,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class UZIwWOa extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202743,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rinDVRj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new zouTADw()).RYNMBky(data);\n    }\n}\n\npublic class zouTADw {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new enfyzKw()).RYNMBky(data);\n    }\n}\n\npublic class enfyzKw {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new iOUboOU()).RYNMBky(data);\n    }\n}\n\npublic class iOUboOU {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202748,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MDUyjPs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new UtokqGS()).RYNMBky(dataArray);\n    }\n}\n\npublic class UtokqGS {\n\n    public void RYNMBky(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202754,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ROufFqK extends AbstractTestCase {\n\n    public static int data;\n\n    public void boNMSnT() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new qcsUZmk()).RYNMBky();\n    }\n}\n\npublic class qcsUZmk {\n\n    public void RYNMBky() throws Throwable {\n        int data = ROufFqK.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202758,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XYBqkUO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new qoGSnnt()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class qoGSnnt {\n\n    public void RYNMBky(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202764,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KEcdBWo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202775,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class SjwBbiF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202787,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XLJLSUD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202791,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class hhFuPQh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202792,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class hhFuPQh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202793,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RkONXxW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202796,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RkONXxW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202797,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BYsmzQi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202800,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BYsmzQi extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202801,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LaOtpFT extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202805,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LpNcGXW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202808,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WRWrOxx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new ljEmnrV()).RYNMBky(data);\n    }\n}\n\npublic class ljEmnrV {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new sMacigZ()).RYNMBky(data);\n    }\n}\n\npublic class sMacigZ {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202818,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class krMEDqm extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202852,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class aWkBkCd extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        } else {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202865,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class nnqDFWM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202917,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class SoDGhsz extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202919,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EpsbKAA extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202923,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class rMDSXbC extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202928,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LgvfHTm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202930,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class OiahQvN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202934,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KGRJvml extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        \n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202946,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KGRJvml extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202947,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class hUcswDP extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202957,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jEGYxmN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new MEpBJmI()).RYNMBky(data);\n    }\n}\n\npublic class MEpBJmI {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new JxptUrj()).RYNMBky(data);\n    }\n}\n\npublic class JxptUrj {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new vrHlPSY()).RYNMBky(data);\n    }\n}\n\npublic class LnGacTP {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n\npublic class vrHlPSY {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new LnGacTP()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202966,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RXiFoAC extends AbstractTestCase {\n\n    public static int data;\n\n    public void boNMSnT() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new VqXyDTM()).RYNMBky();\n    }\n}\n\npublic class VqXyDTM {\n\n    public void RYNMBky() throws Throwable {\n        int data = RXiFoAC.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202974,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class dIdcZPA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new aJTsden()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class aJTsden {\n\n    public void RYNMBky(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202980,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class kpSUEHo {\n\n    \n    public void fDqjRYE(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class CcbEzXM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new kpSUEHo()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new kpSUEHo()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202983,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RwYIorx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202991,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sZelhWp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203005,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LOfpVys extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203015,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pHakORe extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203017,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dhiUkud extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203019,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rCYIzHD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203027,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CPwNuLR extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203031,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CuPSzQt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203062,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CuPSzQt extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203063,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tJAzSlx extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203067,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ARveKJc extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203073,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DVQARuS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203075,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YEsNXrH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203077,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class EGiauEC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203086,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CMxQeDJ extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203098,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jKTgcMq {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class QbHItHN {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new BZIJLtX()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new BZIJLtX()).KgJSeXB(data);\n    }\n}\n\npublic class BZIJLtX {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new jKTgcMq()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new jKTgcMq()).KgJSeXB(data);\n    }\n}\n\npublic class DbYSxJC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new QbHItHN()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new QbHItHN()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203109,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class giuSYWv {\n\n    \n    public int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class NgvQYyE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = (new giuSYWv()).wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data = (new giuSYWv()).snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203113,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PZSGzHz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new HDLkWEb()).RYNMBky(dataArray);\n    }\n}\n\npublic class HDLkWEb {\n\n    public void RYNMBky(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203114,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OMNFcmJ extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new Jmrllcz()).RYNMBky(dataContainer);\n    }\n}\n\npublic class Jmrllcz {\n\n    public void RYNMBky(OMNFcmJ.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203116,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cPthkRu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nWsqHSI()).RYNMBky(dataVector);\n    }\n}\n\npublic class nWsqHSI {\n\n    public void RYNMBky(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203122,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class GitsMTW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JpPnvRD()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class JpPnvRD {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203128,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gWFOTaZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203131,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mXcAXRJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203140,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mXcAXRJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203141,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UkCqVGY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203145,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rSSJKTR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203149,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jMGezbt extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203153,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lOersNv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                IO.writeLine(array[data]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203158,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lOersNv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                IO.writeLine(array[data]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                IO.writeLine(array[data]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203159,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TCitOEm extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203163,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yHyAQnq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203171,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hMNfdjK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new ORroztn()).RYNMBky(data);\n    }\n}\n\npublic class iWgcjle {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n}\n\npublic class ORroztn {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new iWgcjle()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203178,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wovRwlF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new tEPgIXR()).RYNMBky(dataVector);\n    }\n}\n\npublic class tEPgIXR {\n\n    public void RYNMBky(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203194,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aYZyDMS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203274,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zmswXqq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203276,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tpmDusY extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203281,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GoPwruU extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203283,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jqRbRCp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203292,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jqRbRCp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203293,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qtRzMFE extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203297,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SGZDJmY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203299,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TmxvqBL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203313,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qTxUwQl extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202629,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LtMGcoz extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202638,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class JniXipk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202699,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ihKJzXj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202716,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class PtebTxU extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202785,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class emjqqOa extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202887,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class thLnfAg {\n\n    \n    public void fDqjRYE() throws Throwable {\n        int data = qQkCLeR.data;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        int data = qQkCLeR.data;\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class qQkCLeR extends AbstractTestCase {\n\n    public static int data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new thLnfAg()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new thLnfAg()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202903,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class nltTyjU {\n\n    \n    public void fDqjRYE(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class izaTzIZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new nltTyjU()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new nltTyjU()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202909,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wKNZEkd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202932,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NeQpNfI {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class OJgKdeD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new NeQpNfI()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new NeQpNfI()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202961,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MLLKtJR {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class BHyGUMS {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new MLLKtJR()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new MLLKtJR()).KgJSeXB(data);\n    }\n}\n\npublic class RCGhqME extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new BHyGUMS()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new BHyGUMS()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202963,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class CcbEzXM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Integer> dataHashMap = new HashMap<Integer, Integer>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new kpSUEHo()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class kpSUEHo {\n\n    public void RYNMBky(HashMap<Integer, Integer> dataHashMap) throws Throwable {\n        int data = dataHashMap.get(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202982,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hoVpjoe {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class cHhITky extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new hoVpjoe()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new hoVpjoe()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203033,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class HxqLGEO {\n\n    \n    public void fDqjRYE(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class plWZNNQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new HxqLGEO()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new HxqLGEO()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203053,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MNaikuD {\n\n    \n    public void fDqjRYE(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class gjOATGw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new MNaikuD()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new MNaikuD()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203187,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fkCqKSU {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class RwONmNL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new fkCqKSU()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new fkCqKSU()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203193,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TQfvdrH extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203215,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class asjviQP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203227,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sFixGAh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203233,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class geUHGBl extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203235,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wyfTRkV {\n\n    \n    public void fDqjRYE(VULSLfh.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(VULSLfh.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class VULSLfh extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new wyfTRkV()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new wyfTRkV()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203261,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VyhiUAJ {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class KIToZMx extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new VyhiUAJ()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new VyhiUAJ()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203265,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yEQknGC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203278,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AxBEKQT extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203285,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WozEWBr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new JWbBWyy()).RYNMBky((Object) data);\n    }\n}\n\npublic class JWbBWyy {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203336,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IrHsiwc {\n\n    \n    public void fDqjRYE(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class cdehwYA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new IrHsiwc()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new IrHsiwc()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203341,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DmmyqvX extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203361,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VsproLH extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203369,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BBqMLld extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203371,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IFIitUv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203372,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NagLLTf extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203381,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KzGFVQS extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203389,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HeYUvsf extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203432,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZAMauhU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203435,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dtilCKZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203511,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IsTxSHG extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                IO.writeLine(array[data]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                IO.writeLine(array[data]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        String stringNumber = properties.getProperty(\"data\");\n                        if (\n                        stringNumber != null) {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        String stringNumber = properties.getProperty(\"data\");\n                        if (\n                        stringNumber != null) {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203519,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class aNJVgIe extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new TXSsdIN()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class TXSsdIN {\n\n    public void RYNMBky(int data) throws Throwable {\n        if (aNJVgIe.qRMEpGJ) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203526,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JyZmNLO extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203530,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JClOTgN {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new pCxaWXz()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new pCxaWXz()).KgJSeXB(data);\n    }\n}\n\npublic class pCxaWXz {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new JubtVgk()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new JubtVgk()).KgJSeXB(data);\n    }\n}\n\npublic class YYqLQuY {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class JubtVgk {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new YYqLQuY()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new YYqLQuY()).KgJSeXB(data);\n    }\n}\n\npublic class auFZdqO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new JClOTgN()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new JClOTgN()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203543,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HsslniA extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203573,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kGRYEDr extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203593,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jvRpQBQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203601,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WXtfNoG extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203605,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ziFwLny {\n\n    \n    public void fDqjRYE(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class oIPBlus extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ziFwLny()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ziFwLny()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203627,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mzMjfSV extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203640,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cAXHJjy extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203644,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FLMheGL extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203657,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kQqrlte extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203659,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LdoHlRh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203706,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LdoHlRh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203707,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tQhJauJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203708,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tQhJauJ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203709,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZNrPkeA extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203712,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class aftboSt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203722,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class plVBQmv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203730,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qhLlpPf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getProperty(\"user.home\");\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203734,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tdApDyA extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(int data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203740,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GdiIuwt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203744,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JLjoQxS {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new IpOTFuE()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new IpOTFuE()).KgJSeXB(data);\n    }\n}\n\npublic class IpOTFuE {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class XyVOKGZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new JLjoQxS()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        (new JLjoQxS()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203755,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class fPiiiwX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203781,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zgbYivi extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203813,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RnXtbbv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203816,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RnXtbbv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203817,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BEbzZbX extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203823,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VZTIieT {\n\n    \n    public void fDqjRYE(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class ZCabQTo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new VZTIieT()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new VZTIieT()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203835,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MiIddcB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203851,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class fUIiwEx extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203859,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pjXpvqC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203872,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HasBMGM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203877,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class xzhWBwE {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new FPZIPHX()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new FPZIPHX()).KgJSeXB(data);\n    }\n}\n\npublic class FPZIPHX {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class drrbAym extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new xzhWBwE()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        (new xzhWBwE()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203899,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tnZTmnh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203946,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class UTiXeAJ {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new htFRmmM()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new htFRmmM()).KgJSeXB(data);\n    }\n}\n\npublic class oXkaunm {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class sOcwWDu {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new oXkaunm()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new oXkaunm()).KgJSeXB(data);\n    }\n}\n\npublic class htFRmmM {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new sOcwWDu()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new sOcwWDu()).KgJSeXB(data);\n    }\n}\n\npublic class mWANjWn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new UTiXeAJ()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        (new UTiXeAJ()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203975,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class iKuAKwH {\n\n    \n    public void fDqjRYE(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class dYLYtam extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iKuAKwH()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iKuAKwH()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203987,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ObyKJCA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203995,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class bAlzQlO extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204017,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qBPAxgo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                array[data] = 42;\n                \n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                array[data] = 42;\n                \n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getProperty(\"user.home\");\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    array[data] = 42;\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getProperty(\"user.home\");\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    array[data] = 42;\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204023,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RuwPatM {\n\n    \n    public void ZpnQtvQ(int data) throws Throwable {\n        if (HXDmuDe.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(int data) throws Throwable {\n        if (HXDmuDe.HHhrjCy) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (HXDmuDe.Pywwbtz) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class HXDmuDe extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        ydhDOMq = false;\n        (new RuwPatM()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            try {\n                data = Integer.parseInt(stringNumber.trim());\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n            }\n        }\n        HHhrjCy = true;\n        (new RuwPatM()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new RuwPatM()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204031,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class knCzTEA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204068,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class hFIVqnP extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204073,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BppnGqj extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204083,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class rNgfDwx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204085,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XlnJSBL extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204097,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class vdZflxu extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204099,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ScGGbSU extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204101,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class ryHFsUw {\n\n    \n    public void fDqjRYE(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class dGoKfQk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new ryHFsUw()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new ryHFsUw()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204133,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class IlFmWRr extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204143,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XUbVerP extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204148,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class TYzpwql extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204178,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class cfzBjGa {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class OePayAm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new cfzBjGa()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new cfzBjGa()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204201,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class kCtfnPb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204240,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class oFMGZxA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JWOaKfL()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class JWOaKfL {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204280,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class mINphtR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204283,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class hptcOBu extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204291,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class Jiouldx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204303,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pCHVEoc {\n\n    \n    public void fDqjRYE() throws Throwable {\n        int data = EOxkjAE.data;\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        int data = EOxkjAE.data;\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class EOxkjAE extends AbstractTestCase {\n\n    public static int data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new pCHVEoc()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new pCHVEoc()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204343,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class RXQikjw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204374,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class uZZvHMe extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204381,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class vDpRXlc extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204389,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HxspBNC {\n\n    \n    public void ZpnQtvQ(int data) throws Throwable {\n        if (RdlUVEz.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(int data) throws Throwable {\n        if (RdlUVEz.HHhrjCy) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (RdlUVEz.Pywwbtz) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class RdlUVEz extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new HxspBNC()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new HxspBNC()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new HxspBNC()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204391,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class AYMLlTJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204393,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lQkhsCT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new zJeHikc()).RYNMBky(data);\n    }\n}\n\npublic class zJeHikc {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204400,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ocXqpnr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204442,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class bVJoZmB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204453,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ktmcjUY extends AbstractTestCase {\n\n    private void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204466,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JJuVQat extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new VTSLIUH()).RYNMBky(data);\n    }\n}\n\npublic class eTlunXE {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class VTSLIUH {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new eTlunXE()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204474,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class eCqnsMY {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class gkjrBXM {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new eCqnsMY()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new eCqnsMY()).KgJSeXB(data);\n    }\n}\n\npublic class AGYpbRq {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new gkjrBXM()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new gkjrBXM()).KgJSeXB(data);\n    }\n}\n\npublic class slUmYBC {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new AGYpbRq()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new AGYpbRq()).KgJSeXB(data);\n    }\n}\n\npublic class medVmXb extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new slUmYBC()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new slUmYBC()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204479,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class iORSPYT {\n\n    \n    public void fDqjRYE(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class wAomKlS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iORSPYT()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iORSPYT()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204491,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class evsDysB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204500,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class EWIvxbg extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204507,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class FtSrAmj extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204529,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class nNlMImT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1204571,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LBQAFDA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202646,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ADxXYvz {\n\n    \n    public int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class QpcUEfV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = (new ADxXYvz()).wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data = (new ADxXYvz()).snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202681,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class BIwGWuD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Integer> dataLinkedList = new LinkedList<Integer>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new TWPgvEm()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class TWPgvEm {\n\n    public void RYNMBky(LinkedList<Integer> dataLinkedList) throws Throwable {\n        int data = dataLinkedList.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202692,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jdqsAHN extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202712,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class otzbkcQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202723,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ErWAphS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data >= 0 && data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202727,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BIKFrRN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        \n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202730,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VHfSCsI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new ruXKLtX()).RYNMBky(data);\n    }\n}\n\npublic class FvJnHXO {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class ruXKLtX {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new FvJnHXO()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202746,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZTAzHmt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202771,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KEcdBWo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202774,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class PtebTxU extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202784,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LpNcGXW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202809,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JazrnKg extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new cgTPIMR()).RYNMBky(dataContainer);\n    }\n}\n\npublic class cgTPIMR {\n\n    public void RYNMBky(JazrnKg.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202828,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PLFOIxl {\n\n    \n    public void fDqjRYE() throws Throwable {\n        int data = LmjDOad.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        int data = LmjDOad.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class LmjDOad extends AbstractTestCase {\n\n    public static int data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new PLFOIxl()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new PLFOIxl()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202831,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class rEQxCmL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202845,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class krMEDqm extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202853,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class yisEVtX extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202854,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class UXSvEIL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202861,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class FopTtPA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202867,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DsbGZna extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202883,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class goAzRlq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new LDtjJpK()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class LDtjJpK {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202912,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EpsbKAA extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202922,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class rMDSXbC extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202929,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wKNZEkd extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202933,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qHZEQfq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            array[data] = 42;\n            \n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                array[data] = 42;\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202953,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BEjeZDx extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202955,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class TnjPBjb extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202959,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tmxGnft {\n\n    \n    public void fDqjRYE(kekEoYm.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(kekEoYm.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class kekEoYm extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new tmxGnft()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new tmxGnft()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202973,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VqXyDTM {\n\n    \n    public void fDqjRYE() throws Throwable {\n        int data = RXiFoAC.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        int data = RXiFoAC.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class RXiFoAC extends AbstractTestCase {\n\n    public static int data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new VqXyDTM()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new VqXyDTM()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202975,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LlxKQyi extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203001,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ubjyUQm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203010,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LOfpVys extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) \n                        {\n                            try {\n                                data = Integer.parseInt(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = { 0, 1, 2, 3, 4 };\n                \n                if (data < array.length) {\n                    IO.writeLine(array[data]);\n                } else {\n                    IO.writeLine(\"oXKKwHi\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203014,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CPwNuLR extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        int data = EuzMspW;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203030,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class DeMTrXT {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new NNeCbfE()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new NNeCbfE()).KgJSeXB(data);\n    }\n}\n\npublic class NNeCbfE {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class JquqtJA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new DeMTrXT()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new DeMTrXT()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203035,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class puWqkGa {\n\n    \n    public void fDqjRYE(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class MpXrJAL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new puWqkGa()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new puWqkGa()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203043,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dwDRxVh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203085,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GuWIwfj extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(int data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(int data) throws Throwable {\n        if (aOWZSGn) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203093,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SdzvuIT {\n\n    \n    public void ZpnQtvQ(int data) throws Throwable {\n        if (NjEgWzs.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(int data) throws Throwable {\n        if (NjEgWzs.HHhrjCy) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (NjEgWzs.Pywwbtz) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class NjEgWzs extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new SdzvuIT()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new SdzvuIT()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new SdzvuIT()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203095,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GNarZeg extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203101,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XrdkipK extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new hqGidyA()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class hqGidyA {\n\n    public void RYNMBky(int data) throws Throwable {\n        if (XrdkipK.qRMEpGJ) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202662,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hqGidyA {\n\n    \n    public void ZpnQtvQ(int data) throws Throwable {\n        if (XrdkipK.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(int data) throws Throwable {\n        if (XrdkipK.HHhrjCy) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        if (XrdkipK.Pywwbtz) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class XrdkipK extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new hqGidyA()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data = 0;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new hqGidyA()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new hqGidyA()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202663,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class WmlEbfu extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202669,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class FbNwdcc {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new WyPTXmG()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new WyPTXmG()).KgJSeXB(data);\n    }\n}\n\npublic class WyPTXmG {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class tYTYrLv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new FbNwdcc()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new FbNwdcc()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202675,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class QExjdVw {\n\n    \n    public void fDqjRYE(SAtZiQf.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(SAtZiQf.Container dataContainer) throws Throwable {\n        int data = dataContainer.containerOne;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class SAtZiQf extends AbstractTestCase {\n\n    static class Container {\n\n        public int containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new QExjdVw()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new QExjdVw()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202685,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class HZhrKlt {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class cOdePsk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new HZhrKlt()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new HZhrKlt()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202697,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xXOvvSe extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202701,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zFQJPUj extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202710,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jdqsAHN extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202713,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class PSwQGGx extends AbstractTestCase {\n\n    private int ImBBndW() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data = ImBBndW();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202740,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tHfYwEg {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class SRSiZrS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new tHfYwEg()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new tHfYwEg()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202745,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FvJnHXO {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class ruXKLtX {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new FvJnHXO()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new FvJnHXO()).KgJSeXB(data);\n    }\n}\n\npublic class VHfSCsI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new ruXKLtX()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new ruXKLtX()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202747,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class Qyfewul extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        \n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202802,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hcoLCzC {\n\n    \n    public int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class BYXflIQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data = (new hcoLCzC()).wHnwAlc();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data = (new hcoLCzC()).snawHrb();\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202825,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class cGQCDSI {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        int data = (Integer) dataObject;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class IYLxwPA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new cGQCDSI()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new cGQCDSI()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202833,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class HRKSZmI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new jArMFBy()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class jArMFBy {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            int data = (Integer) streamObjectInput.readObject();\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202840,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XHZrayx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (5 == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202847,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class eMskRDZ extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202848,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class eMskRDZ extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202849,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class uHyfuoh extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202850,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class yisEVtX extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202855,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class IaXFCdF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202858,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class Nzypcqx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202868,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ebCvfiD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                int[] array = null;\n                \n                if (data >= 0) {\n                    array = new int[data];\n                } else {\n                    IO.writeLine(\"kJGqenP\");\n                }\n                \n                array[0] = 5;\n                IO.writeLine(array[0]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                int[] array = null;\n                \n                if (data >= 0) {\n                    array = new int[data];\n                } else {\n                    IO.writeLine(\"kJGqenP\");\n                }\n                \n                array[0] = 5;\n                IO.writeLine(array[0]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                int[] array = null;\n                \n                if (data > 0) {\n                    array = new int[data];\n                } else {\n                    IO.writeLine(\"kJGqenP\");\n                }\n                \n                array[0] = 5;\n                IO.writeLine(array[0]);\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int[] array = null;\n                \n                if (data > 0) {\n                    array = new int[data];\n                } else {\n                    IO.writeLine(\"kJGqenP\");\n                }\n                \n                array[0] = 5;\n                IO.writeLine(array[0]);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202871,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class IXVSpaF extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            int[] array = null;\n            \n            if (data >= 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = null;\n            \n            if (data > 0) {\n                array = new int[data];\n            } else {\n                IO.writeLine(\"kJGqenP\");\n            }\n            \n            array[0] = 5;\n            IO.writeLine(array[0]);\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202873,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pSCmNeN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data = (new WQfcXNV()).ImBBndW();\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class WQfcXNV {\n\n    public int ImBBndW() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202896,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class REAroby {\n\n    \n    public void fDqjRYE(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        int[] array = null;\n        \n        if (data >= 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n\n    \n    public void KgJSeXB(int[] dataArray) throws Throwable {\n        int data = dataArray[2];\n        \n        int[] array = null;\n        \n        if (data > 0) {\n            array = new int[data];\n        } else {\n            IO.writeLine(\"kJGqenP\");\n        }\n        \n        array[0] = 5;\n        IO.writeLine(array[0]);\n    }\n}\n\npublic class XXkVvdd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new REAroby()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        int[] dataArray = new int[5];\n        dataArray[2] = data;\n        (new REAroby()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202899,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xBbCIxw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202915,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ViXbURZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new RMDARqd()).RYNMBky(data);\n    }\n}\n\npublic class MdBYJgG {\n\n    public void RYNMBky(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n}\n\npublic class RMDARqd {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new PmdDPfj()).RYNMBky(data);\n    }\n}\n\npublic class PmdDPfj {\n\n    public void RYNMBky(int data) throws Throwable {\n        (new MdBYJgG()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202964,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MdBYJgG {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class RMDARqd {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new PmdDPfj()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new PmdDPfj()).KgJSeXB(data);\n    }\n}\n\npublic class PmdDPfj {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new MdBYJgG()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new MdBYJgG()).KgJSeXB(data);\n    }\n}\n\npublic class ViXbURZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new RMDARqd()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new RMDARqd()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202965,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MEpBJmI {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new JxptUrj()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new JxptUrj()).KgJSeXB(data);\n    }\n}\n\npublic class JxptUrj {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new vrHlPSY()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new vrHlPSY()).KgJSeXB(data);\n    }\n}\n\npublic class LnGacTP {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        array[data] = 42;\n        \n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            array[data] = 42;\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class vrHlPSY {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new LnGacTP()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new LnGacTP()).KgJSeXB(data);\n    }\n}\n\npublic class jEGYxmN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new MEpBJmI()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new MEpBJmI()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202967,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HRdgPBI extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202994,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RlFZMwG extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202997,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NkJtPhw extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1202999,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rZUANpI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203008,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pHakORe extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203016,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eDMGBMY extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(int data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203020,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HIeiKIv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203024,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class CKWzuZo {\n\n    \n    public void fDqjRYE() throws Throwable {\n        int data = DqkRBWI.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        int data = DqkRBWI.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class DqkRBWI extends AbstractTestCase {\n\n    public static int data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new CKWzuZo()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new CKWzuZo()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203047,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YLugpip extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203059,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kuarUBP extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203081,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fhajjdv extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        while (true) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203089,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GXUghAV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        \n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203090,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VxmSDVf extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int dataCopy;\n        {\n            int data;\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            int data = dataCopy;\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203097,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CMxQeDJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203099,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nWsqHSI {\n\n    \n    public void fDqjRYE(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<Integer> dataVector) throws Throwable {\n        int data = dataVector.remove(2);\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class cPthkRu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nWsqHSI()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Integer> dataVector = new Vector<Integer>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nWsqHSI()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203123,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mOacrFo extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203137,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JBTZQCG extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (privateTrue) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203139,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UkCqVGY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (privateReturnsTrue()) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203144,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BEMjWoZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            IO.writeLine(array[data]);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = Integer.MIN_VALUE;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) \n                    {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int[] array = { 0, 1, 2, 3, 4 };\n            \n            if (data >= 0 && data < array.length) {\n                IO.writeLine(array[data]);\n            } else {\n                IO.writeLine(\"oXKKwHi\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203147,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qwKdOdP extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        int data = EuzMspW;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203174,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XEGZvHK {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new xOAhqrt()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new xOAhqrt()).KgJSeXB(data);\n    }\n}\n\npublic class xOAhqrt {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        if (data >= 0 && data < array.length) {\n            IO.writeLine(array[data]);\n        } else {\n            IO.writeLine(\"oXKKwHi\");\n        }\n    }\n}\n\npublic class HjaJYqs {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new XEGZvHK()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new XEGZvHK()).KgJSeXB(data);\n    }\n}\n\npublic class pUeEbwq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new HjaJYqs()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new HjaJYqs()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203181,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  },
  {
    "CWE_ID": [
      "CWE-129"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SPyeqGV extends AbstractTestCase {\n\n    public static int data;\n\n    public void boNMSnT() throws Throwable {\n        data = Integer.MIN_VALUE;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) \n                {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new Qrocybx()).RYNMBky();\n    }\n}\n\npublic class Qrocybx {\n\n    public void RYNMBky() throws Throwable {\n        int data = SPyeqGV.data;\n        \n        int[] array = { 0, 1, 2, 3, 4 };\n        \n        IO.writeLine(array[data]);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1203190,
    "RELATED_CWE": [
      "CWE-134",
      "CWE-415",
      "CWE-416"
    ]
  }
]