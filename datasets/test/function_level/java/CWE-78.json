[
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class chwIkSO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243146,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TpkrYdN extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243148,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class xhyFnAU extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243152,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZRzwikK extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243155,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GIphRSh extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243157,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qwXtRvC extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243159,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class AhzmQqE extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243164,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class loyVTUU extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243172,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PkRtTNA extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243174,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nkQLwlM extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243179,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class akgdbjY extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243186,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class sgyoviD extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243188,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tSIPNtE extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243191,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IxRhBfN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new GlmOgXE()).RYNMBky(data);\n    }\n}\n\npublic class SoyMaOg {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new QnHGPPC()).RYNMBky(data);\n    }\n}\n\npublic class QnHGPPC {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class GlmOgXE {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new SoyMaOg()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243196,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KEPWTIm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new FeNLMaW()).RYNMBky(data);\n    }\n}\n\npublic class FeNLMaW {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new RIcdzjv()).RYNMBky(data);\n    }\n}\n\npublic class LmtaUVx {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new YrIejsV()).RYNMBky(data);\n    }\n}\n\npublic class RIcdzjv {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new LmtaUVx()).RYNMBky(data);\n    }\n}\n\npublic class YrIejsV {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243198,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class ytzTIDI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new fkjAHGr()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class fkjAHGr {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243212,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class WEPmAFg extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new EDvcohg()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class EDvcohg {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243215,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JroAhgy extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243225,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NOmpTon extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243226,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JycEvQP extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243230,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DXlDXGd extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243233,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BswpgUj extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243246,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OMRvETp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243250,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PMcFnTC extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new KNFPwXI()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class KNFPwXI {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (PMcFnTC.qRMEpGJ) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243254,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oRHgNkW extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243260,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XzpLeWD extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243263,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kMPUrnC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new JpBApiI()).RYNMBky(data);\n    }\n}\n\npublic class uZVWoQe {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class ESRgbjD {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new uZVWoQe()).RYNMBky(data);\n    }\n}\n\npublic class UnCCeUC {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ESRgbjD()).RYNMBky(data);\n    }\n}\n\npublic class JpBApiI {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new UnCCeUC()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243270,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class MGVVOcs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new OePLUIN()).RYNMBky(dataVector);\n    }\n}\n\npublic class OePLUIN {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243282,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VHiLMhc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243290,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GBhzYfw extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243292,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GBhzYfw extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243293,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KQwrRwi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243297,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MbYYbgn extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243302,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DBobCDm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243307,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tkXKFre extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243308,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OhIpDSb extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243313,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DGmnDCp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243314,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DCTjCSn extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        data = properties.getProperty(\"data\");\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243318,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gFJgzcE extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243323,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PKanAep extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243328,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XDtptrd extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243335,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class jtdXyLO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new fHsaidm()).RYNMBky(dataVector);\n    }\n}\n\npublic class fHsaidm {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243354,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tPhGmaN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new lrECKgE()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class lrECKgE {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243358,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\n\npublic class lOHhbgt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new cDqXcAo()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class cDqXcAo {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243360,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XsPanXI extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243366,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XsPanXI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243367,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class sYdACWK extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243368,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mMUxzEq extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243377,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FKnOfvi extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243381,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NqCinqm extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243386,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HXzpIWb extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243388,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NjIWiwy extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243391,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GpOycZD extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243392,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class QrOcAdA extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243394,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class gxvwqvv extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243397,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class QJjJGrM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getProperty(\"user.home\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243400,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mQsOzhu extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243404,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hpgnCYg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new hrXZEDv()).RYNMBky(data);\n    }\n}\n\npublic class hrXZEDv {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243408,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SWluwOa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new wHfwoZL()).RYNMBky(data);\n    }\n}\n\npublic class wHfwoZL {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new tzswCNj()).RYNMBky(data);\n    }\n}\n\npublic class kCFzvZn {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class tzswCNj {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new kCFzvZn()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243412,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class AVQjMCp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new IzvzOwT()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class IzvzOwT {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243430,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class TJyiENu extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243436,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class dUCYjWE extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243441,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class imOaTuY extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243443,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class nWkiiAG extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243449,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XzVxkjW extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243450,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ovIrMvD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243455,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class doTFMKc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243456,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class doTFMKc extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243457,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class xTkxDxy extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243458,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ufhwczu extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243461,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class KhoMmgc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243462,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BWxYVoZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243468,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BWxYVoZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243469,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class FOipRPH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243473,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class KUoLzuj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new MqxEGZJ()).RYNMBky(data);\n    }\n}\n\npublic class MqxEGZJ {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243480,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XkZosrU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new SNlvVDs()).RYNMBky(data);\n    }\n}\n\npublic class SNlvVDs {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new BWApwKi()).RYNMBky(data);\n    }\n}\n\npublic class BWApwKi {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243482,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class sCQjGNt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new uYxUOjS()).RYNMBky(data);\n    }\n}\n\npublic class FKmtHmc {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class eIOlUJY {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new FKmtHmc()).RYNMBky(data);\n    }\n}\n\npublic class uYxUOjS {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new eIOlUJY()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243484,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RSAXZCI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new fWYGtxN()).RYNMBky((Object) data);\n    }\n}\n\npublic class fWYGtxN {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243496,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class tjwfCiB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new bWGDFAE()).RYNMBky(dataVector);\n    }\n}\n\npublic class bWGDFAE {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243498,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class kCjjQhb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new cmgWKoN()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class cmgWKoN {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243502,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class PKHUwSt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JWoINXw()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class JWoINXw {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243504,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RTLzkWn extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243510,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RTLzkWn extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243511,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ePTGXsh extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243512,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class vtYnTkc extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243515,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class oTPcuKb extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243516,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class sCjJcAq extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243522,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class FeCkXrF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243525,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class cKZaFhv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243532,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class cKZaFhv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243533,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class AuuyEAW extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243541,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ExVNXuG extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new xVvsGcY()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class xVvsGcY {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (ExVNXuG.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243542,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class StpifWH extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243544,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class GEGtcxz extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243548,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class stkfjIG extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243550,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZInOodW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new dtgJfiC()).RYNMBky(data);\n    }\n}\n\npublic class dtgJfiC {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243552,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qFdutZZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new yJuZrKy()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class yJuZrKy {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243560,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tvPWELh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new cXoPpUk()).RYNMBky((Object) data);\n    }\n}\n\npublic class cXoPpUk {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243568,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class QOJURXG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new PyGGJsT()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class PyGGJsT {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243574,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\n\npublic class dKUqdBs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new GSQxARI()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class GSQxARI {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243576,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YJPSImO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243578,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mlGvraH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243581,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BQdrDtv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243584,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BQdrDtv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243585,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CKZifUv extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243588,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class keGIeUM extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243590,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ofMWXJR extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    \n                    try {\n                        readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                \n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243606,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VZzMmAU extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243610,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lJJzVYI extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243612,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lJJzVYI extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243613,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cJaKyAS extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243622,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ubXrmvC {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class reKlSRS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new ubXrmvC()).wHnwAlc();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243633,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class TbEKMIl extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243650,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class KsWZOxQ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243654,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class KsWZOxQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243655,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class ddXXeBK extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243659,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class oSLjkfN extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243665,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class eSdrjBW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243669,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class OSewpMY extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243674,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class dMwjRrO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243676,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class aQvODLm extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Connection connection = null;\n                    PreparedStatement preparedStatement = null;\n                    ResultSet resultSet = null;\n                    try {\n                        \n                        connection = IO.getDBConnection();\n                        \n                        preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                        resultSet = preparedStatement.executeQuery();\n                        \n                        data = resultSet.getString(1);\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                    } finally {\n                        \n                        try {\n                            if (resultSet != null) {\n                                resultSet.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                        }\n                        try {\n                            if (preparedStatement != null) {\n                                preparedStatement.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                        }\n                        try {\n                            if (connection != null) {\n                                connection.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243678,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class jhtYpjD extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243680,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class auzPmTz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new ZvknleQ()).RYNMBky(data);\n    }\n}\n\npublic class ZvknleQ {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243696,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IRQdMup extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new zuWxjab()).RYNMBky(data);\n    }\n}\n\npublic class VCWsmGV {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class zuWxjab {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new VCWsmGV()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243698,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class TDaHFXx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new gURJAcw()).RYNMBky(data);\n    }\n}\n\npublic class sEWmTlg {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new CPvHHxp()).RYNMBky(data);\n    }\n}\n\npublic class gURJAcw {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new sEWmTlg()).RYNMBky(data);\n    }\n}\n\npublic class CPvHHxp {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243700,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class syAwkpP extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new ttzZpQd()).RYNMBky(dataContainer);\n    }\n}\n\npublic class ttzZpQd {\n\n    public void RYNMBky(syAwkpP.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243708,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class sATXArR extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new tHMaivY()).RYNMBky();\n    }\n}\n\npublic class tHMaivY {\n\n    public void RYNMBky() throws Throwable {\n        String data = sATXArR.data;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243710,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class zuMYlwl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new OCLFnBy()).RYNMBky((Object) data);\n    }\n}\n\npublic class OCLFnBy {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243712,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class wZdVVYP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new VcALHWF()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class VcALHWF {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243720,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zmyKSFt extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243741,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MdGlVrT extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243747,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class OkBrMMs extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243748,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class UbtaUJK extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243756,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JjriAQa extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new bBYhlPH()).ImBBndW(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class bBYhlPH {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (JjriAQa.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243758,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XaqFYZP extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243760,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WVTFAlC extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new FTgvyMs()).RYNMBky(data, request, response);\n    }\n}\n\npublic class FTgvyMs {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243768,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HxKghMJ extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new wpipwvC()).RYNMBky(data, request, response);\n    }\n}\n\npublic class vioGfPw {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new BQcVjme()).RYNMBky(data, request, response);\n    }\n}\n\npublic class wpipwvC {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TzPWzfm()).RYNMBky(data, request, response);\n    }\n}\n\npublic class BQcVjme {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class TzPWzfm {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new vioGfPw()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243774,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class KqXxwwU extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new tazNvjW()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class tazNvjW {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243786,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class LRAEhzF extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new YlLHQuL()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class YlLHQuL {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243792,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wUfrywa extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243803,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class UqarxRI extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243809,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class LJogedz extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243814,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rmvtoAy extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243816,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dMLxRkc extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243820,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dMLxRkc extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243821,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rYKmHxR extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243836,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FAluEFC extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243838,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FAluEFC extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243839,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class spcQXaT extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new TJsVMAd()).RYNMBky(data, request, response);\n    }\n}\n\npublic class dacTQFa {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class TJsVMAd {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new dacTQFa()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243842,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qCfjmly extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new qWhbiml()).RYNMBky(dataArray, request, response);\n    }\n}\n\npublic class qWhbiml {\n\n    public void RYNMBky(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243850,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uoxoORH extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new RBKyfmb()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class RBKyfmb {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243856,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class YhnHFZE extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243870,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class YhnHFZE extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243871,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class IYMopnE extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243873,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class xKJvELl extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243874,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class tDbehRF extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243876,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class aGBXioL extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243879,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class aEctEtk extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243881,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class nodpylf extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243883,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class vWDYwrI extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243885,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class FoFhqnY extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243887,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class NbtvUMm extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243890,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class rEQuEEY extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                    while (tokenizer.hasMoreTokens()) {\n                        String token = tokenizer.nextToken();\n                        \n                        if (token.startsWith(\"id=\")) \n                        {\n                            data = token.substring(3);\n                            \n                            break;\n                            \n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243894,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class NzAdblQ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243898,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class aOwiLDy extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243908,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class PWkHgru extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243910,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class PWkHgru extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243911,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class zZHFShx extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new kAQFspF()).ImBBndW(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class kAQFspF {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243920,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class YiZUtEZ extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new kBjFQfr()).RYNMBky(dataContainer, request, response);\n    }\n}\n\npublic class kBjFQfr {\n\n    public void RYNMBky(YiZUtEZ.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243924,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ksfzlwg extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new vxZDLbV()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class vxZDLbV {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243928,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class QiLKVns extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new eNSuFMt()).RYNMBky(dataLinkedList, request, response);\n    }\n}\n\npublic class eNSuFMt {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243932,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class yGoYhoQ extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new BRTtbVv()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class BRTtbVv {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243936,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class aNoYQZz extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243942,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class RhrpJzv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243944,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class RhrpJzv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243945,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class VUzCUxD extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243946,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class VUzCUxD extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243947,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class KRKYSCb extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243948,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class HcVfKfY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243952,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class HcVfKfY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243953,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class yfvhFrQ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243954,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class yfvhFrQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243955,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class fncPLYW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243957,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class WcyQNmM extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243961,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class HRAQrJs extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243962,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class HRAQrJs extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243963,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class diIFdOI extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243964,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class MNNJJtv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    ServerSocket listener = null;\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    \n                    try {\n                        listener = new ServerSocket(39543);\n                        socket = listener.accept();\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                        try {\n                            if (listener != null) {\n                                listener.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243966,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class LLzqqwZ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243969,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class ulgCvWc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243970,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qwXtRvC extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243158,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hEsPgAY extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243220,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DXlDXGd extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243232,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NwWuGaN extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243234,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class adclLCt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new NaLiaNY()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class NaLiaNY {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243287,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QEQexOW extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243310,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fxGlMTh extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243325,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VNDfvwr extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243374,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GpOycZD extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243393,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hLQhUii extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new KlFfhht()).fDqjRYE(dataArray);\n    }\n}\n\npublic class KlFfhht {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243419,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ZCkZcGl extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243445,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class VRxErPO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new hNiPyem()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class hNiPyem {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243572,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class bDCLcca extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243586,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HIwCcAZ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243596,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xXwAlzn extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243604,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eOvDQEv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new qFRcayt()).RYNMBky((Object) data);\n    }\n}\n\npublic class qFRcayt {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243640,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hgfyXkr extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243734,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class lqXxLJM {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class OYGYXok extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new lqXxLJM()).wHnwAlc(request, response);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243777,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class LJogedz extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243815,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class aGBXioL extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243878,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class spvaAmf extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243972,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class dfzKgaR extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243978,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZNccejZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new YgGpHdS()).fDqjRYE(data);\n    }\n}\n\npublic class YgGpHdS {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ICOAlkf()).fDqjRYE(data);\n    }\n}\n\npublic class ICOAlkf {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243987,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jDhgFnF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243163,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PicBwiv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243166,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class loyVTUU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243173,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class ytzTIDI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new fkjAHGr()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class fkjAHGr {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243213,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GIWQKfE extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243229,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MSVIjtd extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243242,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VVlsKwM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243244,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wQCQonL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243257,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class EuvFsKF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new fvOwjyu()).RYNMBky(data);\n    }\n}\n\npublic class cakBcZB {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class fvOwjyu {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new cakBcZB()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243266,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class DMBnkiG {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class nzvAwyV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new DMBnkiG()).wHnwAlc();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243273,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OPxcNtA extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243301,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RbyZNpl extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243304,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gFJgzcE extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243322,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IulozgJ extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new XChRnNL()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class XChRnNL {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (IulozgJ.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243326,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IulozgJ extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new XChRnNL()).TkRMSAh();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new XChRnNL()).szAnMjq();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class XChRnNL {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (IulozgJ.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (IulozgJ.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243327,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XVkKMqA extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243330,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class picBdpv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new DdUUGyR()).RYNMBky(data);\n    }\n}\n\npublic class XJFZQtf {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new iGssyRH()).RYNMBky(data);\n    }\n}\n\npublic class iGssyRH {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class SjFHobu {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new XJFZQtf()).RYNMBky(data);\n    }\n}\n\npublic class DdUUGyR {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new SjFHobu()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243342,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AxorecW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new PckvEbj()).RYNMBky((Object) data);\n    }\n}\n\npublic class PckvEbj {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243352,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SbLJnPY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243365,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZdvQdoz extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243384,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JAEnPOm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new flIDkFG()).fDqjRYE(data);\n    }\n}\n\npublic class flIDkFG {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ENpmlBf()).fDqjRYE(data);\n    }\n}\n\npublic class ENpmlBf {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new rKOunXo()).fDqjRYE(data);\n    }\n}\n\npublic class yHugJwZ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class rKOunXo {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new yHugJwZ()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243415,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HBImXSd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new WAnqjaK()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class WAnqjaK {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243416,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wsZHJsv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new MAIXdFi()).fDqjRYE((Object) data);\n    }\n}\n\npublic class MAIXdFi {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243425,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XQXJygC extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243438,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XQXJygC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243439,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BiZgJkw extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243446,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class LhjlHqh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243465,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class UFdhJud extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new LQjfgVF()).TkRMSAh();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new LQjfgVF()).szAnMjq();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class LQjfgVF {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (UFdhJud.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (UFdhJud.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243471,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ryAJhYD extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243478,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ryfBIVC extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new qfsGDDD()).RYNMBky(dataContainer);\n    }\n}\n\npublic class qfsGDDD {\n\n    public void RYNMBky(ryfBIVC.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243492,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class JQumews extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243531,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class WIGuMRk extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243534,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class WIGuMRk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243535,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZInOodW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new dtgJfiC()).fDqjRYE(data);\n    }\n}\n\npublic class dtgJfiC {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243553,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class yJuZrKy {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class qFdutZZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new yJuZrKy()).wHnwAlc();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243561,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class selsybM extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new XKDcMnw()).RYNMBky(dataContainer);\n    }\n}\n\npublic class XKDcMnw {\n\n    public void RYNMBky(selsybM.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243564,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class keGIeUM extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243591,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ofMWXJR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243607,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cJaKyAS extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243623,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CLhMXrJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new ixjUVJQ()).RYNMBky(data);\n    }\n}\n\npublic class ixjUVJQ {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243624,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RcbVTro extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new eqYMiFW()).RYNMBky(dataContainer);\n    }\n}\n\npublic class eqYMiFW {\n\n    public void RYNMBky(RcbVTro.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243636,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class dTczyrP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new hRJosoI()).RYNMBky(dataVector);\n    }\n}\n\npublic class hRJosoI {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243642,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class xYnFaGD extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243657,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class mTwiYJu extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243663,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class oSLjkfN extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243664,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class dMwjRrO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243677,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class TiKoLHk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243689,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jDhgFnF extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243162,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class AhzmQqE extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243165,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nkQLwlM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243178,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XNGGstV extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243180,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ytGyOLs extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getenv(\"ADD\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243184,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XScJUAf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new jcjhuJL()).RYNMBky(data);\n    }\n}\n\npublic class JgkolnY {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class jcjhuJL {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new JgkolnY()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243194,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hXiAvhl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new aaFXmEw()).RYNMBky(dataArray);\n    }\n}\n\npublic class aaFXmEw {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243202,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bfCVpGA extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new HNOyvdU()).fDqjRYE();\n    }\n}\n\npublic class HNOyvdU {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = bfCVpGA.data;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243207,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DOHdWWd extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243236,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jFwquaH extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243238,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jFwquaH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243239,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ycBsIEK extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243240,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VVlsKwM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243245,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ufErSIA extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243249,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wQCQonL extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243256,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jbxEfXu extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243258,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ixnWhQG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new zLzbyWq()).RYNMBky(data);\n    }\n}\n\npublic class zLzbyWq {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243264,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TDZwmID extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new GjOBeWK()).fDqjRYE();\n    }\n}\n\npublic class GjOBeWK {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = TDZwmID.data;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243279,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gTjGptU extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243294,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gTjGptU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243295,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OhIpDSb extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243312,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DCTjCSn extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243319,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jellYKC extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243320,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fxGlMTh extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243324,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XDtptrd extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243334,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KgynLoW {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class IYOPLOi extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new KgynLoW()).wHnwAlc();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243345,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zNojoHF extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new PAHLMno()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class PAHLMno {\n\n    \n    public void fDqjRYE(zNojoHF.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243349,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IiOrCCP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new dFzMjdJ()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class dFzMjdJ {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243356,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tPhGmaN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new lrECKgE()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class lrECKgE {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243359,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NqCinqm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243387,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HXzpIWb extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243389,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WuPZrXk extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243402,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pGvJOhx extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new lubgzwN()).RYNMBky(dataContainer);\n    }\n}\n\npublic class lubgzwN {\n\n    public void RYNMBky(pGvJOhx.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243420,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RDaiTWX extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new imcqYRn()).RYNMBky();\n    }\n}\n\npublic class imcqYRn {\n\n    public void RYNMBky() throws Throwable {\n        String data = RDaiTWX.data;\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243422,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ZCkZcGl extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243444,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BiZgJkw extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243447,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XzVxkjW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243451,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class KhoMmgc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243463,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XkZosrU extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new SNlvVDs()).fDqjRYE(data);\n    }\n}\n\npublic class SNlvVDs {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new BWApwKi()).fDqjRYE(data);\n    }\n}\n\npublic class BWApwKi {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243483,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class cPjPSVf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new JVUBnyD()).RYNMBky(data);\n    }\n}\n\npublic class Jhfywly {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class JVUBnyD {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new NaIJHag()).RYNMBky(data);\n    }\n}\n\npublic class DqKMaHV {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new Jhfywly()).RYNMBky(data);\n    }\n}\n\npublic class NaIJHag {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new DqKMaHV()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243486,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class IccLQWF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243507,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class vtYnTkc extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243514,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class sCjJcAq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243523,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class SquoOuN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243527,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class rYStXSv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243538,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ExVNXuG extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new xVvsGcY()).TkRMSAh();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new xVvsGcY()).szAnMjq();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class xVvsGcY {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (ExVNXuG.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (ExVNXuG.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243543,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class Nwisgal extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243547,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SZqNQzn extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243592,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nAJiZnr extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243599,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hivbNfB extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243601,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zNgBIJt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243619,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KIRCuMC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new szpouTd()).RYNMBky(data);\n    }\n}\n\npublic class cxcQwQz {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new zKJkiDq()).RYNMBky(data);\n    }\n}\n\npublic class szpouTd {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new cxcQwQz()).RYNMBky(data);\n    }\n}\n\npublic class zKJkiDq {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243628,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class reKlSRS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new ubXrmvC()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class ubXrmvC {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243632,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class CImTCde extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new GByqMMQ()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class GByqMMQ {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243649,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class NSnpVzO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243672,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class OSewpMY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243675,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class jhtYpjD extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243681,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class TiKoLHk extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String osCommand;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n            } else {\n                \n                osCommand = \"/bin/ls \";\n            }\n            \n            Process process = Runtime.getRuntime().exec(osCommand + data);\n            process.waitFor();\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243688,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class YhVleOI extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243693,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class auzPmTz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ZvknleQ()).fDqjRYE(data);\n    }\n}\n\npublic class ZvknleQ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243697,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class wOiCzdo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new YfmESac()).RYNMBky(data);\n    }\n}\n\npublic class jYuKIbd {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new oYCNqgI()).RYNMBky(data);\n    }\n}\n\npublic class YfmESac {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new AwGmBAq()).RYNMBky(data);\n    }\n}\n\npublic class AwGmBAq {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new jYuKIbd()).RYNMBky(data);\n    }\n}\n\npublic class oYCNqgI {\n\n    public void RYNMBky(String data) throws Throwable {\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243702,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class VODIKMg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new obOEids()).ImBBndW();\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n\npublic class obOEids {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243704,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class NkelZWL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new MloNPph()).RYNMBky(dataVector);\n    }\n}\n\npublic class MloNPph {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243714,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class esZneGR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new TXoaiXa()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class TXoaiXa {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243717,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jSBvLQu extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243728,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jSBvLQu extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243729,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class xVurkjg extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243736,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class khSCfCK extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Cookie[] cookieSources = request.getCookies();\n                    if (cookieSources != null) {\n                        \n                        data = cookieSources[0].getValue();\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243750,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  },
  {
    "CWE_ID": [
      "CWE-78"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class khSCfCK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String osCommand;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            osCommand = \"c:\\\\WINDOWS\\\\SYSTEM32\\\\cmd.exe /c dir \";\n        } else {\n            \n            osCommand = \"/bin/ls \";\n        }\n        \n        Process process = Runtime.getRuntime().exec(osCommand + data);\n        process.waitFor();\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1243751,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-89",
      "CWE-917"
    ]
  }
]