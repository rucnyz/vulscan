[
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SnBTSRH extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209977,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hKWrkdz extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209979,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XOivnht extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209990,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mgojYMD extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209993,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dNblYwW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209998,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZKvDpqH extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210001,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eghnMIG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210002,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nKhLLcH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new HvIuaEU()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class HvIuaEU {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (nKhLLcH.qRMEpGJ) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210006,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eeoqQni extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210008,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class stVmgFc extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210012,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RHDwskT extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210014,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class AHWbcwy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new KwJLMOU()).RYNMBky(data);\n    }\n}\n\npublic class KwJLMOU {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new lOvFOOO()).RYNMBky(data);\n    }\n}\n\npublic class lOvFOOO {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210018,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mGyUYgo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new qgvEfot()).ImBBndW();\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class qgvEfot {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210024,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XayWqqo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210042,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ISCSGAB extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210055,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gsSAROI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210059,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DvWpBGM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210063,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nfDmgUB extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210065,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uLKJfwK extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210067,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KMKcZyL extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210077,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class onSeEbG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210080,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mSAdTCo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210083,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aPZRhKk extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210086,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tWadzbA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new qADQGlJ()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class qADQGlJ {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210108,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tgXcWUF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210117,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ALXlJXg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210119,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XxcwODX extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210121,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eZUEhUT extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210122,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jusdPlw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210130,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qnTuVLh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210134,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uQhaRyg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210141,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class Tedroja extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210142,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class Tedroja extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data < Byte.MAX_VALUE) {\n                    data++;\n                    byte result = (byte) (data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"zcsDgrM\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data < Byte.MAX_VALUE) {\n                    data++;\n                    byte result = (byte) (data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"zcsDgrM\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210143,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yryVMqZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210144,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kPQompq extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210148,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kPQompq extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210149,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GUSabkj extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210153,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xzjeRLG extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210154,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rwYbRHv extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210156,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uPYweaU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new RkGzAmb()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class RkGzAmb {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210182,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NacxSBD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210186,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SmNndLi extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210189,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zmHuGuf extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210193,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DyfxCxe extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210196,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DyfxCxe extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210197,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sAtvcBC extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210200,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BfBbgyD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210203,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XYOAske extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210209,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JJNazvo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210210,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JJNazvo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210211,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class teEXFKD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210212,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class teEXFKD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210213,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jmvwMzx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (++data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"zcsDgrM\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (++data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"zcsDgrM\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210215,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LvZtSYT extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210217,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uBisDrR extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210221,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nTfaick extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210224,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MllcxNQ extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210230,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rGQNzlU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new taZychp()).RYNMBky(data);\n    }\n}\n\npublic class taZychp {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new LIlGyys()).RYNMBky(data);\n    }\n}\n\npublic class kUAZQSK {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class LIlGyys {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new kUAZQSK()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210236,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class osFgTPP {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = JhBzYpV.data;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = JhBzYpV.data;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class JhBzYpV extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new osFgTPP()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new osFgTPP()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210247,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class uaDhMCF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QbbmwWS()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class QbbmwWS {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210252,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fnBDmdx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new zuJslmh()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class zuJslmh {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210254,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tXWaPzI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210261,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WpCTpkF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210262,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SsuzxQl extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210267,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KimgMlo extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210269,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qkWqgMb extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210271,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VIJSuTR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210276,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qhMgThD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210279,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fXQGnVa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210280,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zXeFZJw extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                \n                if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                    byte result = (byte) (data * data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"qKzhleU\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                \n                if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                    byte result = (byte) (data * data);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"qKzhleU\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210287,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JAmaiGa extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210289,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZlHhHDf extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210291,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class moGVudY extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210292,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AFnIVgm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210297,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GpcyFci extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new UyiuXkv()).ImBBndW();\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class UyiuXkv {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210312,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qAWoyfj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new DelKFvT()).RYNMBky(dataVector);\n    }\n}\n\npublic class DelKFvT {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210322,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class lJwSNyL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210330,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class lJwSNyL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210331,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WcKrpug extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210332,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BrbsJQL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210335,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ViBNjiQ extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210339,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FPtRwIJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210340,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zobUtVR extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210342,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zobUtVR extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210343,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zvGEqDh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210356,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uSyLiBc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210358,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uqAYImk extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = Byte.MAX_VALUE;\n            break;\n        }\n        while (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210361,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tyDvlUH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MAX_VALUE;\n        qRMEpGJ = true;\n        (new YoIFjuL()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class YoIFjuL {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (tyDvlUH.qRMEpGJ) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210366,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class YoIFjuL {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (tyDvlUH.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (tyDvlUH.HHhrjCy) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (tyDvlUH.Pywwbtz) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class tyDvlUH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MAX_VALUE;\n        ydhDOMq = false;\n        (new YoIFjuL()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MAX_VALUE;\n        HHhrjCy = true;\n        (new YoIFjuL()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new YoIFjuL()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210367,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KlmiOzr {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class ugOeGsN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new KlmiOzr()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new KlmiOzr()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210377,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class lQMwHOt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new rllkOcJ()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class rllkOcJ {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210396,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class TDBPEdt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new lztEvFi()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class lztEvFi {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210398,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KJefxkU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210402,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class juriQwU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210405,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class OkIgych extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210407,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BqkqkcD extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210410,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class EzPRWsr extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210416,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TYlUlnP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210418,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TYlUlnP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210419,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tzqrRGG extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210427,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VmlYBPK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210430,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SEFguxD extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        for (int k = 0; k < 1; k++) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210435,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class Gbkpdoq extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210437,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class osUEtAM extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210447,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class LxvWEVm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new qETDKba()).RYNMBky(data);\n    }\n}\n\npublic class qETDKba {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210448,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RYBFaPv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new GRbOcuu()).RYNMBky(dataArray);\n    }\n}\n\npublic class GRbOcuu {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210458,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bQPzOha extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new RYSJkEn()).RYNMBky(dataContainer);\n    }\n}\n\npublic class RYSJkEn {\n\n    public void RYNMBky(bQPzOha.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210460,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class QFZiiXr extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MAX_VALUE;\n        (new qYEmrRm()).RYNMBky();\n    }\n}\n\npublic class qYEmrRm {\n\n    public void RYNMBky() throws Throwable {\n        byte data = QFZiiXr.data;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210462,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class gZCeuuC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new iPmPRAj()).RYNMBky((Object) data);\n    }\n}\n\npublic class iPmPRAj {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210464,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tcIXrIw extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210480,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FdbCCoO extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210482,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FdbCCoO extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210483,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class xnNpBuO extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210484,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JHPJkID extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210486,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class HaHhcHc extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210489,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class eiXepWo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210493,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IypIBFh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210499,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class USJPTZg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210500,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class USJPTZg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210501,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class CCbyweh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210502,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class aWsLVHx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210508,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class eKEyiza extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new btZwIgn()).RYNMBky(data);\n    }\n}\n\npublic class FjvogHJ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class btZwIgn {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new bJQWItt()).RYNMBky(data);\n    }\n}\n\npublic class bJQWItt {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new FjvogHJ()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210524,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FjvogHJ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class btZwIgn {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new bJQWItt()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new bJQWItt()).KgJSeXB(data);\n    }\n}\n\npublic class bJQWItt {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new FjvogHJ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new FjvogHJ()).KgJSeXB(data);\n    }\n}\n\npublic class eKEyiza extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new btZwIgn()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new btZwIgn()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210525,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class cVcdSHT {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new CWVtaqD()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new CWVtaqD()).KgJSeXB(data);\n    }\n}\n\npublic class OkGeFRq {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new ftXsVOc()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new ftXsVOc()).KgJSeXB(data);\n    }\n}\n\npublic class CWVtaqD {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new OkGeFRq()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new OkGeFRq()).KgJSeXB(data);\n    }\n}\n\npublic class ftXsVOc {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class bauadTt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new cVcdSHT()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new cVcdSHT()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210527,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RzgTPFb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new fXVBaLc()).RYNMBky(dataArray);\n    }\n}\n\npublic class fXVBaLc {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210530,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class Dbfohwe extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210552,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class Dbfohwe extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210553,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class vhkyHar extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210570,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class vhkyHar extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210571,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FlYUUPC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210584,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FlYUUPC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210585,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JNLgCFQ extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210591,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pIAhtcM extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MAX_VALUE;\n        (new bQkKHHL()).RYNMBky();\n    }\n}\n\npublic class bQkKHHL {\n\n    public void RYNMBky() throws Throwable {\n        byte data = pIAhtcM.data;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210606,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JopktrR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new bZAqBNI()).RYNMBky((Object) data);\n    }\n}\n\npublic class bZAqBNI {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210608,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class ybPTStp {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class vLRvRgo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ybPTStp()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ybPTStp()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210611,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class wtoIjzB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new LbtNgey()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class LbtNgey {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210614,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class gNLQzGE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210622,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GyNfBDM extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210628,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qafdSpN extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210630,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NjiuBPY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210632,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class NjiuBPY extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210633,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ytqSmVM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210635,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class AcWhOpC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210643,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FHqCclR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210646,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zYCRZCx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = Byte.MAX_VALUE;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210650,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zYCRZCx extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        for (int k = 0; k < 1; k++) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210651,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GokmALS extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210653,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class lFJnPuI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210657,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hwXWUGL extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210662,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hwXWUGL extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210663,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class oWDazMd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new sgAJOqi()).RYNMBky(data);\n    }\n}\n\npublic class ItMOljb {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class sgAJOqi {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new oopihxW()).RYNMBky(data);\n    }\n}\n\npublic class szRmfcI {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new ItMOljb()).RYNMBky(data);\n    }\n}\n\npublic class oopihxW {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new szRmfcI()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210670,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nyIkKqC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new abLfIxi()).RYNMBky((Object) data);\n    }\n}\n\npublic class abLfIxi {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210680,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class SDkVzSX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new QyIJvTk()).RYNMBky(dataVector);\n    }\n}\n\npublic class QyIJvTk {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210682,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class GUvxwmp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210691,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WfXNYxQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210695,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wYCUlEv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210697,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MKxLrdM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210707,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class OOPdoBq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210709,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fnIJfDM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210711,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hRHDhHV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210715,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hKPQMsV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210719,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class FephrBZ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int k = 0; k < 1; k++) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210723,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uxhalkw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210729,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class egzeWiO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210731,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ysBEKmr extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210733,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RTsoPYo extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210734,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class oGgoepV {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class gUGVlMe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new oGgoepV()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new oGgoepV()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210737,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VABqxnS {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new SCkPSGx()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new SCkPSGx()).KgJSeXB(data);\n    }\n}\n\npublic class BJqWHcJ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class cJcmziu {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new BJqWHcJ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new BJqWHcJ()).KgJSeXB(data);\n    }\n}\n\npublic class SCkPSGx {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new cJcmziu()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new cJcmziu()).KgJSeXB(data);\n    }\n}\n\npublic class iUDYzhs extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new VABqxnS()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new VABqxnS()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210743,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uaVYTvS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new ZoAJgHh()).ImBBndW();\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class ZoAJgHh {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210744,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class lyCdGGo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new WsvmRXC()).RYNMBky(dataVector);\n    }\n}\n\npublic class WsvmRXC {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210754,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class MrmzRcF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new BUVMDfe()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class BUVMDfe {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210756,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BjNUzTP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210767,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dgxIVrR extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210771,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KhDdxBi extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n            break;\n        }\n        while (true) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210793,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dvwBPVk extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210807,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class yZHlyQI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new drDcfag()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class drDcfag {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210832,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class oDsRwxV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210835,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bhvpivt extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210845,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class stLeTup extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210879,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mbzvKWG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new CepMyID()).RYNMBky(data);\n    }\n}\n\npublic class kvrBFon {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new enQaFJm()).RYNMBky(data);\n    }\n}\n\npublic class CepMyID {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new kvrBFon()).RYNMBky(data);\n    }\n}\n\npublic class enQaFJm {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210884,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fTOmkDR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209972,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SnBTSRH extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209976,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sfgTUtE extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209981,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class whUvaqC extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209984,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xkzNcJX extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210010,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ocUAYiH {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class baHwMPa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ocUAYiH()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ocUAYiH()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210035,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class simIDec extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210061,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class efelJdC {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n}\n\npublic class hpPcrfP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new efelJdC()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new efelJdC()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210105,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lYlmQTo {\n\n    \n    public void fDqjRYE(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class cwRwHBd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new lYlmQTo()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new lYlmQTo()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210171,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class hlHHpiz {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class mqqHXoZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new hlHHpiz()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new hlHHpiz()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210179,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MRIpMNv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210205,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KHOCUWb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210218,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class LjaSthC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new LpSpRRv()).RYNMBky((Object) data);\n    }\n}\n\npublic class LpSpRRv {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        byte data = (Byte) dataObject;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210248,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JAmaiGa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210288,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class moGVudY extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210293,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VaJmSIg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210347,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rdTguCx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210364,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SmIOAOH extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210374,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class lztEvFi {\n\n    \n    public void fDqjRYE(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class TDBPEdt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new lztEvFi()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new lztEvFi()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210399,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class juriQwU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210404,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MyBzdrw extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210429,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tUgVYVd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210443,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class vcfqWdF {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new dsBXnUK()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new dsBXnUK()).KgJSeXB(data);\n    }\n}\n\npublic class dsBXnUK {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n}\n\npublic class mzElkEB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new vcfqWdF()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new vcfqWdF()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210451,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XNkyNvV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210479,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class aWsLVHx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210509,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XvrnfkJ {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (IJuXDTu.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (IJuXDTu.HHhrjCy) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (IJuXDTu.Pywwbtz) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class IJuXDTu extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MAX_VALUE;\n        ydhDOMq = false;\n        (new XvrnfkJ()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = Byte.MAX_VALUE;\n        HHhrjCy = true;\n        (new XvrnfkJ()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new XvrnfkJ()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210511,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZHhNpfJ {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new cjFPwYB()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new cjFPwYB()).KgJSeXB(data);\n    }\n}\n\npublic class cjFPwYB {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class hXPSFZw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new ZHhNpfJ()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new ZHhNpfJ()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210523,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bauadTt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new cVcdSHT()).RYNMBky(data);\n    }\n}\n\npublic class cVcdSHT {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new CWVtaqD()).RYNMBky(data);\n    }\n}\n\npublic class OkGeFRq {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new ftXsVOc()).RYNMBky(data);\n    }\n}\n\npublic class CWVtaqD {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new OkGeFRq()).RYNMBky(data);\n    }\n}\n\npublic class ftXsVOc {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210526,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class yurQFvW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new pmMOWxO()).RYNMBky(dataVector);\n    }\n}\n\npublic class pmMOWxO {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210538,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TWRMsCn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210547,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zEzGtQA extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210557,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MeVcKZW extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210580,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MeVcKZW extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210581,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bbcRqAg {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new TfdPMUj()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new TfdPMUj()).KgJSeXB(data);\n    }\n}\n\npublic class TfdPMUj {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class ZxtmVKu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new bbcRqAg()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new bbcRqAg()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210667,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class xjqUZjC {\n\n    \n    public void fDqjRYE(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class gOeqzDL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new xjqUZjC()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new xjqUZjC()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210687,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class aAGHxWW extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210713,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zCiHSmZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210797,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dvwBPVk extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        byte data = EuzMspW;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210806,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WuExklL extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210842,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pgurGjF extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210919,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SUREydz extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210933,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IBIhSfX extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (dWmGbZa) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210940,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class Nvaqzxb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        (new iIimLDy()).RYNMBky(data);\n    }\n}\n\npublic class JEVuiLt {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new dXxlKpH()).RYNMBky(data);\n    }\n}\n\npublic class dXxlKpH {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class iIimLDy {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new JEVuiLt()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210956,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class IOxphyU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ZHvKmav()).RYNMBky(dataVector);\n    }\n}\n\npublic class ZHvKmav {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210970,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ASzZFcy extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210987,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class smoToyG extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210999,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hhhzqPl extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n            break;\n        }\n        while (true) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211009,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MnTCfbd extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        for (int k = 0; k < 1; k++) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211011,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class UPojVQJ extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211021,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class CeMoGTY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        if (true) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211052,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HWRTdKj extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Integer.MAX_VALUE) {\n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Integer.MAX_VALUE) {\n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211075,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class gruNqKf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        if (IO.staticFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Integer.MAX_VALUE) {\n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        if (IO.staticFive == 5) {\n            data = Integer.MIN_VALUE;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Integer.parseInt(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data < Integer.MAX_VALUE) {\n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211077,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KnWEivW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211078,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KnWEivW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        int data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data < Integer.MAX_VALUE) {\n                    int result = (int) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        int data;\n        switch(6) {\n            case 6:\n                data = Integer.MIN_VALUE;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Integer.parseInt(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data < Integer.MAX_VALUE) {\n                    int result = (int) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211079,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AHxzRfB extends AbstractTestCase {\n\n    private int ImBBndW() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        int data = ImBBndW();\n        \n        int result = (int) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211092,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AHxzRfB extends AbstractTestCase {\n\n    \n    private int wHnwAlc() throws Throwable {\n        int data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        int data = wHnwAlc();\n        \n        int result = (int) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private int snawHrb() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        int data = snawHrb();\n        \n        if (data < Integer.MAX_VALUE) {\n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211093,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pFzObyn extends AbstractTestCase {\n\n    private int EuzMspW;\n\n    private int vZNWMPE;\n\n    private int FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        int data = vZNWMPE;\n        \n        int result = (int) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        int data = FOqrAxr;\n        \n        if (data < Integer.MAX_VALUE) {\n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211095,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mHwgbTy {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        (new tyyPiuH()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        (new tyyPiuH()).KgJSeXB(data);\n    }\n}\n\npublic class tyyPiuH {\n\n    \n    public void fDqjRYE(int data) throws Throwable {\n        \n        int result = (int) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(int data) throws Throwable {\n        \n        if (data < Integer.MAX_VALUE) {\n            int result = (int) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class NqribJu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        int data;\n        \n        data = 2;\n        (new mHwgbTy()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        int data;\n        data = Integer.MIN_VALUE;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (\n            stringNumber != null) {\n                try {\n                    data = Integer.parseInt(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new mHwgbTy()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1211099,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fTOmkDR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209973,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dNblYwW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data < Byte.MAX_VALUE) {\n                    byte result = (byte) (data + 1);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"OYjnKHl\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209999,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wsNJgLM extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210005,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HvIuaEU {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (nKhLLcH.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (nKhLLcH.HHhrjCy) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (nKhLLcH.Pywwbtz) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class nKhLLcH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new HvIuaEU()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new HvIuaEU()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new HvIuaEU()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210007,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class eeoqQni extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210009,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xkzNcJX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210011,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VHpOOMj extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new VJEFePa()).RYNMBky();\n    }\n}\n\npublic class VJEFePa {\n\n    public void RYNMBky() throws Throwable {\n        byte data = VHpOOMj.data;\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210030,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class vHRpfEq {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class yUFJbFA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new vHRpfEq()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new vHRpfEq()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210037,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class visBXzA {\n\n    \n    public void fDqjRYE(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class EfeLHqH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new visBXzA()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new visBXzA()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210039,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IDzfxJr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210044,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vGxnMrW extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210050,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ISCSGAB extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210054,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class simIDec extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210060,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DvWpBGM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210062,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JxttphS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data > 0) \n                {\n                    \n                    if (data < (Byte.MAX_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"DKuzDqZ\");\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = -1;\n                \n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        data = Byte.parseByte(stringNumber.trim());\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    if (data < (Byte.MAX_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"DKuzDqZ\");\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210071,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pytJoTy extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new GORpVHu()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class GORpVHu {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (pytJoTy.qRMEpGJ) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210078,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hGTJmMh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new EVBVoWo()).RYNMBky(data);\n    }\n}\n\npublic class QQtfLhP {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n\npublic class EVBVoWo {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new QQtfLhP()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210090,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class XvSxzcj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JtaJfZA()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class JtaJfZA {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            byte data = (Byte) streamObjectInput.readObject();\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210112,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QvSyFCU extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210124,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QvSyFCU extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210125,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rVrXLQO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210132,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rVrXLQO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210133,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qnTuVLh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210135,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VMrtczk {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (XbfuzJE.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (XbfuzJE.HHhrjCy) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (XbfuzJE.Pywwbtz) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class XbfuzJE extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new VMrtczk()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new VMrtczk()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new VMrtczk()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210151,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xzjeRLG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210155,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KuOFBda extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210159,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BvZldbl {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class SmTpTJJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new BvZldbl()).wHnwAlc();\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new BvZldbl()).snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210169,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VqZCRaR extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210198,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class iuPTmeg extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210229,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hxmOUOL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new KwToknc()).RYNMBky(data);\n    }\n}\n\npublic class KwToknc {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210232,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class RYZQowE {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class HoYsvOO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new RYZQowE()).wHnwAlc();\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new RYZQowE()).snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210241,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AlkPkFB {\n\n    \n    public void fDqjRYE(FARbmSS.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(FARbmSS.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class FARbmSS extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new AlkPkFB()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new AlkPkFB()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210245,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YwWMlJS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new lvISokT()).RYNMBky(dataVector);\n    }\n}\n\npublic class lvISokT {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210250,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lvISokT {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class YwWMlJS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new lvISokT()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new lvISokT()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210251,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZgpPEtn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210259,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DviaaNa extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210283,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XelBrIY extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210300,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ouFXhHm {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class JVAXhqr {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new ouFXhHm()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new ouFXhHm()).KgJSeXB(data);\n    }\n}\n\npublic class CKQuaIr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new JVAXhqr()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new JVAXhqr()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210307,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class UvwxZTv {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class efdrbRn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UvwxZTv()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UvwxZTv()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210325,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WcKrpug extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210333,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class aKQeOEy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210350,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class feHAcso extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210352,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class feHAcso extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = Byte.MAX_VALUE;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210353,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class pzZkNEE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210354,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class yVzCQmd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210368,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class yVzCQmd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210369,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qnlYkbr extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = Byte.MAX_VALUE;\n            break;\n        }\n        while (true) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210433,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fETunGR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210440,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fETunGR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = 2;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte dataCopy;\n        {\n            byte data;\n            \n            data = Byte.MAX_VALUE;\n            dataCopy = data;\n        }\n        {\n            byte data = dataCopy;\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210441,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zsDUJtv extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210444,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qYEmrRm {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = QFZiiXr.data;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = QFZiiXr.data;\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n}\n\npublic class QFZiiXr extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new qYEmrRm()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = Byte.MAX_VALUE;\n        (new qYEmrRm()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210463,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class MzhCOhw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new FIYHMhx()).RYNMBky(dataVector);\n    }\n}\n\npublic class FIYHMhx {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210466,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class FIYHMhx {\n\n    \n    public void fDqjRYE(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        if (data > 0) \n        {\n            \n            if (data < (Byte.MAX_VALUE / 2)) {\n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"DKuzDqZ\");\n            }\n        }\n    }\n}\n\npublic class MzhCOhw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new FIYHMhx()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new FIYHMhx()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210467,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uZksvLm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new UrGGRnz()).ImBBndW();\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class UrGGRnz {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210528,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VnxhVAy {\n\n    \n    public void fDqjRYE(VJGCtny.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(VJGCtny.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class VJGCtny extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new VnxhVAy()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new VnxhVAy()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210533,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wCXdhKZ extends AbstractTestCase {\n\n    public static byte data;\n\n    public void boNMSnT() throws Throwable {\n        \n        data = Byte.MAX_VALUE;\n        (new KBPgMgy()).RYNMBky();\n    }\n}\n\npublic class KBPgMgy {\n\n    public void RYNMBky() throws Throwable {\n        byte data = wCXdhKZ.data;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210534,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KBPgMgy {\n\n    \n    public void fDqjRYE() throws Throwable {\n        byte data = wCXdhKZ.data;\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        byte data = wCXdhKZ.data;\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class wCXdhKZ extends AbstractTestCase {\n\n    public static byte data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2;\n        (new KBPgMgy()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        data = Byte.MAX_VALUE;\n        (new KBPgMgy()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210535,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class XDSezIW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (false) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (true) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (true) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210549,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BQhWhOt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210566,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mVbHEWG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticFive == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFive == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209996,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZKvDpqH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210000,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KwJLMOU {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new lOvFOOO()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new lOvFOOO()).KgJSeXB(data);\n    }\n}\n\npublic class lOvFOOO {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class AHWbcwy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new KwJLMOU()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new KwJLMOU()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210019,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PuHuhJW {\n\n    \n    public void fDqjRYE(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n\npublic class PsfLrac extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new PuHuhJW()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new PuHuhJW()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210027,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gbbAInT extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210049,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mSAdTCo extends AbstractTestCase {\n\n    private void RYNMBky(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210082,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class awiIwNy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new NEqUUSr()).RYNMBky(data);\n    }\n}\n\npublic class NEqUUSr {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210088,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PdGQrUW extends AbstractTestCase {\n\n    static class Container {\n\n        public byte containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new UzIgNDn()).RYNMBky(dataContainer);\n    }\n}\n\npublic class UzIgNDn {\n\n    public void RYNMBky(PdGQrUW.Container dataContainer) throws Throwable {\n        byte data = dataContainer.containerOne;\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210100,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ALXlJXg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210118,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yryVMqZ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = 2;\n            break;\n        }\n        while (true) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        while (true) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210145,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rwYbRHv extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210157,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class bYMGGvB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new CIHYqqD()).RYNMBky(data);\n    }\n}\n\npublic class CIHYqqD {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new UwnFOBQ()).RYNMBky(data);\n    }\n}\n\npublic class UwnFOBQ {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210162,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NluumCG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new rgJHmtS()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class rgJHmtS {\n\n    public void RYNMBky(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210180,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NacxSBD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210187,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xuDUILf extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateTrue) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (privateTrue) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210195,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zfNRPxN {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (RBXAPrO.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (RBXAPrO.HHhrjCy) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (RBXAPrO.Pywwbtz) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class RBXAPrO extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new zfNRPxN()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new zfNRPxN()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new zfNRPxN()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210223,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MllcxNQ extends AbstractTestCase {\n\n    private byte EuzMspW;\n\n    private byte vZNWMPE;\n\n    private byte FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        byte data = vZNWMPE;\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        byte data = FOqrAxr;\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210231,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class buwkPjd {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new MEgQJgr()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new MEgQJgr()).KgJSeXB(data);\n    }\n}\n\npublic class MEgQJgr {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class riptaKp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new buwkPjd()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new buwkPjd()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210235,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class QbbmwWS {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class uaDhMCF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QbbmwWS()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new QbbmwWS()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210253,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WpCTpkF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (5 != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (5 == 5) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (5 == 5) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210263,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qhMgThD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = -1;\n            \n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    data = Byte.parseByte(stringNumber.trim());\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } catch (NumberFormatException exceptNumberFormat) {\n                IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                } finally {\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210278,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZlHhHDf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210290,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WhFHsuD {\n\n    \n    public void ZpnQtvQ(byte data) throws Throwable {\n        if (RqavgTC.ydhDOMq) {\n            \n            data = 0;\n        } else {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(byte data) throws Throwable {\n        if (RqavgTC.HHhrjCy) {\n            \n            \n            if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n                byte result = (byte) (data * data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"qKzhleU\");\n            }\n        } else {\n            \n            data = 0;\n        }\n    }\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        if (RqavgTC.Pywwbtz) {\n            \n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            \n            data = 0;\n        }\n    }\n}\n\npublic class RqavgTC extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new WhFHsuD()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data = 0;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new WhFHsuD()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = 0;\n        \n        data = 2;\n        Pywwbtz = true;\n        (new WhFHsuD()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210295,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class PgYQZiW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new iWRRlwP()).RYNMBky(data);\n    }\n}\n\npublic class iWRRlwP {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210304,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class iWRRlwP {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class PgYQZiW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new iWRRlwP()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new iWRRlwP()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210305,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class cqMIfmC {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new vRZIWiy()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new vRZIWiy()).KgJSeXB(data);\n    }\n}\n\npublic class vRZIWiy {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new YPqRiPy()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new YPqRiPy()).KgJSeXB(data);\n    }\n}\n\npublic class YPqRiPy {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new YNbsCXl()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new YNbsCXl()).KgJSeXB(data);\n    }\n}\n\npublic class YNbsCXl {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class YBKAUTy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new cqMIfmC()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new cqMIfmC()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210311,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OwzEUEp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        byte[] dataArray = new byte[5];\n        dataArray[2] = data;\n        (new Ahkkkog()).RYNMBky(dataArray);\n    }\n}\n\npublic class Ahkkkog {\n\n    public void RYNMBky(byte[] dataArray) throws Throwable {\n        byte data = dataArray[2];\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210314,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JqdLiBi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = -1;\n        \n        BufferedReader readerBuffered = null;\n        InputStreamReader readerInputStream = null;\n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            String stringNumber = readerBuffered.readLine();\n            if (stringNumber != null) {\n                data = Byte.parseByte(stringNumber.trim());\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } catch (NumberFormatException exceptNumberFormat) {\n            IO.logger.log(Level.WARNING, \"dXgogED\", exceptNumberFormat);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            } finally {\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Byte> dataHashMap = new HashMap<Integer, Byte>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new hwtuvnG()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class hwtuvnG {\n\n    public void RYNMBky(HashMap<Integer, Byte> dataHashMap) throws Throwable {\n        byte data = dataHashMap.get(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210326,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JGoBYyV extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210337,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rviYawA extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210345,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nethPWq extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210408,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class plxIdit extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210413,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class WXaSepF extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210414,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class EzPRWsr extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateReturnsTrue()) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210417,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hGXMEPx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticFalse) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticTrue) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticTrue) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210421,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class knoZBer extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        } else {\n            if (data > 0) \n            {\n                \n                byte result = (byte) (data * 2);\n                IO.writeLine(\"iESVbTX\" + result);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = Byte.MAX_VALUE;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        } else {\n            if (data > 0) \n            {\n                \n                if (data < (Byte.MAX_VALUE / 2)) {\n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                } else {\n                    IO.writeLine(\"DKuzDqZ\");\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210425,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VmlYBPK extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        switch(5) {\n            case 6:\n                \n                data = 0;\n                break;\n            default:\n                \n                data = 2;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = 2;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    byte result = (byte) (data * 2);\n                    IO.writeLine(\"iESVbTX\" + result);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data > 0) \n                {\n                    \n                    if (data < (Byte.MAX_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"DKuzDqZ\");\n                    }\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        switch(6) {\n            case 6:\n                \n                data = Byte.MAX_VALUE;\n                break;\n            default:\n                \n                data = 0;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data > 0) \n                {\n                    \n                    if (data < (Byte.MAX_VALUE / 2)) {\n                        byte result = (byte) (data * 2);\n                        IO.writeLine(\"iESVbTX\" + result);\n                    } else {\n                        IO.writeLine(\"DKuzDqZ\");\n                    }\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210431,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mzElkEB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new vcfqWdF()).RYNMBky(data);\n    }\n}\n\npublic class vcfqWdF {\n\n    public void RYNMBky(byte data) throws Throwable {\n        (new dsBXnUK()).RYNMBky(data);\n    }\n}\n\npublic class dsBXnUK {\n\n    public void RYNMBky(byte data) throws Throwable {\n        if (data > 0) \n        {\n            \n            byte result = (byte) (data * 2);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210450,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class JHPJkID extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210487,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class uCSrGkB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data < Byte.MAX_VALUE) {\n                data++;\n                byte result = (byte) (data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210495,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class IypIBFh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210498,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class tbBbHRw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            data++;\n            byte result = (byte) (data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210515,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class emxDanU extends AbstractTestCase {\n\n    private byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        byte data = ImBBndW();\n        \n        data++;\n        byte result = (byte) (data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210516,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nyDkSyz extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (privateFive != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (privateFive == 5) {\n            \n            data = Byte.MAX_VALUE;\n        } else {\n            \n            data = 0;\n        }\n        if (privateFive == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210559,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class DMZEPsp extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        for (int j = 0; j < 1; j++) {\n            \n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        for (int k = 0; k < 1; k++) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (++data);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"zcsDgrM\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210579,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ytwbQFD extends AbstractTestCase {\n\n    \n    private byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        byte data = wHnwAlc();\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        byte data = snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210589,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class opINBQr {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new OAndrMX()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new OAndrMX()).KgJSeXB(data);\n    }\n}\n\npublic class bfLLrtk {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new yRLRRGA()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new yRLRRGA()).KgJSeXB(data);\n    }\n}\n\npublic class OAndrMX {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        (new bfLLrtk()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        (new bfLLrtk()).KgJSeXB(data);\n    }\n}\n\npublic class yRLRRGA {\n\n    \n    public void fDqjRYE(byte data) throws Throwable {\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(byte data) throws Throwable {\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n\npublic class TDFxeIz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        (new opINBQr()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new opINBQr()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210599,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class YoBPggv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data = (new evicHSQ()).ImBBndW();\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n\npublic class evicHSQ {\n\n    public byte ImBBndW() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210600,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class evicHSQ {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        return data;\n    }\n}\n\npublic class YoBPggv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new evicHSQ()).wHnwAlc();\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new evicHSQ()).snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (++data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"zcsDgrM\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210601,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class vLRvRgo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        Vector<Byte> dataVector = new Vector<Byte>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ybPTStp()).RYNMBky(dataVector);\n    }\n}\n\npublic class ybPTStp {\n\n    public void RYNMBky(Vector<Byte> dataVector) throws Throwable {\n        byte data = dataVector.remove(2);\n        \n        byte result = (byte) (++data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210610,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class LjkYwIQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        (new jeNlShx()).RYNMBky(data);\n    }\n}\n\npublic class jeNlShx {\n\n    public void RYNMBky(byte data) throws Throwable {\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210664,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class cMNlJCy {\n\n    \n    public void fDqjRYE(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        byte result = (byte) (data * data);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Byte> dataLinkedList) throws Throwable {\n        byte data = dataLinkedList.remove(2);\n        \n        \n        if ((data != Integer.MIN_VALUE) && (data != Long.MIN_VALUE) && (Math.abs(data) <= (long) Math.sqrt(Byte.MAX_VALUE))) {\n            byte result = (byte) (data * data);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"qKzhleU\");\n        }\n    }\n}\n\npublic class CVWQlOu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new cMNlJCy()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data;\n        \n        data = Byte.MAX_VALUE;\n        LinkedList<Byte> dataLinkedList = new LinkedList<Byte>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new cMNlJCy()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210685,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class wYCUlEv extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210696,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class sTpxwQu extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0;\n        } else {\n            \n            data = 2;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2;\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        } else {\n            \n            data = 0;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210701,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jPQsRwZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(byte data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(byte data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data < Byte.MAX_VALUE) {\n                byte result = (byte) (data + 1);\n                IO.writeLine(\"iESVbTX\" + result);\n            } else {\n                IO.writeLine(\"OYjnKHl\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data;\n        \n        data = 2;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(byte data) throws Throwable {\n        if (DBbhdbc) {\n            \n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210725,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  },
  {
    "CWE_ID": [
      "CWE-190"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class ZoAJgHh {\n\n    \n    public byte wHnwAlc() throws Throwable {\n        byte data;\n        \n        data = 2;\n        return data;\n    }\n\n    \n    public byte snawHrb() throws Throwable {\n        byte data;\n        \n        data = (byte) ((new java.security.SecureRandom()).nextInt(1 + Byte.MAX_VALUE - Byte.MIN_VALUE) + Byte.MIN_VALUE);\n        return data;\n    }\n}\n\npublic class uaVYTvS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        byte data = (new ZoAJgHh()).wHnwAlc();\n        \n        byte result = (byte) (data + 1);\n        IO.writeLine(\"iESVbTX\" + result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        byte data = (new ZoAJgHh()).snawHrb();\n        \n        if (data < Byte.MAX_VALUE) {\n            byte result = (byte) (data + 1);\n            IO.writeLine(\"iESVbTX\" + result);\n        } else {\n            IO.writeLine(\"OYjnKHl\");\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1210745,
    "RELATED_CWE": [
      "CWE-191",
      "CWE-192",
      "CWE-122"
    ]
  }
]