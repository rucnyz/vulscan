[
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ypgQfip extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200003,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class eTTSjQi extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200005,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class oydcEhp extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200007,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class veybRWi extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200019,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class JtsTMkz extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200021,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class LCqoybY extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            \n            data = System.getenv(\"ADD\");\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200023,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BlmZewz extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200033,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class UGMnYEi {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (TpaNUIS.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (TpaNUIS.HHhrjCy) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (TpaNUIS.Pywwbtz) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class TpaNUIS extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        ydhDOMq = false;\n        (new UGMnYEi()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        HHhrjCy = true;\n        (new UGMnYEi()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new UGMnYEi()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200037,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class JrkoHlL extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200043,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class rSkJCFO {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n\npublic class DIkQmnX extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new rSkJCFO()).wHnwAlc(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new rSkJCFO()).snawHrb(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200055,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class RLLoxbi extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200085,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class rgawgTs extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200096,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class rgawgTs extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200097,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nMqcHqB {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (psxeJYH.ydhDOMq) {\n            \n            data = null;\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (psxeJYH.HHhrjCy) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (psxeJYH.Pywwbtz) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class psxeJYH extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        ydhDOMq = false;\n        (new nMqcHqB()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        HHhrjCy = true;\n        (new nMqcHqB()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new nMqcHqB()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200109,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class dVjTtLz extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200117,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class nGNrjbA {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n\npublic class lEEyJGo extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new nGNrjbA()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new nGNrjbA()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200127,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class IDfMQeF extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200155,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class tWqPejm extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200163,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class XTKCLIG extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getenv(\"ADD\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200183,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class JbXNSkm extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200189,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class USUwrJB extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200217,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rECgcCF extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200219,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class tawjCuo extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200223,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class uTkSMRy extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200227,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class XKNQcFd extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200233,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class KkLQVrB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200235,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class FURRUnz extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200241,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ZwoHrbr extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200255,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jCSoyZC {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class BtrgZwP extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new jCSoyZC()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new jCSoyZC()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200263,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class FuBejdW {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class qwTGIjR extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new FuBejdW()).wHnwAlc(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new FuBejdW()).snawHrb(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200271,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CkvbnZP {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = RQOoNdY.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = RQOoNdY.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class RQOoNdY extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new CkvbnZP()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new CkvbnZP()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200277,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OKorJhX extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200295,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class DjOxign extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200307,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class XxrlDJy extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200331,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class IopMzVt {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class CMUcfiF extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new IopMzVt()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new IopMzVt()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200343,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NYaOImx extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200373,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class Lfhcbbl extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200387,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TTPfhWR extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new EBWvuZj()).RYNMBky(data, request, response);\n    }\n}\n\npublic class EBWvuZj {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new bIGiXhb()).RYNMBky(data, request, response);\n    }\n}\n\npublic class bIGiXhb {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200408,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class WZTXFxi {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class vsmKDMx {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new BfaGDbZ()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new BfaGDbZ()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class BfaGDbZ {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new WZTXFxi()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new WZTXFxi()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class nJIbfSn extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new vsmKDMx()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new vsmKDMx()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200411,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class asIUJjF {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class oXbHLRl extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new asIUJjF()).wHnwAlc(request, response);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new asIUJjF()).snawHrb(request, response);\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200415,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class jqsUIqo extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new iogPPqc()).RYNMBky(request, response);\n    }\n}\n\npublic class iogPPqc {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = jqsUIqo.data;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200420,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class iogPPqc {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = jqsUIqo.data;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = jqsUIqo.data;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class jqsUIqo extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new iogPPqc()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new iogPPqc()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200421,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kEQRpSc {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class FdYpJdj extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new kEQRpSc()).fDqjRYE(dataVector, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new kEQRpSc()).KgJSeXB(dataVector, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200425,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class tLbFBMM extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200435,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class creQbPe extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200441,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class KzzhOjL extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200449,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ONZedyg extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        data = properties.getProperty(\"data\");\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        data = properties.getProperty(\"data\");\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200461,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class FgGtaql extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200477,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class nslHeiS extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200505,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class FTfVtdE extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200509,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class zVHlDgE extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200511,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class eozCWtS extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200515,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VZaWvYt extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200517,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class lVMNQOA extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200521,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class JjqLOUE extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200531,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OJmfeSe extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200535,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class klfUVAm extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200537,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class RzWiwft extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200539,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class lRKlnXy extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200545,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class QDhGFBX extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200549,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class sEcRMXO extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200581,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class xIJEaib extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200585,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class adnTIse extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200587,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UpfVBMO extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200593,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rSPzqXp extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200599,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class YCeEpvs extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200601,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class WpBrycC extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200607,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OGLxeLj extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200609,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class LrNJeZe extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200615,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class nAKxhHk extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200621,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SoDzuhw {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = GushvAX.data;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = GushvAX.data;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class GushvAX extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new SoDzuhw()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new SoDzuhw()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200637,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class fXfDZvK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200651,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class teqEKfZ extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200655,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class RlFTIgv extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200665,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BhbFyEH extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200689,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class CpDeECq extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200721,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class zoLRKJb extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200727,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class VmylaPN extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200735,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class gHovzmV extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200737,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class fKWBdSE extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200739,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class JCgXQJZ extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            \n            data = System.getProperty(\"user.home\");\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200743,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class mMgMGAi {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (ZJDqxsc.ydhDOMq) {\n            \n            data = null;\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (ZJDqxsc.HHhrjCy) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (ZJDqxsc.Pywwbtz) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class ZJDqxsc extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getProperty(\"user.home\");\n        ydhDOMq = false;\n        (new mMgMGAi()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getProperty(\"user.home\");\n        HHhrjCy = true;\n        (new mMgMGAi()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new mMgMGAi()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200757,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kYNkyYG extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200799,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class TuRWrQp extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200803,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class zwyCxNY extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200805,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ggXfnYD extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200808,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ggXfnYD extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200809,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ZSNwFVw extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200813,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class OHVgZgB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200819,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class qOvhrRk extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200821,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class HLNRNBU extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200823,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kTOpGgZ extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200825,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class OdZfyHQ extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200827,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BMEsbet extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200835,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kLdEnaY extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200837,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class OneuzAj {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = aphIpue.data;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = aphIpue.data;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class aphIpue extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new OneuzAj()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new OneuzAj()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200853,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class vsLRQCu extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200869,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UdRxHog extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200871,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class jeOUzOI extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200873,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class bGzmgbG extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200877,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rPKvEIc extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200889,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ujfeuGp extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200897,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class xnpXJUO extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200907,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class EHqZfNx extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200937,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NGeyhzj extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200953,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class yjfrDTi extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200959,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class zWGsgsS extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200963,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class DZOrzGb extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200971,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class WroMcRq extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200977,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class rZKmSWs {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class UAYwDfy extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new rZKmSWs()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new rZKmSWs()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200991,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class TwdFbJn extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201009,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class etPzJWw extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201015,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class aqLTLbX extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201017,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class WUlsleJ extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201019,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class PqjNyrG extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201027,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class jWBCGFj extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201033,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class didFLbp extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201035,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class McwZcNs extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201037,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class XQkOFXs extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201043,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class FKjVnWF extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201093,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OiuNoRB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201099,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class lTQCLxz extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201101,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class pyaxGAY extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201109,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class LMttlOK extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201111,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class KjGtOLZ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201121,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ZQqUIiq extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201123,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class NeeNhUS extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200029,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class zoyiNcx {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class MBwedcH extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new zoyiNcx()).fDqjRYE(dataArray, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new zoyiNcx()).KgJSeXB(dataArray, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200057,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class GnfAmBg extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200093,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class IDrcCpA extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200099,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class UffoRNh extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new AIuJXpn()).RYNMBky(data, request, response);\n    }\n}\n\npublic class AIuJXpn {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200118,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class HdbVZqt {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class lFdeFZd {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new YyVYoqL()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new YyVYoqL()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class mUnWgOT {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new HdbVZqt()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new HdbVZqt()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class YyVYoqL {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new mUnWgOT()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new mUnWgOT()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class imEJQGe extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new lFdeFZd()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new lFdeFZd()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200125,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class UdUEJEk extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new miUEZyK()).ImBBndW(request, response);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class miUEZyK {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200198,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class dVNXZzx extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200239,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VegPAjB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200245,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class DzKkmhk extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200291,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class TvPcCrd extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200305,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class CwflyQB {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImFcOnt.data;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImFcOnt.data;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class ImFcOnt extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new CwflyQB()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new CwflyQB()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200349,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kTdchyf {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class fLEubHe extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new kTdchyf()).fDqjRYE(dataLinkedList, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new kTdchyf()).KgJSeXB(dataLinkedList, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200355,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ERhWbzK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200363,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class jwmiQVF extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200389,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VKCvXGe extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200395,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xOOgwJX extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new yIadJYj()).RYNMBky(request, response);\n    }\n}\n\npublic class yIadJYj {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = xOOgwJX.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200492,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class OQRzHHO {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class hegCIrU extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new OQRzHHO()).fDqjRYE(dataLinkedList, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new OQRzHHO()).KgJSeXB(dataLinkedList, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200499,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nCAHeTg {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new UPkduRA()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new UPkduRA()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class UPkduRA {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class SKtYnYK extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new nCAHeTg()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new nCAHeTg()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200553,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class kDnKujQ {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ElykEjl()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ElykEjl()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class BMWBRjh {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new hWNhMCu()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new hWNhMCu()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class ElykEjl {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new BMWBRjh()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new BMWBRjh()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class hWNhMCu {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class UEGihHP extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new kDnKujQ()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new kDnKujQ()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200557,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OhyrPbM extends AbstractTestCaseServlet {\n\n    \n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = snawHrb(request, response);\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200619,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BleWQUv {\n\n    \n    public void fDqjRYE(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class uuaqOJp extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new BleWQUv()).fDqjRYE((Object) data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new BleWQUv()).KgJSeXB((Object) data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200639,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kTkSaXz extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200668,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class QpIILnn {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = UoMZPPo.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = UoMZPPo.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class UoMZPPo extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new QpIILnn()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new QpIILnn()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200709,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class eaVHexH extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200747,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\n\npublic class HPcdHEt extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new xfysnRk()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class xfysnRk {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200784,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class DhJDeuw {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class axVpQLt {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new DhJDeuw()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new DhJDeuw()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class whRJFBn extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new axVpQLt()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new axVpQLt()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200841,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class LbGFowy extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new CCrITOt()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class CCrITOt {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200856,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class HxJrfSM extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data, request, response);\n    }\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (dWmGbZa) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200898,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class MGNFsRH {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class flIemWC {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MGNFsRH()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MGNFsRH()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class vBVYkad {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new flIemWC()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new flIemWC()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class DiTExLk extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new vBVYkad()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new vBVYkad()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200915,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class mGHeNEb {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class dOCCWTB extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new mGHeNEb()).fDqjRYE(dataArray, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new mGHeNEb()).KgJSeXB(dataArray, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200921,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class qleaAOE {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class XwGKftc extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new qleaAOE()).fDqjRYE(dataLinkedList, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new qleaAOE()).KgJSeXB(dataLinkedList, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200931,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class EVyOwrP extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200943,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class cpAEIbp extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200947,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class fcvJgLA extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200981,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class WxKoHRd {\n\n    \n    public void fDqjRYE(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class dnzywQo extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new WxKoHRd()).fDqjRYE(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new WxKoHRd()).KgJSeXB(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201007,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class bqbzIsx {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (RaChKrA.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (RaChKrA.HHhrjCy) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (RaChKrA.Pywwbtz) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class RaChKrA extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new bqbzIsx()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new bqbzIsx()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new bqbzIsx()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201045,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NBQPJrK extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201084,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NBQPJrK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201085,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class UVnqeed {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class hqDFoDZ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UVnqeed()).fDqjRYE(dataLinkedList, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UVnqeed()).KgJSeXB(dataLinkedList, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201147,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class SYRYvjz extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201177,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jYhTdJL {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new EGrkBBt()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new EGrkBBt()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class zcbXmbg {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class VRDZccK {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new jYhTdJL()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new jYhTdJL()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class EGrkBBt {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new zcbXmbg()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new zcbXmbg()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class uvLnAls extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new VRDZccK()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new VRDZccK()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201205,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class uiaBVDF {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class UKseHch extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new uiaBVDF()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new uiaBVDF()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201207,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class gwwzHXf {\n\n    \n    public void fDqjRYE(ibKqyIH.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(ibKqyIH.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class ibKqyIH extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new gwwzHXf()).fDqjRYE(dataContainer, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new gwwzHXf()).KgJSeXB(dataContainer, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201211,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\n\npublic class whSjapx extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new DhUZXWL()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class DhUZXWL {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201222,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class xTZVUXP extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201252,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CHSsSlu {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (IFVIwGS.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (IFVIwGS.HHhrjCy) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (IFVIwGS.Pywwbtz) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class IFVIwGS extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new CHSsSlu()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new CHSsSlu()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new CHSsSlu()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201261,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UeXCnha extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201297,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class emNehRF extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201311,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class meMxhSg {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = qrKfseV.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = qrKfseV.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class qrKfseV extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new meMxhSg()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new meMxhSg()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201357,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OVtDNRX extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201383,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class LsGEgLs extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201403,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class bUZRyiG extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201409,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SPThKmg {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        return data;\n    }\n}\n\npublic class HCxTzwO extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new SPThKmg()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new SPThKmg()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201423,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qcCjnwB {\n\n    \n    public void fDqjRYE(TQnMoPI.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(TQnMoPI.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class TQnMoPI extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new qcCjnwB()).fDqjRYE(dataContainer, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new qcCjnwB()).KgJSeXB(dataContainer, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201427,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kosKdcb {\n\n    \n    public void fDqjRYE(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class cbuAGMJ extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new kosKdcb()).fDqjRYE((Object) data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new kosKdcb()).KgJSeXB((Object) data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201431,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class oipCVhJ extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201453,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class xrIQUnm extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201513,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class xWLDHOT extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201519,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class YUnaZXO extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201523,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class voLaKHm extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201529,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class QkWqllU {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class DeZfOBF extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new QkWqllU()).fDqjRYE(dataArray, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new QkWqllU()).KgJSeXB(dataArray, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201569,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ABeAQMj {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class LinjRbp extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ABeAQMj()).fDqjRYE(dataVector, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ABeAQMj()).KgJSeXB(dataVector, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201577,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class JxGLHXS extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201595,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class EgyQaqy extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201601,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VBAPhwu extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201616,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NxYiQVU extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data, request, response);\n    }\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (dWmGbZa) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201618,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class tNmJXLI extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201671,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class NgmJsfe extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201687,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class fuKoIXx extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201689,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class CIvtuXm {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class NSqJfWp {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new GdGXtFn()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new GdGXtFn()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class GdGXtFn {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new CIvtuXm()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new CIvtuXm()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class FIjMffN extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new NSqJfWp()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new NSqJfWp()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201707,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class tCHxtAm extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201733,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class RCvmraI extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201741,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class EsQnCqK extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201753,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class dHbUmUW extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1201759,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class LCqoybY extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200022,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class LDXSzbP extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200031,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class UCfDhpZ extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE(request, response);\n    }\n\n    private void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        FOqrAxr = data;\n        KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200045,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MgCfbxj {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class HKZOjtb {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MgCfbxj()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MgCfbxj()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class zLYaTwL extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new HKZOjtb()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new HKZOjtb()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200049,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class nOTjpKF extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new VKMJZUF()).RYNMBky(data, request, response);\n    }\n}\n\npublic class eynzWMY {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class gNhnrkR {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new eynzWMY()).RYNMBky(data, request, response);\n    }\n}\n\npublic class VKMJZUF {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new gNhnrkR()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200050,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class qSPJXnZ extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        \n        data = System.getenv(\"ADD\");\n        (new YYByrQO()).RYNMBky(request, response);\n    }\n}\n\npublic class YYByrQO {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = qSPJXnZ.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200060,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class SoBSovX {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class YfpPRcX extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new SoBSovX()).fDqjRYE(dataVector, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new SoBSovX()).KgJSeXB(dataVector, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200065,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class AXrWPDD extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200078,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class VqxkJgU extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200086,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class cXCiQIZ extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        while (true) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200103,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class FbPejhs extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getenv(\"ADD\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200111,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class AIuJXpn {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class UffoRNh extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new AIuJXpn()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new AIuJXpn()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200119,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class pwXYMiW extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200144,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class PPTubEn extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200160,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class oHRUZbP {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class xoZiEsb extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new oHRUZbP()).fDqjRYE(dataHashMap, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new oHRUZbP()).KgJSeXB(dataHashMap, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200213,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class ItuJybX extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new aXiCVlK()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class aXiCVlK {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200214,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class USUwrJB extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200216,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class XKNQcFd extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200232,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VegPAjB extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    Cookie cookieSink = new Cookie(\"lang\", data);\n                    \n                    response.addCookie(cookieSink);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200244,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class IPJYDtQ extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200251,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PGBfjOq {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new vzMjlHs()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new vzMjlHs()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class vzMjlHs {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new WAqnVFC()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new WAqnVFC()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class WAqnVFC {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class IvFnouE extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new PGBfjOq()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new PGBfjOq()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200267,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lfNLjfh {\n\n    \n    public void fDqjRYE(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class HOBxmXI extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new lfNLjfh()).fDqjRYE((Object) data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new lfNLjfh()).KgJSeXB((Object) data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200279,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\n\npublic class kPKXLyb {\n\n    \n    public void fDqjRYE(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class BSIqHzX extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new kPKXLyb()).fDqjRYE(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new kPKXLyb()).KgJSeXB(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200287,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class ZiBWhcF extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200297,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rAigZLj extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data != null) {\n                    response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data != null) {\n                    response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (data != null) {\n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (data != null) {\n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200317,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class jUBnpLj extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data, request, response);\n    }\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (dWmGbZa) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200322,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WsxzboJ extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new UgIVXHe()).RYNMBky(data, request, response);\n    }\n}\n\npublic class UgIVXHe {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new tNKKINV()).RYNMBky(data, request, response);\n    }\n}\n\npublic class tNKKINV {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200336,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class VSPHgEd {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class OYtZPGz {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new vfXIwcf()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new vfXIwcf()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class vfXIwcf {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new VSPHgEd()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new VSPHgEd()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class vfKvwMz extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new OYtZPGz()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new OYtZPGz()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200339,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ImFcOnt extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new CwflyQB()).RYNMBky(request, response);\n    }\n}\n\npublic class CwflyQB {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImFcOnt.data;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200348,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class mxCAuLn extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200360,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class uHCtJle extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200375,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class zfmfsio extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200381,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class PDjqety extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200382,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class byQszTx extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200391,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class gjEtBOJ {\n\n    \n    public void fDqjRYE(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class nNFbmzm extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new gjEtBOJ()).fDqjRYE((Object) data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new gjEtBOJ()).KgJSeXB((Object) data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200423,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class tdGSirU extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200443,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class AZFmYKL extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200455,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class zFrThZY extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200456,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class fpdBOBU extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200458,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class YkuZajl extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data, request, response);\n    }\n\n    private void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data, request, response);\n    }\n\n    private void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data, request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200467,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class cjFjBVr {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TnGyjww()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TnGyjww()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class YZYhBao {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new cjFjBVr()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new cjFjBVr()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class TnGyjww {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class HOFijYW extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new YZYhBao()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new YZYhBao()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200483,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yIadJYj {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = xOOgwJX.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = xOOgwJX.data;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class xOOgwJX extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new yIadJYj()).fDqjRYE(request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new yIadJYj()).KgJSeXB(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200493,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mpessLW extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new iCokANs()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class iCokANs {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200494,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class AZTYQrh extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200000,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class yoxYZVE extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200009,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BWDzbxi extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200013,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class zacgfGk extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200024,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class BlmZewz extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        \n        data = System.getenv(\"ADD\");\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200032,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class NWQCdZg {\n\n    \n    public void fDqjRYE(UnyKmaQ.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(UnyKmaQ.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class UnyKmaQ extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new NWQCdZg()).fDqjRYE(dataContainer, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new NWQCdZg()).KgJSeXB(dataContainer, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200059,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class sMGsJRG extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new fTxtILC()).RYNMBky(dataLinkedList, request, response);\n    }\n}\n\npublic class fTxtILC {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200066,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class jPNkSET {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class AyJOIDS extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new jPNkSET()).fDqjRYE(dataHashMap, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new jPNkSET()).KgJSeXB(dataHashMap, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200069,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ScGwBQF extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200073,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class AXrWPDD extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200079,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class eUjnPia extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200083,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class psxeJYH extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        qRMEpGJ = true;\n        (new nMqcHqB()).RYNMBky(data, request, response);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class nMqcHqB {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (psxeJYH.qRMEpGJ) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200108,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class WIGwCvF extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200113,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class PdWyNPD {\n\n    \n    public void fDqjRYE(LzHjTIT.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(LzHjTIT.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class LzHjTIT extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new PdWyNPD()).fDqjRYE(dataContainer, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new PdWyNPD()).KgJSeXB(dataContainer, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200131,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class uKwKBIu extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        \n        data = System.getenv(\"ADD\");\n        (new NKDSqDV()).RYNMBky(request, response);\n    }\n}\n\npublic class NKDSqDV {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = uKwKBIu.data;\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200132,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class KlLAMQI extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200147,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class LJjFHPX extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            \n            data = System.getenv(\"ADD\");\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200167,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class UldjfsU extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200169,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class AbXJaQG extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200171,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class kaqdtRP extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    data = URLEncoder.encode(data, \"UTF-8\");\n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200173,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MirpJHy {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class GEEMxBC extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new MirpJHy()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new MirpJHy()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200191,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class BDBJrSC {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new XrxCswj()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new XrxCswj()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class KvTyBFU {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class XrxCswj {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MMSHbbf()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new MMSHbbf()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class MMSHbbf {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new KvTyBFU()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new KvTyBFU()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class SEchKvV extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new BDBJrSC()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new BDBJrSC()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200197,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class wlelSKz extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200229,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class LoQdQyS extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200231,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class fnLrUdn {\n\n    \n    public void ZpnQtvQ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (jygMvQS.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (jygMvQS.HHhrjCy) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (jygMvQS.Pywwbtz) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class jygMvQS extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n        EXrOlJC(request, response);\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new fnLrUdn()).ZpnQtvQ(data, request, response);\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new fnLrUdn()).VmywRrZ(data, request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new fnLrUdn()).fDqjRYE(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200253,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class iCpeCMG extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200257,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class flqKdCW {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TFdWfTK()).fDqjRYE(data, request, response);\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TFdWfTK()).KgJSeXB(data, request, response);\n    }\n}\n\npublic class TFdWfTK {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class PQPjrci extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new flqKdCW()).fDqjRYE(data, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new flqKdCW()).KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200265,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class iDTUbWk {\n\n    \n    public void fDqjRYE(IXlyjaN.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(IXlyjaN.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class IXlyjaN extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new iDTUbWk()).fDqjRYE(dataContainer, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new iDTUbWk()).KgJSeXB(dataContainer, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200275,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class GDgtCaQ extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200292,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rFovBBB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200309,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UDuBPpf extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200311,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class rdWMKPq extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200312,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class wqIkCLG extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200321,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class XxrlDJy extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200330,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YLmWHQA {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class CiyVhfH extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new YLmWHQA()).fDqjRYE(dataArray, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new YLmWHQA()).KgJSeXB(dataArray, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200345,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class bpMNiLQ extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200371,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class jwmiQVF extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200388,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class VKCvXGe extends AbstractTestCaseServlet {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data, request, response);\n    }\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (dWmGbZa) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200394,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class BQEbJmW extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200402,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class tFOWZwO extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200432,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class QtVdkoW extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200445,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class AZFmYKL extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", data);\n                \n                response.addCookie(cookieSink);\n            }\n        } else {\n            if (data != null) {\n                Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n                \n                response.addCookie(cookieSink);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200454,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class LwyFVfG extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n\n    private void KgJSeXB(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200473,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class OOokkVV extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200474,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class iodjFzb {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", data);\n            \n            response.addCookie(cookieSink);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            Cookie cookieSink = new Cookie(\"lang\", URLEncoder.encode(data, \"UTF-8\"));\n            \n            response.addCookie(cookieSink);\n        }\n    }\n}\n\npublic class ivlaUod extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iodjFzb()).fDqjRYE(dataVector, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new iodjFzb()).KgJSeXB(dataVector, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200497,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class lVMNQOA extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200520,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class BMTjkhe extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200525,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class dcsOcZs extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (data != null) {\n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200529,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class ogZjJeP extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new OriQZni()).RYNMBky(data, request, response);\n    }\n}\n\npublic class bdlMVmp {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class OriQZni {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new XszMhUF()).RYNMBky(data, request, response);\n    }\n}\n\npublic class XszMhUF {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new bdlMVmp()).RYNMBky(data, request, response);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200554,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.net.URLEncoder;\n\npublic class DAkUJNG {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class bvrjYRq extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new DAkUJNG()).wHnwAlc(request, response);\n        \n        if (data != null) {\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new DAkUJNG()).snawHrb(request, response);\n        \n        if (data != null) {\n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.addHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200559,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class RyxFHcw extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200583,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UzGziNR extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200596,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class UzGziNR extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                data = URLEncoder.encode(data, \"UTF-8\");\n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n        uytpYbp(request, response);\n        OQsEKDS(request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200597,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.net.URLEncoder;\n\npublic class vfwDtna extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200602,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  },
  {
    "CWE_ID": [
      "CWE-113"
    ],
    "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GejDEfg {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            data = URLEncoder.encode(data, \"UTF-8\");\n            response.setHeader(\"Location\", \"/author.jsp?lang=\" + data);\n        }\n    }\n}\n\npublic class nVWPMXV extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n        NDSwpcn(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new GejDEfg()).fDqjRYE(dataArray, request, response);\n    }\n\n    \n    private void NDSwpcn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new GejDEfg()).KgJSeXB(dataArray, request, response);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1200633,
    "RELATED_CWE": [
      "CWE-79",
      "CWE-918",
      "CWE-346"
    ]
  }
]