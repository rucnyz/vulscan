[
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class mPdYnef extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n    }\n\n    private void sEXYVUh() throws Throwable {\n        FileInputStream streamFileInput = null;\n        try {\n            int bytesToRead = 1024;\n            byte[] byteArray = new byte[bytesToRead];\n            streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n            int numberOfBytesRead = streamFileInput.read(byteArray);\n            \n            if (numberOfBytesRead == -1) {\n                IO.writeLine(\"JshMoiz\");\n            } else {\n                if (numberOfBytesRead < bytesToRead) {\n                    IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                } else {\n                    IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                }\n            }\n        } catch (FileNotFoundException exceptFileNotFound) {\n            IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n        } finally {\n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228321,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class ryNSusX extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (privateTrue) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228329,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class PkXhUVJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228331,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class JAkztSO extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (privateFive == 5) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228333,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class OQpVhcY extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (true) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228323,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class XLcjnJJ extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (5 == 5) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228325,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class QpSySwH extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                streamFileInput.read(byteArray);\n                \n                IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228326,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class JGAkjiE extends AbstractTestCase {\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (IO.staticTrue) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228339,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FileNotFoundException;\nimport java.util.logging.Level;\n\npublic class QpSySwH extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void sEXYVUh() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    \n    private void kYrcdjt() throws Throwable {\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            FileInputStream streamFileInput = null;\n            try {\n                int bytesToRead = 1024;\n                byte[] byteArray = new byte[bytesToRead];\n                streamFileInput = new FileInputStream(\"c:\\\\file.txt\");\n                int numberOfBytesRead = streamFileInput.read(byteArray);\n                \n                if (numberOfBytesRead == -1) {\n                    IO.writeLine(\"JshMoiz\");\n                } else {\n                    if (numberOfBytesRead < bytesToRead) {\n                        IO.writeLine(\"XUXFjsI\" + bytesToRead + \"JjSSFWE\");\n                    } else {\n                        IO.writeLine(new String(byteArray, \"CjzxHrz\"));\n                    }\n                }\n            } catch (FileNotFoundException exceptFileNotFound) {\n                IO.logger.log(Level.WARNING, \"AYUKLmI\", exceptFileNotFound);\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"EQliCSy\", exceptIO);\n            } finally {\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"nFbzfEj\", exceptIO);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        sEXYVUh();\n        kYrcdjt();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1228327,
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  }
]