[
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nZmgefw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207810,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class zyNwlJn extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207816,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RPtcFUt extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207823,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qcwdwYJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207826,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qcwdwYJ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207827,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ickqSRh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207829,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class apsKtnF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207834,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class PHnmpCE extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207841,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nZgzyYc extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        qRMEpGJ = true;\n        (new irTcdgf()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class irTcdgf {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (nZgzyYc.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207846,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qlfmoTh extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207850,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qlfmoTh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207851,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SJlkrLw extends AbstractTestCase {\n\n    \n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private String snawHrb() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        String data = snawHrb();\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207853,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uJroaRf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new MLgpiCH()).RYNMBky(data);\n    }\n}\n\npublic class MLgpiCH {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new QJjNUcQ()).RYNMBky(data);\n    }\n}\n\npublic class tpRzTDn {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class QJjNUcQ {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new tpRzTDn()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207860,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YnuOKbC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new zyyZlcw()).RYNMBky(data);\n    }\n}\n\npublic class zyyZlcw {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new fKMgyCK()).RYNMBky(data);\n    }\n}\n\npublic class duRHIZQ {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class fKMgyCK {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new EqNXkbE()).RYNMBky(data);\n    }\n}\n\npublic class EqNXkbE {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new duRHIZQ()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207862,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FhoQfhq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new yTIRgzC()).ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class yTIRgzC {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207864,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mMcnJuz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new rUSOPOH()).RYNMBky((Object) data);\n    }\n}\n\npublic class rUSOPOH {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207872,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class YieLPFu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new LfTXKKj()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class LfTXKKj {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207878,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lwtjHhV extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207888,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ZfkdsDd extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207893,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hdmigwg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207900,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class BAMbmAt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207904,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class XXNqEys extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207909,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class MCUPKsX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207912,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class PwEnqge extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207915,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lobWrKj extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        \n        \n        data = System.getenv(\"ADD\");\n        qRMEpGJ = true;\n        (new IvnLken()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class IvnLken {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (lobWrKj.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207918,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class VPVDbDT extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207924,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class VPVDbDT extends AbstractTestCase {\n\n    \n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private String snawHrb() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        String data = snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207925,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vtiRGwm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new nIGGaVu()).RYNMBky(data);\n    }\n}\n\npublic class nIGGaVu {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207928,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vIpExXM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new gOMqNte()).RYNMBky(data);\n    }\n}\n\npublic class eiugRkb {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n\npublic class gOMqNte {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new KnUQDRL()).RYNMBky(data);\n    }\n}\n\npublic class ZgJqhyP {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new eiugRkb()).RYNMBky(data);\n    }\n}\n\npublic class KnUQDRL {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ZgJqhyP()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207934,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class EkQZBSS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new qnHyodf()).ImBBndW();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n\npublic class qnHyodf {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207936,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mDqXuKp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new kzVTGIV()).RYNMBky((Object) data);\n    }\n}\n\npublic class kzVTGIV {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207944,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class ICAJNzR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new hfDQaTH()).RYNMBky(dataVector);\n    }\n}\n\npublic class hfDQaTH {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207946,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BmqBGHs extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207955,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dKmXZMb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207956,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dKmXZMb extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207957,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GAdLhkP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207971,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GmWndhA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207976,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NTwxlHl extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207981,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XpnbeOH extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207985,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ASJBAuQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207986,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BhzjLGh extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new kYTpXGq()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class kYTpXGq {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (BhzjLGh.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207990,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rvcIgpP extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207994,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KSSoIQG {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class ceLsDnd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new KSSoIQG()).wHnwAlc();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data = (new KSSoIQG()).snawHrb();\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208009,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NjRDxru extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208027,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JRjspTG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208028,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qtSgncN extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208037,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UNiFfXb extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208039,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cdlWuaz extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208040,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cdlWuaz extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208041,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zqMiMCx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208043,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WBnKnUG extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208061,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zLlrgxz extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new YuFtlqA()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class YuFtlqA {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (zLlrgxz.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208062,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QyJckoH extends AbstractTestCase {\n\n    \n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private String snawHrb() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        String data = snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208069,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LYItDxh extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new RWeCcGE()).RYNMBky();\n    }\n}\n\npublic class RWeCcGE {\n\n    public void RYNMBky() throws Throwable {\n        String data = LYItDxh.data;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208086,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class bMfemqz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nqfSvCE()).RYNMBky(dataVector);\n    }\n}\n\npublic class nqfSvCE {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208090,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class erOrZAD extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208105,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qGQIYxa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208114,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class clggxpC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208116,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JEVMRbC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208123,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HyZsxju extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208133,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sWtHuMn {\n\n    \n    public void ZpnQtvQ(String data) throws Throwable {\n        if (yFXmsCO.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data) throws Throwable {\n        if (yFXmsCO.HHhrjCy) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (yFXmsCO.Pywwbtz) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class yFXmsCO extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new sWtHuMn()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new sWtHuMn()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new sWtHuMn()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208135,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xHYRQPQ extends AbstractTestCase {\n\n    \n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private String snawHrb() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        String data = snawHrb();\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208141,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GHfOmGh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new iWopgUc()).RYNMBky(data);\n    }\n}\n\npublic class iWopgUc {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208144,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hMxJsEh extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new LvjCMNO()).RYNMBky(dataContainer);\n    }\n}\n\npublic class LvjCMNO {\n\n    public void RYNMBky(hMxJsEh.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208156,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HRwRUCL extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208177,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GQwmWqI extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208181,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RNYTZNc extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208183,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fkCnpYi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208188,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LMGYOpm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208190,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LMGYOpm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208191,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oFNPARr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208192,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TkJXDMA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208195,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qRmwHVS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208197,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JNXVMSG extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208203,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MUsOWXn extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new zZcYKyW()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class zZcYKyW {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (MUsOWXn.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208206,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cYMPslf extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208212,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uuJjTyJ {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class fwfcXjM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new uuJjTyJ()).wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data = (new uuJjTyJ()).snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208225,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class mokKCnS {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class qMtsmgN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new mokKCnS()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new mokKCnS()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208237,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class QfyluYO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208246,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SwKcvYd extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208249,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class yWmFFAJ extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208251,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class MfgGuBV extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208255,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class yiYekJW extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208257,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class fyUXtFg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208258,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vVQsnYv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208260,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class cGkwXes extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208263,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qLnYCTl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208264,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rbmaMFc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208268,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class trkGncD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208270,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class trkGncD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    System.out.format(\"Rujtcfu\", data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(\"Rujtcfu\", data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208271,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ZWmwiwZ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208275,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CLZZxgr extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208277,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GySDrpK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getProperty(\"user.home\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208280,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SoMMCMI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new ERphJSR()).RYNMBky(data);\n    }\n}\n\npublic class ERphJSR {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208288,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class GZxwTbn {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n}\n\npublic class QSeVuOl extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new GZxwTbn()).wHnwAlc();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data = (new GZxwTbn()).snawHrb();\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208297,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rgaGCmA extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new VVIYyee()).RYNMBky(dataContainer);\n    }\n}\n\npublic class VVIYyee {\n\n    public void RYNMBky(rgaGCmA.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208300,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class UqkFGmO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new RYaejAv()).RYNMBky(dataVector);\n    }\n}\n\npublic class RYaejAv {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208306,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class junJyQV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208317,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class JiOxkkt extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208324,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dgmfpjN extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208327,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class quYruNd extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208328,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class akTBpof extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208331,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class cmvQQpC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208333,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hEmkZFx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208335,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DxPjqKv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208340,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hUGgdkL extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208347,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LIRctzT extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(String data) throws Throwable {\n        if (dWmGbZa) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208348,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class NHgMNHF extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208358,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class aKSkMYr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new xhAZuVP()).RYNMBky(data);\n    }\n}\n\npublic class xhAZuVP {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new JfRaweC()).RYNMBky(data);\n    }\n}\n\npublic class JfRaweC {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208362,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class TTZXSRP {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n}\n\npublic class cfkipKB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new TTZXSRP()).wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data = (new TTZXSRP()).snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208369,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KhAFfiy extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new TkToBYg()).RYNMBky(dataContainer);\n    }\n}\n\npublic class TkToBYg {\n\n    public void RYNMBky(KhAFfiy.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208372,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lkJDUiw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208386,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class duoDKke extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208388,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ZutcTNO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208390,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class OjpAClx extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208392,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class geWXZuA extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208395,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class PTKGYCN extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208396,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class AgFiGZk extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208409,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class tstqIvJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208416,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class tstqIvJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208417,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lyhJnDu extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208431,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class xaUWJWX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new YsvMciW()).RYNMBky(data);\n    }\n}\n\npublic class YsvMciW {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208432,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class rnRGVHr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new xikOvZs()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class xikOvZs {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208454,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class xoNjaao extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207821,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YoAImkK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new tUhchtY()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class tUhchtY {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207880,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sTMwgsE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getenv(\"ADD\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207920,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kYTpXGq {\n\n    \n    public void ZpnQtvQ(String data) throws Throwable {\n        if (BhzjLGh.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data) throws Throwable {\n        if (BhzjLGh.HHhrjCy) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (BhzjLGh.Pywwbtz) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class BhzjLGh extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new kYTpXGq()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new kYTpXGq()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new kYTpXGq()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207991,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class haPGRwm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new UzzJeqh()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new UzzJeqh()).KgJSeXB(data);\n    }\n}\n\npublic class wmEVHIQ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new taTvFZw()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new taTvFZw()).KgJSeXB(data);\n    }\n}\n\npublic class UzzJeqh {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new wmEVHIQ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new wmEVHIQ()).KgJSeXB(data);\n    }\n}\n\npublic class taTvFZw {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class LxLphFk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new haPGRwm()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new haPGRwm()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208079,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class mJKRHpO {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class GkrGdat extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new mJKRHpO()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new mJKRHpO()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208089,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wYgGvii extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208119,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QQCYnbO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208125,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MTeOvWg extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208131,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fkCnpYi extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208189,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class iUiNpZo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208209,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class NQPmEke extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new kwpuJbb()).RYNMBky(dataVector);\n    }\n}\n\npublic class kwpuJbb {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208234,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SwKcvYd extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208248,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class yiYekJW extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208256,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class NWzlkps extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208283,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class CsMbgfE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new nypQXcK()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class nypQXcK {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208308,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class AYGOeVP {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class aZdKvsB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new AYGOeVP()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new AYGOeVP()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208361,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class aCGrBnW {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = sjSyCJS.data;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        String data = sjSyCJS.data;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class sjSyCJS extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new aCGrBnW()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new aCGrBnW()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208375,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class MQuOedO {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class CEzmwhy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new MQuOedO()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new MQuOedO()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208451,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class LTXMXEf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208461,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class pGwNszk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208463,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class nfNkpNF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208480,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class saKIToB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208483,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class NFBMKNw extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208491,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class jukxQXL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new vuBDMYD()).ImBBndW();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n\npublic class vuBDMYD {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208512,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class MuFsyDF extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208537,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class iyYEXCv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208549,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class FpwKzKK extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208557,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class VhTAqpt extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208563,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class CsJaiMw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new MjkkaSY()).RYNMBky(data);\n    }\n}\n\npublic class MjkkaSY {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new UQOecnn()).RYNMBky(data);\n    }\n}\n\npublic class UQOecnn {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new isCuyQW()).RYNMBky(data);\n    }\n}\n\npublic class isCuyQW {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new CHdtwSt()).RYNMBky(data);\n    }\n}\n\npublic class CHdtwSt {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208582,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class PGeHoBY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208621,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class LjJvQFA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n            break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208632,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class KEwcIFY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208640,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class YLptdcD extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new vVETHli()).RYNMBky(dataContainer);\n    }\n}\n\npublic class vVETHli {\n\n    public void RYNMBky(YLptdcD.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208660,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LDezhgB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208679,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lCzzPCc {\n\n    \n    public void ZpnQtvQ(String data) throws Throwable {\n        if (aUXxLSg.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data) throws Throwable {\n        if (aUXxLSg.HHhrjCy) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (aUXxLSg.Pywwbtz) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class aUXxLSg extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ydhDOMq = false;\n        (new lCzzPCc()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        HHhrjCy = true;\n        (new lCzzPCc()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new lCzzPCc()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208711,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class DrAAiED extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new DmInKVS()).RYNMBky(data);\n    }\n}\n\npublic class bLzVhuk {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class DmInKVS {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new bLzVhuk()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208722,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hRLwxUW {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class eXQOiBH {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new hRLwxUW()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new hRLwxUW()).KgJSeXB(data);\n    }\n}\n\npublic class CRDaRbU {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new eXQOiBH()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new eXQOiBH()).KgJSeXB(data);\n    }\n}\n\npublic class aCjNmHA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new CRDaRbU()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new CRDaRbU()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208725,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IvpyYFj extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208760,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class asknuyN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    \n                    try {\n                        readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                \n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    System.out.printf(\"Rujtcfu\", data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    \n                    try {\n                        readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                \n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(\"Rujtcfu\", data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208775,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CEnNueP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208787,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VjdavNZ extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new JEHPnFx()).RYNMBky(dataContainer);\n    }\n}\n\npublic class JEHPnFx {\n\n    public void RYNMBky(VjdavNZ.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208804,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class tTpTOQw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Connection connection = null;\n                    PreparedStatement preparedStatement = null;\n                    ResultSet resultSet = null;\n                    try {\n                        \n                        connection = IO.getDBConnection();\n                        \n                        preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                        resultSet = preparedStatement.executeQuery();\n                        \n                        data = resultSet.getString(1);\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                    } finally {\n                        \n                        try {\n                            if (resultSet != null) {\n                                resultSet.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                        }\n                        try {\n                            if (preparedStatement != null) {\n                                preparedStatement.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                        }\n                        try {\n                            if (connection != null) {\n                                connection.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208846,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class BgZvpbE {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new QZMPFyu()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new QZMPFyu()).KgJSeXB(data);\n    }\n}\n\npublic class rMIlEaH {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new BgZvpbE()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new BgZvpbE()).KgJSeXB(data);\n    }\n}\n\npublic class QZMPFyu {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class iAcmkDc extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new rMIlEaH()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        (new rMIlEaH()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208869,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class lWxmYDk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new QNWdSjv()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class QNWdSjv {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208888,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class REFtpgp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208890,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class aGPRksE {\n\n    \n    public void ZpnQtvQ(String data) throws Throwable {\n        if (LgEsKlq.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data) throws Throwable {\n        if (LgEsKlq.HHhrjCy) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (LgEsKlq.Pywwbtz) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class LgEsKlq extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new aGPRksE()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data = null;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new aGPRksE()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new aGPRksE()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208927,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class wrhRCCS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208929,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class iiCQPet extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208931,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class lLCTNDt extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208967,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class NfvZBAv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    ServerSocket listener = null;\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    \n                    try {\n                        listener = new ServerSocket(39543);\n                        socket = listener.accept();\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                        try {\n                            if (listener != null) {\n                                listener.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208990,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class rugjGee extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209004,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class vygLKOr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new htqEjxK()).ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class htqEjxK {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209016,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class QAwAcrw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209036,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class pnvvecb extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209043,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class OoUpKzk extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209046,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class QrvdceM extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209048,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class HnoxIrk extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209065,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ydOBjHL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        (new ytwODMe()).RYNMBky(data);\n    }\n}\n\npublic class FMZkHWG {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new lgsxqim()).RYNMBky(data);\n    }\n}\n\npublic class VdHiWDC {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n\npublic class ytwODMe {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new FMZkHWG()).RYNMBky(data);\n    }\n}\n\npublic class lgsxqim {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new VdHiWDC()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209086,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class CDIFZlp {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    public String snawHrb() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class zNYjQVq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new CDIFZlp()).wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data = (new CDIFZlp()).snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209089,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class RhdsHPN {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class DywNWPo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new RhdsHPN()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new RhdsHPN()).KgJSeXB(dataLinkedList);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1209101,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RPtcFUt extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207822,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class KOowjKO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207831,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class EEOUngz extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207837,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FzuivYK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new GunLfTX()).RYNMBky(data);\n    }\n}\n\npublic class CxkQhEX {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class GunLfTX {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new CxkQhEX()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207858,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class fxclOLL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207910,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class sTMwgsE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getenv(\"ADD\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207921,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class qzLYfcX {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class rzciVgw {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new qzLYfcX()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new qzLYfcX()).KgJSeXB(data);\n    }\n}\n\npublic class uOMPKgL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new rzciVgw()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new rzciVgw()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207931,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PNQOVle extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207996,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class nrlqRhK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new dyLtTWm()).RYNMBky(dataVector);\n    }\n}\n\npublic class dyLtTWm {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208018,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nbuRcVQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208046,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GFBlhxe extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208071,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DKFFdVg extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208102,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NsoPBmT extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208113,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HyZsxju extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(String data) throws Throwable {\n        if (dWmGbZa) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208132,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class vXZAtFf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new TinsdVB()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class TinsdVB {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208164,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hWjWrMP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208172,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hWjWrMP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208173,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rGRTZwe extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208205,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IVnxlOd {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class DRNLMGX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new IVnxlOd()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new IVnxlOd()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208227,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class qMtsmgN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new mokKCnS()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class mokKCnS {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208236,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dSCRMNC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208242,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uilTaqZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208245,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class wZIuwtl {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = sNaEXQx.data;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        String data = sNaEXQx.data;\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class sNaEXQx extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new wZIuwtl()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new wZIuwtl()).KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208303,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class AEZumjm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208314,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dgmfpjN extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208326,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class ZhqsAMY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208336,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LIRctzT extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208349,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rJMnfoP extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data = null;\n        \n        \n        data = System.getProperty(\"user.home\");\n        qRMEpGJ = true;\n        (new bxNHlYZ()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class bxNHlYZ {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (rJMnfoP.qRMEpGJ) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208350,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YzigqvB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticTrue) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208405,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class zTYlzHZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(String data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(String data) throws Throwable {\n        if (aOWZSGn) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (DBbhdbc) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208421,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class LTXMXEf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208460,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class eQOPnjf extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208465,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class FdNjrBa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208497,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class EypKZLR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (true) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207813,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tGYkxJX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207815,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rtEmVhI extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207818,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class xoNjaao extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207820,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class NDOoctk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207832,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class EEOUngz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207836,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class lCacHtp extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int j = 0; j < 1; j++) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        for (int k = 0; k < 1; k++) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207843,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class SJlkrLw extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207852,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rUSOPOH {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class mMcnJuz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new rUSOPOH()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new rUSOPOH()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207873,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class oKlRSQM {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class WwLLyhe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new oKlRSQM()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new oKlRSQM()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207875,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nTGtFSi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207886,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dxTbtWl extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207890,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dxTbtWl extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (privateTrue) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207891,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class uxLwCOv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207899,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class fxclOLL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                if (data != null) {\n                    \n                    System.out.printf(\"Rujtcfu\", data);\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(\"Rujtcfu\", data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207911,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class MCUPKsX extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        while (true) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207913,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class yHydZbe extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207927,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class nIGGaVu {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class vtiRGwm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new nIGGaVu()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new nIGGaVu()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207929,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xWGLVeH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207959,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VEMdXdY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.format(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207982,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BnaBJFN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1207992,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LjpbRbd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new eujpvsk()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class eujpvsk {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208020,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lZkMzeq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new Snhxlin()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class Snhxlin {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208022,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WxMVEVP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208051,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class xxKSKUl extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208067,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class IXwWXEH {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class NJTtxbm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new IXwWXEH()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new IXwWXEH()).KgJSeXB(data);\n    }\n}\n\npublic class BYqWvqe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new NJTtxbm()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new NJTtxbm()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208075,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tTTrHfM {\n\n    \n    public void fDqjRYE(mXRQlCb.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(mXRQlCb.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class mXRQlCb extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new tTTrHfM()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new tTTrHfM()).KgJSeXB(dataContainer);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208085,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class nqfSvCE {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class bMfemqz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nqfSvCE()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new nqfSvCE()).KgJSeXB(dataVector);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208091,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qfbjpjx {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class aCQaKow extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new qfbjpjx()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new qfbjpjx()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208095,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class iWopgUc {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class GHfOmGh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new iWopgUc()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new iWopgUc()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208145,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dSvuXCx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new UMRqqvG()).RYNMBky(data);\n    }\n}\n\npublic class UMRqqvG {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new FiBWdtB()).RYNMBky(data);\n    }\n}\n\npublic class FiBWdtB {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208146,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZumiwGZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new xwEJncd()).RYNMBky(data);\n    }\n}\n\npublic class KkISYLZ {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class JUeROJe {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new oLUTEZZ()).RYNMBky(data);\n    }\n}\n\npublic class xwEJncd {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new JUeROJe()).RYNMBky(data);\n    }\n}\n\npublic class oLUTEZZ {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new KkISYLZ()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208150,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pTRplDu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new CQUSskT()).RYNMBky(dataArray);\n    }\n}\n\npublic class CQUSskT {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208154,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class HaBxCKO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new UHBmdEI()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class UHBmdEI {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208166,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class UHBmdEI {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class HaBxCKO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new UHBmdEI()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new UHBmdEI()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208167,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class dgmBjwB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208175,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RNYTZNc extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (privateFive == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208182,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UvyBeTA extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private String FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        String data = FOqrAxr;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208215,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class zkhDjCR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new JNxIqKj()).RYNMBky(data);\n    }\n}\n\npublic class JNxIqKj {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208216,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class WpDwxpE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new kWmILHx()).RYNMBky(data);\n    }\n}\n\npublic class KDmRpGa {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new dzCKwFL()).RYNMBky(data);\n    }\n}\n\npublic class BnWjFik {\n\n    public void RYNMBky(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n}\n\npublic class dzCKwFL {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new BnWjFik()).RYNMBky(data);\n    }\n}\n\npublic class kWmILHx {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new KDmRpGa()).RYNMBky(data);\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208222,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ztiWVbL {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class qQjamBT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ztiWVbL()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new ztiWVbL()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208233,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class dSCRMNC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208243,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class rbmaMFc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticFive == 5) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208269,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class FeAcLjm {\n\n    \n    public void ZpnQtvQ(String data) throws Throwable {\n        if (nKEROjE.ydhDOMq) {\n            \n            data = null;\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(String data) throws Throwable {\n        if (nKEROjE.HHhrjCy) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (nKEROjE.Pywwbtz) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        } else {\n            \n            data = null;\n        }\n    }\n}\n\npublic class nKEROjE extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data = null;\n        \n        \n        data = System.getProperty(\"user.home\");\n        ydhDOMq = false;\n        (new FeAcLjm()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data = null;\n        \n        \n        data = System.getProperty(\"user.home\");\n        HHhrjCy = true;\n        (new FeAcLjm()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = null;\n        \n        data = \"foo\";\n        Pywwbtz = true;\n        (new FeAcLjm()).fDqjRYE(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208279,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class QSeVuOl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new GZxwTbn()).ImBBndW();\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n}\n\npublic class GZxwTbn {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208296,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class sHCjwed {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(data);\n        }\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        if (data != null) {\n            \n            System.out.format(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class OCCpNHO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new sHCjwed()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new sHCjwed()).KgJSeXB(dataHashMap);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208311,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hQqCcgb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (5 == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208318,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class quYruNd extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (privateReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208329,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pEhgprA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208338,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class pEhgprA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208339,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class AtWJclz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        switch(7) {\n            case 7:\n                if (data != null) {\n                    \n                    System.out.printf(data);\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208342,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class LanVLGr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(data);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getProperty(\"user.home\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            if (data != null) {\n                \n                System.out.printf(\"Rujtcfu\", data);\n            }\n        }\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208353,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class hPTymAR extends AbstractTestCase {\n\n    \n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    private String snawHrb() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        String data = snawHrb();\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208357,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class RRjTjsk {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new lRHtiUt()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new lRHtiUt()).KgJSeXB(data);\n    }\n}\n\npublic class XdUrwjv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class lRHtiUt {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new XdUrwjv()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(String data) throws Throwable {\n        (new XdUrwjv()).KgJSeXB(data);\n    }\n}\n\npublic class NbOkIQH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new RRjTjsk()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new RRjTjsk()).KgJSeXB(data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208365,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tuKXJMl {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class QoVQDHU extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new tuKXJMl()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new tuKXJMl()).KgJSeXB(dataArray);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208371,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\n\npublic class tDanItd {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(data);\n        }\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        if (data != null) {\n            \n            System.out.printf(\"Rujtcfu\", data);\n        }\n    }\n}\n\npublic class WDaQKqA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new tDanItd()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new tDanItd()).KgJSeXB((Object) data);\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208377,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  },
  {
    "CWE_ID": [
      "CWE-134"
    ],
    "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YLWLdvV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(data);\n            }\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        if (IO.staticReturnsTrue()) {\n            if (data != null) {\n                \n                System.out.format(\"Rujtcfu\", data);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "juliet 1.3",
    "idx": 1208407,
    "RELATED_CWE": [
      "CWE-119",
      "CWE-787",
      "CWE-125"
    ]
  }
]