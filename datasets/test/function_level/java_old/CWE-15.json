[
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LoHkskO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209111,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ZQaBffi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209113,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class qjiMdEB extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209114,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class rbGtYjX extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209120,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class NkUyQxS extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209122,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class NkUyQxS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209123,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EzlbGOO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209128,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EzlbGOO extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209129,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class CSJEISt extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209131,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class piEpuLJ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209136,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class oFtIIgI extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209138,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class yaphExV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new GUzIuFo()).RYNMBky(data);\n    }\n}\n\npublic class GUzIuFo {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209152,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class pKoTOJb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new GFpZuso()).RYNMBky(data);\n    }\n}\n\npublic class qwhQXVp {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class ODDrdoI {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new qwhQXVp()).RYNMBky(data);\n    }\n}\n\npublic class GFpZuso {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ODDrdoI()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209156,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class qgLsqXx {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class NXxAfdA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new qgLsqXx()).wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209161,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class gdSPBVJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new nziwJSe()).RYNMBky((Object) data);\n    }\n}\n\npublic class nziwJSe {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209168,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class gdSPBVJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new nziwJSe()).fDqjRYE((Object) data);\n    }\n}\n\npublic class nziwJSe {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209169,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EUuZOCu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new JjWbLFq()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class JjWbLFq {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209173,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class cRuYbBJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new anTkRgA()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class anTkRgA {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209175,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zhVqrGN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209179,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class rrMHFnm extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209185,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class BWMHHNy extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209187,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class TJgKaKw extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209189,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class kGytyqV extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209193,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class DFgdcXS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209205,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class yrtLRgD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209207,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class SfsBCUN extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209209,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class MWSNTPi extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209210,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class kMNQMhy extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209213,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class giTsjHr extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new KWmlqTe()).TkRMSAh();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new KWmlqTe()).szAnMjq();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class KWmlqTe {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (giTsjHr.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (giTsjHr.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209215,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class EmEAVhg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209216,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class WlMHDho extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209221,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VEGLrDI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ifAeFEL()).fDqjRYE(data);\n    }\n}\n\npublic class qtaizgC {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class XTAHaRz {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new qtaizgC()).fDqjRYE(data);\n    }\n}\n\npublic class ifAeFEL {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new XTAHaRz()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209229,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class EpZnYRa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new HYbuMDJ()).fDqjRYE(data);\n    }\n}\n\npublic class yPvZenm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new onMxnGT()).fDqjRYE(data);\n    }\n}\n\npublic class onMxnGT {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class HYbuMDJ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new VbUCjyr()).fDqjRYE(data);\n    }\n}\n\npublic class VbUCjyr {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new yPvZenm()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209231,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class CZhlHrC {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class kYysxny extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new CZhlHrC()).wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209233,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class poqsYIM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new HONBasC()).RYNMBky(dataArray);\n    }\n}\n\npublic class HONBasC {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209234,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class poqsYIM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new HONBasC()).fDqjRYE(dataArray);\n    }\n}\n\npublic class HONBasC {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209235,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class gceFczo extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new Itldbuy()).fDqjRYE();\n    }\n}\n\npublic class Itldbuy {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = gceFczo.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209239,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class NIwssej extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209263,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class XjCyfEr extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209273,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nvtBhYl extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209279,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class uupRLyn extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209283,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class yVlVyLK extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209289,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class CdUZaYY extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209295,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fpGXqfY extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ZKlWGpn()).fDqjRYE(data);\n    }\n}\n\npublic class qAeDOwV {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class ZKlWGpn {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new qAeDOwV()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209299,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ROcUvlk extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new xhpfNhk()).fDqjRYE(data);\n    }\n}\n\npublic class GXpDkps {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class fbLidey {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new GXpDkps()).fDqjRYE(data);\n    }\n}\n\npublic class xhpfNhk {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new VWDmpHC()).fDqjRYE(data);\n    }\n}\n\npublic class VWDmpHC {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new fbLidey()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209303,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zhAYRPo extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new NJXVjzf()).fDqjRYE();\n    }\n}\n\npublic class NJXVjzf {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = zhAYRPo.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209311,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JmwNdao extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new gppTaoH()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class gppTaoH {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209318,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\n\npublic class TtnAqRS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new mwWtqfd()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class mwWtqfd {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209320,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\n\npublic class TtnAqRS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new mwWtqfd()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class mwWtqfd {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209321,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class agDbVEP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209325,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hlUeIUA extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209333,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class vOhWpap extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209337,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class HUhlrWw extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209343,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class DBfVXuc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209347,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class IxxPgOQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209349,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ZSmvOeo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209351,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class gvFEUYM extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209355,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TjgoYAd extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new bPAElLQ()).TkRMSAh();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new bPAElLQ()).szAnMjq();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class bPAElLQ {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (TjgoYAd.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (TjgoYAd.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209359,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class MUfBjvT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209361,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class nOcSyMQ extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209365,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class DoVYyif extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new yRerQdj()).fDqjRYE(data);\n    }\n}\n\npublic class yRerQdj {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209369,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class SeCJJGA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new UPVvEYB()).RYNMBky(data);\n    }\n}\n\npublic class UPVvEYB {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new LIengdl()).RYNMBky(data);\n    }\n}\n\npublic class LIengdl {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209370,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class vDwmTRD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new tVszwDJ()).fDqjRYE(dataArray);\n    }\n}\n\npublic class tVszwDJ {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209379,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class GkWMUjE extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new vsrGZTq()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class vsrGZTq {\n\n    \n    public void fDqjRYE(GkWMUjE.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209381,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class bsrysYT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new YapijZm()).RYNMBky((Object) data);\n    }\n}\n\npublic class YapijZm {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209384,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class bsrysYT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new YapijZm()).fDqjRYE((Object) data);\n    }\n}\n\npublic class YapijZm {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209385,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class MkwBxjV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209395,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class wxnURaM extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209401,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class LqhEXTz extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209405,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class UySNjba extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209407,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class AOmURsa extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209409,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class LDOEMbz extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209417,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class kYgGxRB extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209419,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class vtiOnVD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209421,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class YVtVsNd extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209423,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class vjkzzRm extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209425,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class guYjTgJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209427,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class tvjkCJx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209429,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class cQivABw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209433,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class uSfiNPh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209435,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class RbhgXcI extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209437,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class xvSqQNC extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209439,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ZZvfEPw {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class InhovFC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new ZZvfEPw()).wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209449,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class jokvYDr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new ogprdEk()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class ogprdEk {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209461,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JbTddtA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209467,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class xqVDHtU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209471,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class peedjwi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209473,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class BdOYZJH extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209475,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class TBmsJqW extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209477,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nHwucmS extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209485,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class PkrUjOs extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209499,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JqcdPVJ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209501,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lizgefB extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209509,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class cOQoqIE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new gdzEAXW()).fDqjRYE(data);\n    }\n}\n\npublic class ALeMaym {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class gdzEAXW {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ALeMaym()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209515,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class TBensPv {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class XuIAsVL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new TBensPv()).wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209521,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YwCGkGh extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new qFFXdKC()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class qFFXdKC {\n\n    \n    public void fDqjRYE(YwCGkGh.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209525,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class WSAGYMC extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new yoTfHeY()).fDqjRYE();\n    }\n}\n\npublic class yoTfHeY {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = WSAGYMC.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209527,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class jKABUEf extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new iTPclto()).fDqjRYE((Object) data);\n    }\n}\n\npublic class iTPclto {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209529,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class XFqFggp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new tTSmDyZ()).fDqjRYE(dataVector);\n    }\n}\n\npublic class tTSmDyZ {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209531,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class NEPvbyC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209539,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class FDykfFR extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209542,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class anldKfk extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209544,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class anldKfk extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209545,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class pUKirWf extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209560,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JrPDqAv extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209571,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class DWTLpCO extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209572,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class aMukFNw extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209581,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hoXZdtt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new zcWuFxT()).fDqjRYE(data);\n    }\n}\n\npublic class XhGKYdx {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class zcWuFxT {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new XhGKYdx()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209587,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QgUzhdC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new ySDBcJO()).fDqjRYE(data);\n    }\n}\n\npublic class sTkuRxV {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new MCbbdMY()).fDqjRYE(data);\n    }\n}\n\npublic class ySDBcJO {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new sTkuRxV()).fDqjRYE(data);\n    }\n}\n\npublic class MCbbdMY {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209589,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oZwCvpE extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new oYjErfs()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class oYjErfs {\n\n    \n    public void fDqjRYE(oZwCvpE.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209597,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class kkgTCzR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new cuFpLez()).fDqjRYE(dataVector);\n    }\n}\n\npublic class cuFpLez {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209603,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class jqYLOpL extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new YfQsgQo()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class YfQsgQo {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209607,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JoCPcre extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209623,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class xIrDxiD extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209627,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class FBHexZM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209635,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class GAqjksh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209637,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class EdMYxcH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209639,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class QEcROzB extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209643,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class TvxvaDA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209651,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class IMFTXKI {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class dTmhQUX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new IMFTXKI()).wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209665,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class rcLSpUN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new rfxefYG()).fDqjRYE(dataArray);\n    }\n}\n\npublic class rfxefYG {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209667,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class Cwqjkns extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new MPFsSwX()).fDqjRYE();\n    }\n}\n\npublic class MPFsSwX {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = Cwqjkns.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209671,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.sql.*;\n\npublic class CLmGrYI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JmQJupX()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class JmQJupX {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209681,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ZwnfKGu extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209686,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ZwnfKGu extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209687,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class DeKKwKP extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209691,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class TjCmZSK extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209696,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class TjCmZSK extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209697,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class AZXGzdB extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209703,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LiaJiNS extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209705,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class SOnDAEF extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209708,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EuZUtKz extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Cookie[] cookieSources = request.getCookies();\n                    if (cookieSources != null) {\n                        \n                        data = cookieSources[0].getValue();\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209710,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class iOLvIfT extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209712,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class iOLvIfT extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209713,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class rxaGBMU extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new JphjPQu()).TkRMSAh(request, response);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new JphjPQu()).szAnMjq(request, response);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class JphjPQu {\n\n    \n    public String TkRMSAh(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (rxaGBMU.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (rxaGBMU.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209719,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VIlubPZ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209720,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MrUhkvM extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new uAeYibW()).RYNMBky(data, request, response);\n    }\n}\n\npublic class uAeYibW {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209728,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class MrUhkvM extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new uAeYibW()).fDqjRYE(data, request, response);\n    }\n}\n\npublic class uAeYibW {\n\n    \n    public void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209729,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nGWDWEl extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new iwqMswX()).RYNMBky(data, request, response);\n    }\n}\n\npublic class hzgVPEP {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new JYjnKir()).RYNMBky(data, request, response);\n    }\n}\n\npublic class JYjnKir {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class iwqMswX {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new hzgVPEP()).RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209732,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class vAIRfix extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new FSXuvMI()).fDqjRYE(dataArray, request, response);\n    }\n}\n\npublic class FSXuvMI {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209739,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class KGbLKny extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new rYcCZMk()).fDqjRYE(request, response);\n    }\n}\n\npublic class rYcCZMk {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = KGbLKny.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209743,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class mwPWrPn extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new zlKHjkv()).fDqjRYE(dataVector, request, response);\n    }\n}\n\npublic class zlKHjkv {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209747,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class afSsWqt extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new wOWMXfz()).fDqjRYE(dataHashMap, request, response);\n    }\n}\n\npublic class wOWMXfz {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209751,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.sql.*;\n\npublic class dQJIaXi extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new wldaJHt()).fDqjRYE(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class wldaJHt {\n\n    \n    public void fDqjRYE(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209753,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class Tzumnqx extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209754,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class JfbaFZw extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209767,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class yjkhkTO extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209769,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class iqAqWqO extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209775,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class PjCheuX extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209778,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VcctdYq extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209780,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VcctdYq extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209781,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class veBfsDX extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209783,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class xlyaXHF extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            \n            data = request.getParameter(\"name\");\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209784,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class DGXzprZ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209786,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EwKfXsg extends AbstractTestCaseServlet {\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209794,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class KGShPrM extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new mXTZVso()).RYNMBky(data, request, response);\n    }\n}\n\npublic class fqUevmz {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class mXTZVso {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new fqUevmz()).RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209802,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class jmnqlpI extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new FwgzLdR()).ImBBndW(request, response);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class FwgzLdR {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209808,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class eOIodJD extends AbstractTestCaseServlet {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new KMWImMw()).RYNMBky(dataContainer, request, response);\n    }\n}\n\npublic class KMWImMw {\n\n    public void RYNMBky(eOIodJD.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209812,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class nHajdJm extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        data = \"foo\";\n        (new HhHBhfF()).fDqjRYE(request, response);\n    }\n}\n\npublic class HhHBhfF {\n\n    \n    public void fDqjRYE(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = nHajdJm.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209815,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class XvjBuWx extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new hjnhokl()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class hjnhokl {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209816,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LUSwvLO extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209829,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class zNdBIxQ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209830,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class nnRUkQg extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209841,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hLZoapS extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209842,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class zWjWQdg extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209847,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class oDuIJjp extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209149,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nBLmaYg extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209201,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OIkgZMm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new UagjUuP()).fDqjRYE((Object) data);\n    }\n}\n\npublic class UagjUuP {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209241,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lwpYsFU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209255,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class aZjhSKM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new JnSkMOA()).fDqjRYE(dataVector);\n    }\n}\n\npublic class JnSkMOA {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209315,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class pKHRKoA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209327,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class vffDRrQ extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209334,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class SFsbZKq extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209340,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class eNaHXao extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209353,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class LqhEXTz extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209404,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class isFqZrB extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209410,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class cQivABw extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209432,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class uSfiNPh extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209434,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class jKABUEf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new iTPclto()).RYNMBky((Object) data);\n    }\n}\n\npublic class iTPclto {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209528,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class jpfpPal extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209551,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class NTteRBz extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209552,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class FmlbnZg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209568,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nJlxzvp extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209578,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nJlxzvp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209579,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JNugNQs extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209621,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class xyPKfuL extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209688,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class OifoDdV extends AbstractTestCaseServlet {\n\n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209725,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class qeVKYre extends AbstractTestCaseServlet {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = EuzMspW;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        EuzMspW = data;\n        RYNMBky(request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209726,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EwKfXsg extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209795,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class tSijpto extends AbstractTestCaseServlet {\n\n    private String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = wHnwAlc(request, response);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209797,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class SVLjzyV extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new ItfvqpF()).RYNMBky(dataSerialized, request, response);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class ItfvqpF {\n\n    public void RYNMBky(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209824,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class sKpEjSy extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209832,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class UOuOWRv extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209836,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class heLrVqc extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209839,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class GjPoqie extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209844,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class CvzyHKN extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n            break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209856,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class tQgjucQ extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209864,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class UFhyQdr extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new MDpEkLd()).RYNMBky(dataArray, request, response);\n    }\n}\n\npublic class MDpEkLd {\n\n    public void RYNMBky(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209882,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class UChNmns extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new tzWpyNP()).RYNMBky((Object) data, request, response);\n    }\n}\n\npublic class tzWpyNP {\n\n    public void RYNMBky(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209888,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zKrECTu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209899,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class OYwNdXC extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209911,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class JJakoGY extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209922,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class pzEHSqu extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209933,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class bIHhuZw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new SHEKLnx()).RYNMBky(dataArray);\n    }\n}\n\npublic class SHEKLnx {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209954,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class qwkADRA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new NqKNQsS()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class NqKNQsS {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209964,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class tiNGUsH extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209108,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class CSJEISt extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209130,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class iYFksaQ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209140,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class XGZETtX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209147,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class bcrRppa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new OoDaVjh()).RYNMBky(data);\n    }\n}\n\npublic class TtwYpiK {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class OoDaVjh {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new TtwYpiK()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209154,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class dqnrCUL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new ZsKIDap()).RYNMBky(data);\n    }\n}\n\npublic class lulOFCg {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new vwXVmxa()).RYNMBky(data);\n    }\n}\n\npublic class ZsKIDap {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new lulOFCg()).RYNMBky(data);\n    }\n}\n\npublic class vwXVmxa {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new eOzCzNn()).RYNMBky(data);\n    }\n}\n\npublic class eOzCzNn {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209158,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class apoSupH extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new fFYlqLz()).RYNMBky(dataContainer);\n    }\n}\n\npublic class fFYlqLz {\n\n    public void RYNMBky(apoSupH.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209164,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class EUuZOCu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new JjWbLFq()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class JjWbLFq {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209172,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class mqvWELE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new imzJYXB()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class imzJYXB {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209177,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zgfMqQr extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209180,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zytBxWf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209195,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class yrtLRgD extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209206,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class XNXgrMq extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209218,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VEGLrDI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new ifAeFEL()).RYNMBky(data);\n    }\n}\n\npublic class qtaizgC {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class XTAHaRz {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new qtaizgC()).RYNMBky(data);\n    }\n}\n\npublic class ifAeFEL {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new XTAHaRz()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209228,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XLseVva extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UkEkYuL()).RYNMBky(dataVector);\n    }\n}\n\npublic class UkEkYuL {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209242,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XLseVva extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UkEkYuL()).fDqjRYE(dataVector);\n    }\n}\n\npublic class UkEkYuL {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209243,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\n\npublic class uSucpGW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new VTwtnno()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class VTwtnno {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209249,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class pTysQyM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209250,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class pTysQyM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209251,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class UuYCbUe extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209256,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class XjCyfEr extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209272,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class nvtBhYl extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        data = properties.getProperty(\"data\");\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209278,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kFTEOrO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new JRukIPe()).fDqjRYE(data);\n    }\n}\n\npublic class JRukIPe {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ubGUggs()).fDqjRYE(data);\n    }\n}\n\npublic class ubGUggs {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ZnHWGbG()).fDqjRYE(data);\n    }\n}\n\npublic class ZnHWGbG {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209301,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class GRxlsFX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new sKvMBfS()).ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class sKvMBfS {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209304,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zhAYRPo extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new NJXVjzf()).RYNMBky();\n    }\n}\n\npublic class NJXVjzf {\n\n    public void RYNMBky() throws Throwable {\n        String data = zhAYRPo.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209310,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class yEAsSTH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new iiNgqsc()).fDqjRYE((Object) data);\n    }\n}\n\npublic class iiNgqsc {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209313,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LQTVosM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new dzzvIcE()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class dzzvIcE {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209316,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class vffDRrQ extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209335,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class JfdtDRm extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209366,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class JfdtDRm extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209367,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fksjmnN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new TeWDrQA()).fDqjRYE(data);\n    }\n}\n\npublic class TeWDrQA {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new zhazleU()).fDqjRYE(data);\n    }\n}\n\npublic class zhazleU {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new FFYDFcl()).fDqjRYE(data);\n    }\n}\n\npublic class FFYDFcl {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209373,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hxZcYgZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new TqbdOly()).fDqjRYE(data);\n    }\n}\n\npublic class TqbdOly {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ClOWMGA()).fDqjRYE(data);\n    }\n}\n\npublic class ClOWMGA {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new cSQNjCS()).fDqjRYE(data);\n    }\n}\n\npublic class jxbXamv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class cSQNjCS {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new jxbXamv()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209375,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class VJAomBd extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new wTzUEwz()).RYNMBky();\n    }\n}\n\npublic class wTzUEwz {\n\n    public void RYNMBky() throws Throwable {\n        String data = VJAomBd.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209382,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class HKYfbaF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new bTJfOQq()).fDqjRYE(dataVector);\n    }\n}\n\npublic class bTJfOQq {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209387,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class SDBEaIy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new GozvcTT()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class GozvcTT {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209391,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class UySNjba extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209406,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class LDOEMbz extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209416,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class YVtVsNd extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209422,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class guYjTgJ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209426,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class taaKxSH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new YkAdElG()).TkRMSAh();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new YkAdElG()).szAnMjq();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class YkAdElG {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (taaKxSH.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (taaKxSH.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209431,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class okWwioN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new JLgQUnN()).RYNMBky(data);\n    }\n}\n\npublic class YhVBgLt {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class JLgQUnN {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new YhVBgLt()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209442,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class okWwioN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new JLgQUnN()).fDqjRYE(data);\n    }\n}\n\npublic class YhVBgLt {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class JLgQUnN {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new YhVBgLt()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209443,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class hiZsydN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new SQSINCp()).fDqjRYE(data);\n    }\n}\n\npublic class NxhIrpX {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new kaSZTRE()).fDqjRYE(data);\n    }\n}\n\npublic class SQSINCp {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new trLpsEE()).fDqjRYE(data);\n    }\n}\n\npublic class trLpsEE {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new NxhIrpX()).fDqjRYE(data);\n    }\n}\n\npublic class kaSZTRE {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209447,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class VzaUFRr extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new XdDMFJe()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class XdDMFJe {\n\n    \n    public void fDqjRYE(VzaUFRr.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209453,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class pIViEkE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new mkHbcBF()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class mkHbcBF {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209463,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lJcZpuC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209487,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class tifhaWt extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209490,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class KCOLyAj extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209506,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class XFqFggp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new tTSmDyZ()).RYNMBky(dataVector);\n    }\n}\n\npublic class tTSmDyZ {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209530,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class aSgIWJr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new rxvfKVN()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class rxvfKVN {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209533,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ORXoETE extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209125,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class jVnjxTO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209132,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class jVnjxTO extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209133,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class cHePYnr extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getenv(\"ADD\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209134,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class tvADanB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209145,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class oDuIJjp extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209148,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class AHxytEq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new hPGTagV()).RYNMBky(dataVector);\n    }\n}\n\npublic class hPGTagV {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209170,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport javax.servlet.http.*;\n\npublic class cRuYbBJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new anTkRgA()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class anTkRgA {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209174,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zhVqrGN extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209178,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class zgfMqQr extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209181,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class eHuwzht extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209183,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class cuMOVDk extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209190,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class XNXgrMq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209219,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class gceFczo extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new Itldbuy()).RYNMBky();\n    }\n}\n\npublic class Itldbuy {\n\n    public void RYNMBky() throws Throwable {\n        String data = gceFczo.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209238,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ClvfbHU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new PvjmpGf()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class PvjmpGf {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209244,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\n\npublic class uSucpGW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new VTwtnno()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class VTwtnno {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209248,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class QzWIeWP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209269,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class KHtCktg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209274,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class ZnoMDVv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209276,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class ZnoMDVv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209277,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class ojCIxkA extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209285,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class HBZeGgh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209291,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class UcnKfca extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209292,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fpGXqfY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new ZKlWGpn()).RYNMBky(data);\n    }\n}\n\npublic class qAeDOwV {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class ZKlWGpn {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new qAeDOwV()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209298,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kFTEOrO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new JRukIPe()).RYNMBky(data);\n    }\n}\n\npublic class JRukIPe {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ubGUggs()).RYNMBky(data);\n    }\n}\n\npublic class ubGUggs {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ZnHWGbG()).RYNMBky(data);\n    }\n}\n\npublic class ZnHWGbG {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209300,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class pKHRKoA extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209326,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class ZZrzFPy extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209331,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hlUeIUA extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209332,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LKWmVXE extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209344,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LKWmVXE extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209345,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class NWGttEQ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209357,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class TjgoYAd extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new bPAElLQ()).ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class bPAElLQ {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (TjgoYAd.qRMEpGJ) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209358,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class TEAWVQd extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209362,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class TEAWVQd extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209363,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class nOcSyMQ extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209364,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\n\npublic class fksjmnN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new TeWDrQA()).RYNMBky(data);\n    }\n}\n\npublic class TeWDrQA {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new zhazleU()).RYNMBky(data);\n    }\n}\n\npublic class zhazleU {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new FFYDFcl()).RYNMBky(data);\n    }\n}\n\npublic class FFYDFcl {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209372,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class wyIzxtF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new eIICRZo()).ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class eIICRZo {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209376,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class HKYfbaF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new bTJfOQq()).RYNMBky(dataVector);\n    }\n}\n\npublic class bTJfOQq {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209386,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\n\npublic class OWGCIOb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new DXhQUqq()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class DXhQUqq {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209388,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class hmoAJkG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new dSqyawC()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class dSqyawC {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209392,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\n\npublic class hmoAJkG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new dSqyawC()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class dSqyawC {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209393,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class TJLLdpF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209397,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class WrHsZUy extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209402,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class kYgGxRB extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209418,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class tvjkCJx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209428,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class RbhgXcI extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209436,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class cAhNpAa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new asnavtm()).fDqjRYE(data);\n    }\n}\n\npublic class asnavtm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209441,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class rorFwXs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new YLWKQBy()).RYNMBky(dataArray);\n    }\n}\n\npublic class YLWKQBy {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209450,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class aWhdLaP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new vvxqVHJ()).RYNMBky((Object) data);\n    }\n}\n\npublic class vvxqVHJ {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209456,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class aWhdLaP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new vvxqVHJ()).fDqjRYE((Object) data);\n    }\n}\n\npublic class vvxqVHJ {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209457,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class TBmsJqW extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209476,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lJcZpuC extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209486,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class FUIblFY extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209488,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RUoIEbl extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new aqnsCrM()).ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class aqnsCrM {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (RUoIEbl.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209502,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RUoIEbl extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new aqnsCrM()).TkRMSAh();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new aqnsCrM()).szAnMjq();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class aqnsCrM {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (RUoIEbl.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (RUoIEbl.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209503,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class OxDuwNK extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209510,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class OxDuwNK extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209511,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class BMaihfE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new YbjOLUv()).fDqjRYE(data);\n    }\n}\n\npublic class WFsUHnl {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class YbjOLUv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new EXUzYEx()).fDqjRYE(data);\n    }\n}\n\npublic class EXUzYEx {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new WFsUHnl()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209517,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class aSgIWJr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new rxvfKVN()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class rxvfKVN {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209532,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\n\npublic class nkfECeb extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new fBmhdJm()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class fBmhdJm {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            Connection dbConnection = null;\n            try {\n                dbConnection = IO.getDBConnection();\n                \n                dbConnection.setCatalog(data);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n            } finally {\n                try {\n                    if (dbConnection != null) {\n                        dbConnection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209537,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lYyVmJi extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209555,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class RjMOdmb extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209565,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class lfWjWmY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209567,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.sql.*;\n\npublic class aMukFNw extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209580,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hoXZdtt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new zcWuFxT()).RYNMBky(data);\n    }\n}\n\npublic class XhGKYdx {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class zcWuFxT {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new XhGKYdx()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209586,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QgUzhdC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new ySDBcJO()).RYNMBky(data);\n    }\n}\n\npublic class sTkuRxV {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new MCbbdMY()).RYNMBky(data);\n    }\n}\n\npublic class ySDBcJO {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new sTkuRxV()).RYNMBky(data);\n    }\n}\n\npublic class MCbbdMY {\n\n    public void RYNMBky(String data) throws Throwable {\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209588,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class hcDPIHB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new wYefijg()).ImBBndW();\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n\npublic class wYefijg {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209592,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport javax.servlet.http.*;\nimport java.sql.*;\nimport java.util.logging.Level;\n\npublic class LevdTfO extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new IEkGskA()).RYNMBky();\n    }\n}\n\npublic class IEkGskA {\n\n    public void RYNMBky() throws Throwable {\n        String data = LevdTfO.data;\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209598,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    },
    {
        "CWE_ID": [
            "CWE-15"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport javax.servlet.http.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kPHwQIh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new lafMxqr()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class lafMxqr {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        Connection dbConnection = null;\n        try {\n            dbConnection = IO.getDBConnection();\n            \n            dbConnection.setCatalog(data);\n        } catch (SQLException exceptSql) {\n            IO.logger.log(Level.WARNING, \"WluePKO\", exceptSql);\n        } finally {\n            try {\n                if (dbConnection != null) {\n                    dbConnection.close();\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1209604,
        "RELATED_CWE": [
            "CWE-79",
            "CWE-352",
            "CWE-918"
        ]
    }
]