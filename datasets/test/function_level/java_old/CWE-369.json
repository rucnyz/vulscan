[
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class PxnLgfe extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230752,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class uxVMwbi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230766,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class zbbVbOk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230770,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class zbbVbOk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230771,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class BQQpCSa extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230773,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MFgpymY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230774,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MFgpymY extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        while (true) {\n            \n            data = 2.0f;\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230775,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class uwbHuEo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230776,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class uwbHuEo extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230777,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class rTvtJlR extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230778,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class FaOuInf extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new DaenPJw()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class DaenPJw {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (FaOuInf.qRMEpGJ) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230780,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class YFQjxMu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230783,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class KEroUhU extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230784,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class JxzdTLA extends AbstractTestCase {\n\n    \n    private float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        float data = wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        float data = snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230787,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class NstDjLE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new mooWWyo()).RYNMBky(data);\n    }\n}\n\npublic class JBGSbpY {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class mooWWyo {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new htQUQgE()).RYNMBky(data);\n    }\n}\n\npublic class htQUQgE {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new CLraZQE()).RYNMBky(data);\n    }\n}\n\npublic class CLraZQE {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new JBGSbpY()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230796,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class tCeoaTf {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class vieThNm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new tCeoaTf()).wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new tCeoaTf()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230799,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class EnJixKZ extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new HnmgeBV()).RYNMBky(dataContainer);\n    }\n}\n\npublic class HnmgeBV {\n\n    public void RYNMBky(EnJixKZ.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230802,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class TMPtmvJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new mNSVhJw()).RYNMBky((Object) data);\n    }\n}\n\npublic class mNSVhJw {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230806,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.util.logging.Level;\n\npublic class ZwjpZut extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UstDTRC()).RYNMBky(dataVector);\n    }\n}\n\npublic class UstDTRC {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230808,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.util.logging.Level;\n\npublic class yWXcuyT {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class FNKcUre extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new yWXcuyT()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new yWXcuyT()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230811,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class ohNmLGi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new KrbZMGE()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class KrbZMGE {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230812,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class iPxPWcF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230816,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class kxUdGdu extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (5 != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (5 == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230821,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class HLkOLKp extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230822,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class HLkOLKp extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230823,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class REaYXIa extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230824,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class UWAcuCl extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230830,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MvxtMWF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230832,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MvxtMWF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230833,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class wJjJXnX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230835,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class AyPAyrq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230838,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class uNYilUa extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230843,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class VHRJDuM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                \n                {\n                    String stringNumber = System.getenv(\"ADD\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230845,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class hBsVDIj extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new OVvzrps()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class OVvzrps {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (hBsVDIj.qRMEpGJ) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230852,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class RQjyVhi extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230856,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class RQjyVhi extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230857,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class PTFcVjV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new fjcoJOD()).RYNMBky(dataArray);\n    }\n}\n\npublic class fjcoJOD {\n\n    public void RYNMBky(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230872,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\n\npublic class ILMAfkQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new jBVKZFF()).RYNMBky(dataVector);\n    }\n}\n\npublic class jBVKZFF {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230880,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.util.logging.Level;\n\npublic class hNJWQHC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new ixJVSRF()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class ixJVSRF {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230884,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XgrXezp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230891,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zpamvye extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230892,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zpamvye extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (5 != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (5 == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230893,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nHfiKef extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230894,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nHfiKef extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230895,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rbWYffy extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230898,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rbWYffy extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230899,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XlpedUk extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230901,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mhaIAFf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230904,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mhaIAFf extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230905,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kQKgQMJ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230907,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TsRGHYj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230910,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jXDjFpH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230913,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YihmKUS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230916,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class APQIrMS extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230922,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class APQIrMS extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230923,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class brIKKmi extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230929,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vzLtahq extends AbstractTestCase {\n\n    \n    private float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        float data = wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        float data = snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230931,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XXMVlGQ extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230932,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class FOntOPy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new BMQRRDe()).RYNMBky(data);\n    }\n}\n\npublic class BMQRRDe {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230934,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class tXWePVH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new KYNUndl()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class KYNUndl {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230958,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cQtyvYS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230960,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BKWYVun extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230966,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HrldBFa extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230969,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FPqWALp extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230970,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FPqWALp extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230971,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class geGbxPf extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230974,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RnDVeGL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230981,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZUsoUxr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230988,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TJFuoiV extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        while (true) {\n            \n            data = 2.0f;\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230991,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mVDaBCY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230998,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mklZIwv extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231000,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YJsjxak extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231002,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XOUDBdo extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231004,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JFlYESN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new bYEkjrY()).RYNMBky(data);\n    }\n}\n\npublic class bYEkjrY {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231006,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class TjpicDt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data = (new uJbnuoj()).ImBBndW();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class uJbnuoj {\n\n    public float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231014,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class uJbnuoj {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class TjpicDt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new uJbnuoj()).wHnwAlc();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new uJbnuoj()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231015,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class KYATCgC extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new EgCVUOz()).RYNMBky(dataContainer);\n    }\n}\n\npublic class EgCVUOz {\n\n    public void RYNMBky(KYATCgC.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231018,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class aLesWAh extends AbstractTestCase {\n\n    public static float data;\n\n    public void boNMSnT() throws Throwable {\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new AexfVWM()).RYNMBky();\n    }\n}\n\npublic class AexfVWM {\n\n    public void RYNMBky() throws Throwable {\n        float data = aLesWAh.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231020,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class AFYTODJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new bUjyVkd()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class bUjyVkd {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231026,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\n\npublic class uzeYkmj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new qizSOMf()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class qizSOMf {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231030,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ujCSUhe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231033,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PEGBGIb extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231035,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TmQDHuh extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231038,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TmQDHuh extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231039,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CGpFkJR extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231046,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CGpFkJR extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231047,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wanAdzc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231048,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zppPUgV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231050,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class NBeUTIr extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231057,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class qhRTItp extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        qRMEpGJ = true;\n        (new PmpnkyG()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class PmpnkyG {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (qhRTItp.qRMEpGJ) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231068,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zyBAnkX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231070,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class sxcAAsv extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231072,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UihyXUy extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231077,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class TJhYltg {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class YpdkOoT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new TJhYltg()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new TJhYltg()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231079,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class SWuQeaO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new YJoFmDG()).RYNMBky(data);\n    }\n}\n\npublic class YCepkha {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class YJoFmDG {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new YCepkha()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231080,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class emTavku extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new ImQoezl()).RYNMBky(dataVector);\n    }\n}\n\npublic class ImQoezl {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231096,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OCzVrVt extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231105,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YIivuFS extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231112,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class qadYwWr extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231118,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MyllOLv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231121,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XiBCTZZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231122,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XiBCTZZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231123,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jGhjjSV extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231127,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XkiiIhJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231130,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DPNLfqj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231134,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class emliySw extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        qRMEpGJ = true;\n        (new rUHXHet()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class rUHXHet {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (emliySw.qRMEpGJ) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231140,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class rUHXHet {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (emliySw.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (emliySw.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (emliySw.Pywwbtz) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class emliySw extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        ydhDOMq = false;\n        (new rUHXHet()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        HHhrjCy = true;\n        (new rUHXHet()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new rUHXHet()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231141,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pAgOGKU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231142,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kDfYtTS extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231144,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oWuNgVo extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231146,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class unQqfpD extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231149,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UjMyaco extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new ReBnidt()).RYNMBky(data);\n    }\n}\n\npublic class ReBnidt {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231150,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kXodwMl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new eedYVDE()).RYNMBky(data);\n    }\n}\n\npublic class eedYVDE {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new FMBlMKX()).RYNMBky(data);\n    }\n}\n\npublic class FMBlMKX {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231152,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class DshXLJx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new bHMHsuy()).RYNMBky(data);\n    }\n}\n\npublic class iATPcud {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new IYQGjJF()).RYNMBky(data);\n    }\n}\n\npublic class bHMHsuy {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new gOImgHp()).RYNMBky(data);\n    }\n}\n\npublic class IYQGjJF {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class gOImgHp {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new iATPcud()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231156,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nzGjcJx extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new gOQjBXI()).RYNMBky(dataContainer);\n    }\n}\n\npublic class gOQjBXI {\n\n    public void RYNMBky(nzGjcJx.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231162,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gkBEIgK extends AbstractTestCase {\n\n    public static float data;\n\n    public void boNMSnT() throws Throwable {\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new XzrbvtA()).RYNMBky();\n    }\n}\n\npublic class XzrbvtA {\n\n    public void RYNMBky() throws Throwable {\n        float data = gkBEIgK.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231164,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class LOQImDw extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231188,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class NdYoWfc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231193,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class qkKpyUs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231196,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class cpxzDmY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231200,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class cpxzDmY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231201,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class rMVSVmK extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        while (true) {\n            \n            data = 2.0f;\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231207,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eaviiLh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231208,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class iVKeGSE extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231210,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MiGVRYp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231214,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class MiGVRYp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231215,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class NqeIzlQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231217,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class YJMFGHV extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231220,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class WCdKxqd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new sFjKeaf()).RYNMBky(data);\n    }\n}\n\npublic class bEAgfbz {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class sFjKeaf {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new bEAgfbz()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231224,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class SXlWpwa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new mUvgGCZ()).RYNMBky(data);\n    }\n}\n\npublic class UIRWgAe {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new hntofQS()).RYNMBky(data);\n    }\n}\n\npublic class hntofQS {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class mUvgGCZ {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new UIRWgAe()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231226,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class UjQQQUS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data = (new fXnjzdq()).ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class fXnjzdq {\n\n    public float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231230,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class fXnjzdq {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class UjQQQUS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new fXnjzdq()).wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new fXnjzdq()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231231,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class HKMssTZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new IxpDoOl()).RYNMBky((Object) data);\n    }\n}\n\npublic class IxpDoOl {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231238,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.util.logging.Level;\n\npublic class kjQpwJB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new AZMwsbv()).RYNMBky(dataVector);\n    }\n}\n\npublic class AZMwsbv {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231240,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.util.logging.Level;\n\npublic class bsBJTct extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new KoIeNDP()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class KoIeNDP {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231242,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.util.logging.Level;\n\npublic class bqMYMOM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new fxRxjWV()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class fxRxjWV {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231244,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class lIWMXoa extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231250,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class WqlmfSj extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231255,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class bvMTRWv extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231257,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eQRchWS extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231258,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class oNOfkIp extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231261,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class PtURVOW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231265,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class lVjzSQF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231273,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IgMpPyb extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231283,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class sPGHOTc extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231287,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class obXPRkZ extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231288,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class obXPRkZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231289,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class JBqrPYj extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231290,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class olncYBH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new tZhtvkL()).RYNMBky(data);\n    }\n}\n\npublic class DbJWqAL {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class CohFRxx {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new DbJWqAL()).RYNMBky(data);\n    }\n}\n\npublic class tZhtvkL {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new CohFRxx()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231298,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class UFfHcaQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new ifDNtYQ()).RYNMBky(data);\n    }\n}\n\npublic class WuXPjZA {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class rtWvtYf {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new Igrwvik()).RYNMBky(data);\n    }\n}\n\npublic class ifDNtYQ {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new rtWvtYf()).RYNMBky(data);\n    }\n}\n\npublic class Igrwvik {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new WuXPjZA()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231300,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.util.logging.Level;\n\npublic class vnTdiib extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new SqBgcSU()).RYNMBky(dataVector);\n    }\n}\n\npublic class SqBgcSU {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231312,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class JtwzNUx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UdEtiyG()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class UdEtiyG {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231314,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class cRbRpCH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231322,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class edKtoYu extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231331,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class eUsuVoW extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231334,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class eUsuVoW extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231335,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class DdQbaol extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231339,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ykioKTI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231340,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class QNYUpOP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231342,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class SHcqWvI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231347,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class GcOifOq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231348,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class GcOifOq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231349,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class VagKDBI extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231353,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lpDJmUw {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (aWwhNLd.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (aWwhNLd.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (aWwhNLd.Pywwbtz) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class aWwhNLd extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new lpDJmUw()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new lpDJmUw()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new lpDJmUw()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231357,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class zJqHSEQ extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231360,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class xJePqda extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231362,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class uMbdvbP {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class WfLPFET extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new uMbdvbP()).wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new uMbdvbP()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231375,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ntnPkwJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new xaZJYfs()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class xaZJYfs {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231386,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class wFPKIwC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new zqcGYPP()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class zqcGYPP {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231390,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class itlupbw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231392,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class DxJISYH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231395,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class oHjFMOw extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231401,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class UEdTShz extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231402,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class rgupQms extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231404,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class rgupQms extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231405,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YVAqZjk extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231407,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class LQNDRWo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231410,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class oGqgHWd extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231413,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class SNJRRCz extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231414,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class wZWEkZl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231422,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class smyoGwl extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231425,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XRNMkFk extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231426,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XRNMkFk extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231427,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class bGDHuMm extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new ObFCvAx()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class ObFCvAx {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (bGDHuMm.qRMEpGJ) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231428,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class osHfKfM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231430,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class deLxeeW extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231433,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YjxfrPR extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231436,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class oyFAUCE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new zqBqbRe()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class zqBqbRe {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231458,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class mpqBVxZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new FnKjIpJ()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class FnKjIpJ {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231460,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NbjLWeZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231465,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class VgGInpk extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231472,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class VgGInpk extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231473,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class mbZhhck extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231478,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class mbZhhck extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231479,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CGzIjjW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231482,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CGzIjjW extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231483,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class PYYfcvc extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231487,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class qyJZgzQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231488,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class qyJZgzQ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231489,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ZObABcU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (\n                        stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231492,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YrJfLbr extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231499,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class OTuPUkY extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231508,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class KMFBuMn {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class roiokdo extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new KMFBuMn()).wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new KMFBuMn()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231519,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class duNMavw extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new nABuOIv()).RYNMBky(dataContainer);\n    }\n}\n\npublic class nABuOIv {\n\n    public void RYNMBky(duNMavw.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231522,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class hyEDkUT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new eMcAOoO()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class eMcAOoO {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231530,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class bohVHbv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new EAjDzBS()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class EAjDzBS {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231532,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\n\npublic class cWtYEWI {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class SYQTyZr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new cWtYEWI()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new cWtYEWI()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231535,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class LKWvkCr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231538,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CRiFBzK extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231544,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CRiFBzK extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231545,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CjzUfWO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231551,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NYyFZAL extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231553,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class jLSdcud extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231555,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NYRNQSw extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231558,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NYRNQSw extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231559,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RVeizfX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231562,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class buhgrnN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (\n                        stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    Socket socket = null;\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        \n                        socket = new Socket(\"host.example.org\", 39544);\n                        \n                        readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (\n                        stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        \n                        try {\n                            if (socket != null) {\n                                socket.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231565,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class pVfdmYv extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        while (true) {\n            \n            data = 2.0f;\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231567,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class fJxYdHz extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231570,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class LswabYb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231574,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class UIFsDgC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new qUHNfED()).RYNMBky(data);\n    }\n}\n\npublic class qUHNfED {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231582,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class nQFHIFQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new DNwlQgj()).RYNMBky(data);\n    }\n}\n\npublic class DNwlQgj {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new IMqJVDO()).RYNMBky(data);\n    }\n}\n\npublic class IMqJVDO {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231584,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class VvlkWFj extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new XfACmlY()).RYNMBky(data);\n    }\n}\n\npublic class XfACmlY {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new UOqgzJX()).RYNMBky(data);\n    }\n}\n\npublic class McPpPUE {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class UOqgzJX {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new McPpPUE()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231586,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class XfACmlY {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new UOqgzJX()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new UOqgzJX()).KgJSeXB(data);\n    }\n}\n\npublic class McPpPUE {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class UOqgzJX {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new McPpPUE()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new McPpPUE()).KgJSeXB(data);\n    }\n}\n\npublic class VvlkWFj extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new XfACmlY()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new XfACmlY()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231587,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class exjAxyV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new ugHVpUF()).RYNMBky(data);\n    }\n}\n\npublic class RAsiAzJ {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class nBGbkVc {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new QjPISUI()).RYNMBky(data);\n    }\n}\n\npublic class ugHVpUF {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new nBGbkVc()).RYNMBky(data);\n    }\n}\n\npublic class QjPISUI {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new RAsiAzJ()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231588,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ZRzIRQQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data = (new UJPuDwt()).ImBBndW();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class UJPuDwt {\n\n    public float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231590,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class UJPuDwt {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n\npublic class ZRzIRQQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new UJPuDwt()).wHnwAlc();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new UJPuDwt()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231591,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class RnXvwri extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new DydaGij()).RYNMBky(dataContainer);\n    }\n}\n\npublic class DydaGij {\n\n    public void RYNMBky(RnXvwri.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231594,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class ZayvLVx extends AbstractTestCase {\n\n    public static float data;\n\n    public void boNMSnT() throws Throwable {\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new CeNbeZy()).RYNMBky();\n    }\n}\n\npublic class CeNbeZy {\n\n    public void RYNMBky() throws Throwable {\n        float data = ZayvLVx.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231596,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.Socket;\n\npublic class yWGPxru extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new vQaMlsB()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class vQaMlsB {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231606,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class yGYxiQS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231608,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class vExDeFT extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231611,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class jevItQH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230748,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class JxzdTLA extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230786,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class cdkpqoG {\n\n    \n    public void fDqjRYE(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class quBsRAe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new cdkpqoG()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new cdkpqoG()).KgJSeXB(dataArray);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230801,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class SwvtMrP {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class dXIYloA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new SwvtMrP()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new SwvtMrP()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230863,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class BMQRRDe {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class FOntOPy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new BMQRRDe()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new BMQRRDe()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230935,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SoKZlFK {\n\n    \n    public void fDqjRYE() throws Throwable {\n        float data = nKBmVdd.data;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        float data = nKBmVdd.data;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class nKBmVdd extends AbstractTestCase {\n\n    public static float data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2.0f;\n        (new SoKZlFK()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new SoKZlFK()).KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230949,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class RnDVeGL extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230980,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class IzFLEtj {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (wlVXalK.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (wlVXalK.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (wlVXalK.Pywwbtz) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class wlVXalK extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new IzFLEtj()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new IzFLEtj()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new IzFLEtj()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230997,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\n\npublic class qizSOMf {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class uzeYkmj extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new qizSOMf()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new qizSOMf()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231031,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZrrKWWj extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231042,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class AksfVnA extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        dWmGbZa = true;\n        RYNMBky(data);\n    }\n\n    private void RYNMBky(float data) throws Throwable {\n        if (dWmGbZa) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231066,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zyBAnkX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231071,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lIEdHUh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231108,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ReBnidt {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class UjMyaco extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new ReBnidt()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new ReBnidt()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231151,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LjhzkrP {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class MoXdExF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new LjhzkrP()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new LjhzkrP()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231167,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IJUGFOz extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231183,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IOMgKxh extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231184,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class PjetRYp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231203,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class TejNJeU extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new OEwjUZf()).RYNMBky(dataContainer);\n    }\n}\n\npublic class OEwjUZf {\n\n    public void RYNMBky(TejNJeU.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231234,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class McBWFQC {\n\n    \n    public void fDqjRYE() throws Throwable {\n        float data = hqPZwpV.data;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        float data = hqPZwpV.data;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class hqPZwpV extends AbstractTestCase {\n\n    public static float data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2.0f;\n        (new McBWFQC()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new McBWFQC()).KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231237,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class UdEtiyG {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class JtwzNUx extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UdEtiyG()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new UdEtiyG()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231315,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class WQlYvMG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new mVYwJcz()).RYNMBky(data);\n    }\n}\n\npublic class mVYwJcz {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new LDRnUwG()).RYNMBky(data);\n    }\n}\n\npublic class LDRnUwG {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new lhHHHDi()).RYNMBky(data);\n    }\n}\n\npublic class lhHHHDi {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231370,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class mVYwJcz {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new LDRnUwG()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new LDRnUwG()).KgJSeXB(data);\n    }\n}\n\npublic class LDRnUwG {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new lhHHHDi()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new lhHHHDi()).KgJSeXB(data);\n    }\n}\n\npublic class lhHHHDi {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class WQlYvMG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new mVYwJcz()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new mVYwJcz()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231371,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class rxaBVUX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231408,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class JpasMlF {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new MHgVsNT()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new MHgVsNT()).KgJSeXB(data);\n    }\n}\n\npublic class JDhfFDs {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new JpasMlF()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new JpasMlF()).KgJSeXB(data);\n    }\n}\n\npublic class MHgVsNT {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new zGhdNJx()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new zGhdNJx()).KgJSeXB(data);\n    }\n}\n\npublic class zGhdNJx {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class ubftNio extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new JDhfFDs()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new JDhfFDs()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231445,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class zqBqbRe {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class oyFAUCE extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new zqBqbRe()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new zqBqbRe()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231459,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class HEPlTLJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231497,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class uAMtKMS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231503,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class vkKlbCP {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class yJcueyC {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new vkKlbCP()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new vkKlbCP()).KgJSeXB(data);\n    }\n}\n\npublic class KmqaJjM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new yJcueyC()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new yJcueyC()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231513,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class eMcAOoO {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class hyEDkUT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new eMcAOoO()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new eMcAOoO()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231531,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class WDTNZdn extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231580,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RAsiAzJ {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class nBGbkVc {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new QjPISUI()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new QjPISUI()).KgJSeXB(data);\n    }\n}\n\npublic class ugHVpUF {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new nBGbkVc()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new nBGbkVc()).KgJSeXB(data);\n    }\n}\n\npublic class QjPISUI {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new RAsiAzJ()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new RAsiAzJ()).KgJSeXB(data);\n    }\n}\n\npublic class exjAxyV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new ugHVpUF()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new ugHVpUF()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231589,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KQXurAG extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231615,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class EXrWaft extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231622,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class zJUZegG extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231631,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cfQEIbD extends AbstractTestCase {\n\n    \n    private float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        float data = wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        float data = snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231651,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class TfyoMxW {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new xTtMMCx()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new xTtMMCx()).KgJSeXB(data);\n    }\n}\n\npublic class xTtMMCx {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new BdPyZhW()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new BdPyZhW()).KgJSeXB(data);\n    }\n}\n\npublic class BdPyZhW {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class LwwAzfz extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new TfyoMxW()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        (new TfyoMxW()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231659,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class FfaGpWA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        (new HzbIVeL()).RYNMBky(data);\n    }\n}\n\npublic class jiQouog {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new TTGdIWS()).RYNMBky(data);\n    }\n}\n\npublic class LBQrEVy {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new jiQouog()).RYNMBky(data);\n    }\n}\n\npublic class HzbIVeL {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new LBQrEVy()).RYNMBky(data);\n    }\n}\n\npublic class TTGdIWS {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231660,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class CreytvM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231704,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oGODRNJ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231709,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LhTxePR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231712,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QiGWUoX extends AbstractTestCase {\n\n    private void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231720,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QiGWUoX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231721,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class ZUCMlYI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        (new uJXaxEH()).RYNMBky(data);\n    }\n}\n\npublic class XDVSLYu {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new zjZVNsX()).RYNMBky(data);\n    }\n}\n\npublic class uJXaxEH {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new qDFbfSe()).RYNMBky(data);\n    }\n}\n\npublic class zjZVNsX {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n\npublic class qDFbfSe {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new XDVSLYu()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231732,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class LJcwzed {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        InputStreamReader readerInputStream = null;\n        BufferedReader readerBuffered = null;\n        \n        try {\n            readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n            readerBuffered = new BufferedReader(readerInputStream);\n            \n            String stringNumber = readerBuffered.readLine();\n            if (\n            stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (readerBuffered != null) {\n                    readerBuffered.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n            }\n            try {\n                if (readerInputStream != null) {\n                    readerInputStream.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n            }\n        }\n        return data;\n    }\n}\n\npublic class DBXhSSe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new LJcwzed()).wHnwAlc();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new LJcwzed()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231735,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class FEYDzyy extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    String stringNumber = resultSet.getString(1);\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231756,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class jzKvpYn extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    String stringNumber = resultSet.getString(1);\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231772,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class dgKAEQq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    Connection connection = null;\n                    PreparedStatement preparedStatement = null;\n                    ResultSet resultSet = null;\n                    try {\n                        \n                        connection = IO.getDBConnection();\n                        \n                        preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                        resultSet = preparedStatement.executeQuery();\n                        \n                        String stringNumber = resultSet.getString(1);\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                    } finally {\n                        \n                        try {\n                            if (resultSet != null) {\n                                resultSet.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                        }\n                        try {\n                            if (preparedStatement != null) {\n                                preparedStatement.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                        }\n                        try {\n                            if (connection != null) {\n                                connection.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    Connection connection = null;\n                    PreparedStatement preparedStatement = null;\n                    ResultSet resultSet = null;\n                    try {\n                        \n                        connection = IO.getDBConnection();\n                        \n                        preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                        resultSet = preparedStatement.executeQuery();\n                        \n                        String stringNumber = resultSet.getString(1);\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                    } finally {\n                        \n                        try {\n                            if (resultSet != null) {\n                                resultSet.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                        }\n                        try {\n                            if (preparedStatement != null) {\n                                preparedStatement.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                        }\n                        try {\n                            if (connection != null) {\n                                connection.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 / data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"DVnDKFY\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231781,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class uwjIdgQ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                String stringNumber = resultSet.getString(1);\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                String stringNumber = resultSet.getString(1);\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231787,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class CNtNnft extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    String stringNumber = resultSet.getString(1);\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231790,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class sjGgMHy extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                String stringNumber = resultSet.getString(1);\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new GSmjKht()).RYNMBky(dataContainer);\n    }\n}\n\npublic class GSmjKht {\n\n    public void RYNMBky(sjGgMHy.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231810,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class GSmjKht {\n\n    \n    public void fDqjRYE(sjGgMHy.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(sjGgMHy.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class sjGgMHy extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new GSmjKht()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                String stringNumber = resultSet.getString(1);\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new GSmjKht()).KgJSeXB(dataContainer);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231811,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class YZCnEUt {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class CVYEzaB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new YZCnEUt()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                String stringNumber = resultSet.getString(1);\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new YZCnEUt()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231819,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class vbogmbG extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    String stringNumber = resultSet.getString(1);\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231828,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class WtVQTft extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230751,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class ZGBwVOx extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230757,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class vieThNm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data = (new tCeoaTf()).ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class tCeoaTf {\n\n    public float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230798,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.util.logging.Level;\n\npublic class UstDTRC {\n\n    \n    public void fDqjRYE(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class ZwjpZut extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UstDTRC()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UstDTRC()).KgJSeXB(dataVector);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230809,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JCUmIjI {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class VNXbJrQ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JCUmIjI()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new JCUmIjI()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230815,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class iPxPWcF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230817,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eWnSLFT extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230819,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class iuWRdYE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230848,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class OVvzrps {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (hBsVDIj.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (hBsVDIj.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (hBsVDIj.Pywwbtz) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class hBsVDIj extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new OVvzrps()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new OVvzrps()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new OVvzrps()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230853,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class KZlhLWX extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230861,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class fjcoJOD {\n\n    \n    public void fDqjRYE(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class PTFcVjV extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new fjcoJOD()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new fjcoJOD()).KgJSeXB(dataArray);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230873,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class CgrFDVB extends AbstractTestCase {\n\n    public static float data;\n\n    public void boNMSnT() throws Throwable {\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new LifCiVT()).RYNMBky();\n    }\n}\n\npublic class LifCiVT {\n\n    public void RYNMBky() throws Throwable {\n        float data = CgrFDVB.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230876,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class VOgUfPy {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class YkNukGy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new VOgUfPy()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new VOgUfPy()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230879,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XgrXezp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230890,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pWoeYME extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230896,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class pWoeYME extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230897,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kQKgQMJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230906,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lwugsiY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230908,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YoEsdwb extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230926,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class lwCYlgi {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class ThQBFNP {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new lwCYlgi()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new lwCYlgi()).KgJSeXB(data);\n    }\n}\n\npublic class dawklOK extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new ThQBFNP()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new ThQBFNP()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230937,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class KYNUndl {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class tXWePVH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new KYNUndl()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new KYNUndl()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230959,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class DOqcIhe extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230962,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VgevoaK extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230972,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class blyLvqN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230978,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class blyLvqN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230979,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kodjsoM extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230983,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gEeNsbh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230986,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SAEVdSu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new PZYjrXT()).RYNMBky((Object) data);\n    }\n}\n\npublic class PZYjrXT {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231022,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class PZYjrXT {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class SAEVdSu extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new PZYjrXT()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new PZYjrXT()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231023,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class SFjHzoI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new jPNauru()).RYNMBky(dataVector);\n    }\n}\n\npublic class jPNauru {\n\n    public void RYNMBky(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231024,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class jPNauru {\n\n    \n    public void fDqjRYE(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class SFjHzoI extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new jPNauru()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new jPNauru()).KgJSeXB(dataVector);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231025,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class mMPVDVN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new cKyYVKP()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class cKyYVKP {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231028,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class cKyYVKP {\n\n    \n    public void fDqjRYE(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class mMPVDVN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new cKyYVKP()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new cKyYVKP()).KgJSeXB(dataHashMap);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231029,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class QQjwrRH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231036,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uVihJAm extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231044,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GzXcgDT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231054,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class GzXcgDT extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231055,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XPhvsgO extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231074,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class rMEYNvp {\n\n    \n    public float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    \n    public float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        return data;\n    }\n}\n\npublic class sNPLpOA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = (new rMEYNvp()).wHnwAlc();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data = (new rMEYNvp()).snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231087,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class vVUHqSA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new YWyhSja()).RYNMBky((Object) data);\n    }\n}\n\npublic class YWyhSja {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231094,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class YWyhSja {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class vVUHqSA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new YWyhSja()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new YWyhSja()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231095,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.Properties;\nimport java.io.FileInputStream;\n\npublic class PYflgkw {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n\n    \n    public void KgJSeXB(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class tZOytny extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new PYflgkw()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new PYflgkw()).KgJSeXB(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231103,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oeMHxci extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231114,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class IzHsWrO extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231116,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uZyzmXd extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231133,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class OKRJBka extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231139,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class unQqfpD extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231148,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class EnnWazW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new hkfmVby()).RYNMBky(data);\n    }\n}\n\npublic class hkfmVby {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new Kmiuquo()).RYNMBky(data);\n    }\n}\n\npublic class Kmiuquo {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new EvSOMvD()).RYNMBky(data);\n    }\n}\n\npublic class EvSOMvD {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231154,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gOQjBXI {\n\n    \n    public void fDqjRYE(nzGjcJx.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(nzGjcJx.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class nzGjcJx extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new gOQjBXI()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new gOQjBXI()).KgJSeXB(dataContainer);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231163,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class gHczIyc {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class jXrAkOZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new gHczIyc()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new gHczIyc()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231171,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class bYsKyfq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231178,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IJUGFOz extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231182,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class cJFJUQi extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231187,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class SpFgSAK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231198,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class KikdEmg {\n\n    \n    public void fDqjRYE(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class HBElFQA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new KikdEmg()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new KikdEmg()).KgJSeXB(dataArray);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231233,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.util.logging.Level;\n\npublic class fxRxjWV {\n\n    \n    public void fDqjRYE(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class bqMYMOM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new fxRxjWV()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new fxRxjWV()).KgJSeXB(dataHashMap);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231245,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class ixOfhVZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                \n                {\n                    String stringNumber = System.getProperty(\"user.home\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231276,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class CqfeaBn extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231293,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class EkNVpTP extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new UcrDNQo()).RYNMBky(dataContainer);\n    }\n}\n\npublic class UcrDNQo {\n\n    public void RYNMBky(EkNVpTP.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231306,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kzvBzLc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new nBbTRAi()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class nBbTRAi {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231318,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class GiSXSHK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231324,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class becpuKP extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231337,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BSMZIwF extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231350,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class aWwhNLd extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new lpDJmUw()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class lpDJmUw {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (aWwhNLd.qRMEpGJ) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231356,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class GFEZFvB {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class XtFChdP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new GFEZFvB()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new GFEZFvB()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231367,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class IUdZtNR {\n\n    \n    public void fDqjRYE(iZwQIIi.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(iZwQIIi.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class iZwQIIi extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new IUdZtNR()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new IUdZtNR()).KgJSeXB(dataContainer);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231379,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class xaZJYfs {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class ntnPkwJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new xaZJYfs()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new xaZJYfs()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231387,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class oHjFMOw extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231400,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class uHDqmsN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231418,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class rXJUcAW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230744,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class tqLXouc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230746,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class EwsEEQE extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230761,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class mQQfXFm extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230763,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class DaenPJw {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (FaOuInf.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (FaOuInf.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (FaOuInf.Pywwbtz) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class FaOuInf extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new DaenPJw()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new DaenPJw()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new DaenPJw()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230781,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class ZLivfvR extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230789,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class ZlWZGMR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new LWvbBJO()).RYNMBky(data);\n    }\n}\n\npublic class HeKNnSm {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class LWvbBJO {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new HeKNnSm()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230792,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eWnSLFT extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230818,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class REaYXIa extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230825,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class UWAcuCl extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230831,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class VuuBeel extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230840,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IbdcuwJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getenv(\"ADD\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230854,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\n\npublic class gNUSoqN {\n\n    \n    public void fDqjRYE(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class VmfUcBG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new gNUSoqN()).fDqjRYE(dataLinkedList);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getenv(\"ADD\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new gNUSoqN()).KgJSeXB(dataLinkedList);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230883,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class JdPMCgK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230914,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class smQStIV extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230918,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cmwiXkR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230920,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class ZFCtoaY {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (ugAeZzF.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (ugAeZzF.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (ugAeZzF.Pywwbtz) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class ugAeZzF extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new ZFCtoaY()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new ZFCtoaY()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new ZFCtoaY()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230925,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class gqmJVqh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new AkbWCBk()).RYNMBky(dataArray);\n    }\n}\n\npublic class AkbWCBk {\n\n    public void RYNMBky(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230944,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class nKBmVdd extends AbstractTestCase {\n\n    public static float data;\n\n    public void boNMSnT() throws Throwable {\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new SoKZlFK()).RYNMBky();\n    }\n}\n\npublic class SoKZlFK {\n\n    public void RYNMBky() throws Throwable {\n        float data = nKBmVdd.data;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230948,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class VkEDuBk extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new unvgHKc()).RYNMBky((Object) data);\n    }\n}\n\npublic class unvgHKc {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230950,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class BKWYVun extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230967,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class HDKpwmv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230977,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class kodjsoM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230982,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class Yxpoalz extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230985,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class gEeNsbh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230987,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hGnKYLY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1230992,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class mklZIwv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231001,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class YJsjxak extends AbstractTestCase {\n\n    \n    private float wHnwAlc() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        return data;\n    }\n\n    private void EXrOlJC() throws Throwable {\n        float data = wHnwAlc();\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private float snawHrb() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    private void NDSwpcn() throws Throwable {\n        float data = snawHrb();\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231003,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XOUDBdo extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        float data = vZNWMPE;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n\n    private void KgJSeXB() throws Throwable {\n        float data = FOqrAxr;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        FOqrAxr = data;\n        KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231005,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class bYEkjrY {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class JFlYESN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new bYEkjrY()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new bYEkjrY()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231007,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.FileInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FFPbgbI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new mfsNavp()).RYNMBky(dataArray);\n    }\n}\n\npublic class mfsNavp {\n\n    public void RYNMBky(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231016,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class EgCVUOz {\n\n    \n    public void fDqjRYE(KYATCgC.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(KYATCgC.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class KYATCgC extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new EgCVUOz()).fDqjRYE(dataContainer);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new EgCVUOz()).KgJSeXB(dataContainer);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231019,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class FSCJIuO extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateTrue) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231040,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uVihJAm extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (privateFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231045,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oUBPpXJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231064,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class oUBPpXJ extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231065,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class UihyXUy extends AbstractTestCase {\n\n    private float EuzMspW;\n\n    private float vZNWMPE;\n\n    private float FOqrAxr;\n\n    private void RYNMBky() throws Throwable {\n        float data = EuzMspW;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231076,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class WPbMFdp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new OMygcLm()).RYNMBky(data);\n    }\n}\n\npublic class TZybJrV {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class OMygcLm {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new kHVMguc()).RYNMBky(data);\n    }\n}\n\npublic class kHVMguc {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new TZybJrV()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231082,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class NEsyZcB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new qOlyJDn()).RYNMBky(data);\n    }\n}\n\npublic class vlwzjOe {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new EcXImdL()).RYNMBky(data);\n    }\n}\n\npublic class EcXImdL {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new nhoalpg()).RYNMBky(data);\n    }\n}\n\npublic class nhoalpg {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n\npublic class qOlyJDn {\n\n    public void RYNMBky(float data) throws Throwable {\n        (new vlwzjOe()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231084,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class GYNUaLv {\n\n    \n    public void fDqjRYE(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float[] dataArray) throws Throwable {\n        float data = dataArray[2];\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class WuzTDwn extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new GYNUaLv()).fDqjRYE(dataArray);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        float[] dataArray = new float[5];\n        dataArray[2] = data;\n        (new GYNUaLv()).KgJSeXB(dataArray);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231089,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class cOrajVo extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        LinkedList<Float> dataLinkedList = new LinkedList<Float>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new dHxKdAs()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class dHxKdAs {\n\n    public void RYNMBky(LinkedList<Float> dataLinkedList) throws Throwable {\n        float data = dataLinkedList.remove(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231098,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class EDUgNYb {\n\n    \n    public void fDqjRYE(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class prDFbKv extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new EDUgNYb()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new EDUgNYb()).KgJSeXB(dataHashMap);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231101,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.Properties;\nimport java.io.FileInputStream;\n\npublic class tZOytny extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new PYflgkw()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class PYflgkw {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            float data = (Float) streamObjectInput.readObject();\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231102,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class lIEdHUh extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (5 != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (5 == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (5 == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (5 == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231109,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class MyllOLv extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231120,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class fTQZQEM extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231125,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class hHTGJug extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                String stringNumber = properties.getProperty(\"data\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231129,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class uZyzmXd extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    String stringNumber = properties.getProperty(\"data\");\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231132,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Properties;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\n\npublic class XzrbvtA {\n\n    \n    public void fDqjRYE() throws Throwable {\n        float data = gkBEIgK.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        float data = gkBEIgK.data;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class gkBEIgK extends AbstractTestCase {\n\n    public static float data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2.0f;\n        (new XzrbvtA()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        (new XzrbvtA()).KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231165,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\n\npublic class WrsGGbX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        Properties properties = new Properties();\n        FileInputStream streamFileInput = null;\n        try {\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\n            properties.load(streamFileInput);\n            \n            String stringNumber = properties.getProperty(\"data\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n        } finally {\n            \n            try {\n                if (streamFileInput != null) {\n                    streamFileInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new FxAHFvJ()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class FxAHFvJ {\n\n    public void RYNMBky(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231172,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class bwBQmoh extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231176,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class cJFJUQi extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231186,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class XroOdjq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231194,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class XroOdjq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231195,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class PjetRYp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231202,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eaviiLh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        for (int k = 0; k < 1; k++) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231209,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class oLYAhpZ extends AbstractTestCase {\n\n    private float ImBBndW() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        return data;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data = ImBBndW();\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231218,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class FOvnBGU {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class WqyBJQe extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new FOvnBGU()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new FOvnBGU()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231223,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class IxpDoOl {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class HKMssTZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new IxpDoOl()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new IxpDoOl()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231239,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class WqlmfSj extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231254,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class tOWTscs extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231262,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class aorRhnk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFalse) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFalse) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticTrue) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticTrue) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231267,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class eWugCxJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231268,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\n\npublic class ykxNiUE extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        while (true) {\n            \n            data = 2.0f;\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            \n            {\n                String stringNumber = System.getProperty(\"user.home\");\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n            break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231279,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class eTGJQau {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class IOcvWCP {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new eTGJQau()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new eTGJQau()).KgJSeXB(data);\n    }\n}\n\npublic class BXDEiZD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new IOcvWCP()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new IOcvWCP()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231297,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class yfnenOZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        \n        {\n            String stringNumber = System.getProperty(\"user.home\");\n            if (stringNumber != null) {\n                try {\n                    data = Float.parseFloat(stringNumber.trim());\n                } catch (NumberFormatException exceptNumberFormat) {\n                    IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                }\n            }\n        }\n        (new gxdbSRV()).RYNMBky((Object) data);\n    }\n}\n\npublic class gxdbSRV {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231310,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class xwMivpC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231320,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class hUYkWQE extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231326,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class edKtoYu extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231330,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class SHcqWvI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231346,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class KVAYsUh extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean aRnSMVj = false;\n\n    private boolean aOWZSGn = false;\n\n    private boolean DBbhdbc = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aRnSMVj = false;\n        ZpnQtvQ(data);\n    }\n\n    private void ZpnQtvQ(float data) throws Throwable {\n        if (aRnSMVj) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        aOWZSGn = true;\n        VmywRrZ(data);\n    }\n\n    private void VmywRrZ(float data) throws Throwable {\n        if (aOWZSGn) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        DBbhdbc = true;\n        fDqjRYE(data);\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        if (DBbhdbc) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231355,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class bDHcLdX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231358,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class bIWtqKF {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n}\n\npublic class dDXkTCw {\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        (new bIWtqKF()).fDqjRYE(data);\n    }\n\n    \n    public void KgJSeXB(float data) throws Throwable {\n        (new bIWtqKF()).KgJSeXB(data);\n    }\n}\n\npublic class KwHAOXX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new dDXkTCw()).fDqjRYE(data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new dDXkTCw()).KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231369,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class itlupbw extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231393,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YVAqZjk extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateReturnsTrue()) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231406,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BODHtHN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231420,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class BODHtHN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        switch(5) {\n            case 6:\n                \n                data = 0.0f;\n                break;\n            default:\n                \n                data = 2.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                \n                data = 2.0f;\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(8) {\n            case 7:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n            default:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        switch(6) {\n            case 6:\n                data = -1.0f;\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        String stringNumber = readerBuffered.readLine();\n                        if (stringNumber != null) {\n                            try {\n                                data = Float.parseFloat(stringNumber.trim());\n                            } catch (NumberFormatException exceptNumberFormat) {\n                                IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                            }\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = 0.0f;\n                break;\n        }\n        switch(7) {\n            case 7:\n                \n                if (Math.abs(data) > 0.000001) {\n                    int result = (int) (100.0 % data);\n                    IO.writeLine(result);\n                } else {\n                    IO.writeLine(\"gEEImAa\");\n                }\n                break;\n            default:\n                \n                IO.writeLine(\"fWyUuQv\");\n                break;\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231421,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class smyoGwl extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231424,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class ObFCvAx {\n\n    \n    public void ZpnQtvQ(float data) throws Throwable {\n        if (bGDHuMm.ydhDOMq) {\n            \n            data = 0.0f;\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n\n    \n    public void VmywRrZ(float data) throws Throwable {\n        if (bGDHuMm.HHhrjCy) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n\n    \n    public void fDqjRYE(float data) throws Throwable {\n        if (bGDHuMm.Pywwbtz) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n\npublic class bGDHuMm extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n\n    public void JttWLtS() throws Throwable {\n        uytpYbp();\n        OQsEKDS();\n        EXrOlJC();\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        ydhDOMq = false;\n        (new ObFCvAx()).ZpnQtvQ(data);\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HHhrjCy = true;\n        (new ObFCvAx()).VmywRrZ(data);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data = 0.0f;\n        \n        data = 2.0f;\n        Pywwbtz = true;\n        (new ObFCvAx()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231429,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class osHfKfM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            \n            data = 2.0f;\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float dataCopy;\n        {\n            float data;\n            data = -1.0f;\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            float data = dataCopy;\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 % data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"gEEImAa\");\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231431,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class TPKxjQs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new WhTAhUA()).RYNMBky(data);\n    }\n}\n\npublic class WhTAhUA {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231438,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class qnBnmLS extends AbstractTestCase {\n\n    static class Container {\n\n        public float containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new pEqUJJT()).RYNMBky(dataContainer);\n    }\n}\n\npublic class pEqUJJT {\n\n    public void RYNMBky(qnBnmLS.Container dataContainer) throws Throwable {\n        float data = dataContainer.containerOne;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231450,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YSgfWgJ {\n\n    \n    public void fDqjRYE() throws Throwable {\n        float data = ZjUxKdg.data;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB() throws Throwable {\n        float data = ZjUxKdg.data;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class ZjUxKdg extends AbstractTestCase {\n\n    public static float data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = 2.0f;\n        (new YSgfWgJ()).fDqjRYE();\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new YSgfWgJ()).KgJSeXB();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231453,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class vjqGLWs {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Object dataObject) throws Throwable {\n        float data = (Float) dataObject;\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class pbIMnBx extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        (new vjqGLWs()).fDqjRYE((Object) data);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new vjqGLWs()).KgJSeXB((Object) data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231455,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class Hanrlxo {\n\n    \n    public void fDqjRYE(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(Vector<Float> dataVector) throws Throwable {\n        float data = dataVector.remove(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class XAslnRJ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new Hanrlxo()).fDqjRYE(dataVector);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<Float> dataVector = new Vector<Float>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new Hanrlxo()).KgJSeXB(dataVector);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231457,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class FnKjIpJ {\n\n    \n    public void fDqjRYE(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n\n    \n    public void KgJSeXB(HashMap<Integer, Float> dataHashMap) throws Throwable {\n        float data = dataHashMap.get(2);\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"gEEImAa\");\n        }\n    }\n}\n\npublic class mpqBVxZ extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new FnKjIpJ()).fDqjRYE(dataHashMap);\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                String stringNumber = readerBuffered.readLine();\n                if (stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, Float> dataHashMap = new HashMap<Integer, Float>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new FnKjIpJ()).KgJSeXB(dataHashMap);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231461,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NbjLWeZ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231464,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class VYWvoZR extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (false) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (true) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (false) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (true) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (true) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231467,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class vgnyEJW extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231475,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class dDcYyMF extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (privateFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (privateFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231476,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NvrhABX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231480,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class vlePGOI extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsFalse()) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticReturnsTrue()) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticReturnsTrue()) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231485,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class LqNrpHc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        float data;\n        if (IO.staticFive != 5) {\n            \n            data = 0.0f;\n        } else {\n            \n            data = 2.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            \n            data = 2.0f;\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n\n    \n    private void uytpYbp() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive != 5) {\n            \n            IO.writeLine(\"fWyUuQv\");\n        } else {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    \n    private void OQsEKDS() throws Throwable {\n        float data;\n        if (IO.staticFive == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.staticFive == 5) {\n            \n            if (Math.abs(data) > 0.000001) {\n                int result = (int) (100.0 / data);\n                IO.writeLine(result);\n            } else {\n                IO.writeLine(\"DVnDKFY\");\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n        uytpYbp();\n        OQsEKDS();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231491,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YWhUUDp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        while (true) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        while (true) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n            break;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231494,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class HEPlTLJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        \n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int j = 0; j < 1; j++) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231496,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\n\npublic class iwMHdZH extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        float data = 0.0f;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        qRMEpGJ = true;\n        (new fMNKJZP()).RYNMBky(data);\n    }\n\n    \n    public static boolean ydhDOMq = false;\n\n    public static boolean HHhrjCy = false;\n\n    public static boolean Pywwbtz = false;\n}\n\npublic class fMNKJZP {\n\n    public void RYNMBky(float data) throws Throwable {\n        if (iwMHdZH.qRMEpGJ) {\n            \n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            \n            data = 0.0f;\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231500,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class KXaUPOH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n        NDSwpcn();\n    }\n\n    private void fDqjRYE(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        float data;\n        \n        data = 2.0f;\n        fDqjRYE(data);\n    }\n\n    private void KgJSeXB(float data) throws Throwable {\n        \n        if (Math.abs(data) > 0.000001) {\n            int result = (int) (100.0 / data);\n            IO.writeLine(result);\n        } else {\n            IO.writeLine(\"DVnDKFY\");\n        }\n    }\n\n    \n    private void NDSwpcn() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        KgJSeXB(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231505,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class SleEtFK extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new xGMOBws()).RYNMBky(data);\n    }\n}\n\npublic class xGMOBws {\n\n    public void RYNMBky(float data) throws Throwable {\n        \n        int result = (int) (100.0 / data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231510,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class zrGjHyR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        data = -1.0f;\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                String stringNumber = readerBuffered.readLine();\n                if (\n                stringNumber != null) {\n                    try {\n                        data = Float.parseFloat(stringNumber.trim());\n                    } catch (NumberFormatException exceptNumberFormat) {\n                        IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                    }\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        int result = (int) (100.0 % data);\n        IO.writeLine(result);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231536,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    },
    {
        "CWE_ID": [
            "CWE-369"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class yWNOJbA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        float data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = -1.0f;\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    String stringNumber = readerBuffered.readLine();\n                    if (\n                    stringNumber != null) {\n                        try {\n                            data = Float.parseFloat(stringNumber.trim());\n                        } catch (NumberFormatException exceptNumberFormat) {\n                            IO.logger.log(Level.WARNING, \"ZsevUMD\", exceptNumberFormat);\n                        }\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = 0.0f;\n        }\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            int result = (int) (100.0 % data);\n            IO.writeLine(result);\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1231560,
        "RELATED_CWE": [
            "CWE-190",
            "CWE-191",
            "CWE-129"
        ]
    }
]