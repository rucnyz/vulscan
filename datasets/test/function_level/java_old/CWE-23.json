[
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zCIFTWX extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227455,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wjghSRd extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227469,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AVdlfdd extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227470,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AVdlfdd extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227471,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DEnUUkA extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227472,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DEnUUkA extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227473,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GQLrIQe extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227481,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oMIazVx extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227483,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HHdDgao extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227489,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class cPDQdew extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new SDXFhKF()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class SDXFhKF {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (cPDQdew.qRMEpGJ) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227490,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BtiIULA extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227497,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class OWGdmim extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new wqFFTdV()).RYNMBky(data);\n    }\n}\n\npublic class wqFFTdV {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227500,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vHePSjP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new dyShxkZ()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class dyShxkZ {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227508,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class SvBizYu extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new vTBAvtV()).RYNMBky(dataArray);\n    }\n}\n\npublic class vTBAvtV {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227510,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class CgCRplX extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new gdhcOJl()).RYNMBky((Object) data);\n    }\n}\n\npublic class gdhcOJl {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227516,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class bIcWbXI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new UOBMzYR()).RYNMBky(dataVector);\n    }\n}\n\npublic class UOBMzYR {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227518,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class mqiHJFq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new SrNIXYd()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class SrNIXYd {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227520,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class mqiHJFq extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new SrNIXYd()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class SrNIXYd {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227521,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class YTlAogt extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new wIqItcz()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class wIqItcz {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227522,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class aSluVWA extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227530,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NVgwGUu extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227532,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class dPghQgd extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227535,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class YlZFatf extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227537,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MBUExrC extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227538,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BwOUEoO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227540,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ExjgLHH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227545,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class OwGMPAH extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227547,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XNOnzLB extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227560,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EVceucM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227564,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class mrdKahE extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new TGInikY()).RYNMBky(dataVector);\n    }\n}\n\npublic class TGInikY {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227590,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class PJYRYvN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new aBskEZt()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class aBskEZt {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227596,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class volHEqD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227599,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class miysxpL extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227600,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class XcwYRyi extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227605,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class dVdaaxq extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227609,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class bxHfkGk extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227611,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class yVCpiQK extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227613,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class VJILwXX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227617,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class tfVQbis extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227618,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class mxaYbYp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227620,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class mxaYbYp extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227621,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class bwmQaNv extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Properties properties = new Properties();\n                    FileInputStream streamFileInput = null;\n                    try {\n                        streamFileInput = new FileInputStream(\"../common/config.properties\");\n                        properties.load(streamFileInput);\n                        \n                        data = properties.getProperty(\"data\");\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227626,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class YdRxyLf extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227628,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class fewbhvR extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227630,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class fewbhvR extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227631,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class iJVDgSp extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227633,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AtzwngA extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new ANZFFtY()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class ANZFFtY {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (AtzwngA.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227634,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class mwHYGGO extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227636,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class mwHYGGO extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227637,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class ArNcRuP extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227642,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class ArNcRuP extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227643,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class cUytcxr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new BWuzYJc()).fDqjRYE(data);\n    }\n}\n\npublic class mjQZbYI {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new VTuYTyv()).fDqjRYE(data);\n    }\n}\n\npublic class VTuYTyv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class BWuzYJc {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new cnhkpjK()).fDqjRYE(data);\n    }\n}\n\npublic class cnhkpjK {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new mjQZbYI()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227651,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class LEEmxMI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new LETVWKs()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class LETVWKs {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227652,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GkaqZXm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new DQpAtSR()).RYNMBky((Object) data);\n    }\n}\n\npublic class DQpAtSR {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227660,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xzCnsmP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new HenPGlx()).RYNMBky(dataVector);\n    }\n}\n\npublic class HenPGlx {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227662,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class hYhYICm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new kWVtXSJ()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class kWVtXSJ {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227667,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jhAfdoh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227671,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class YxqYnGY extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227672,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VfCLQKb extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227675,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NDaIQBG extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227684,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MCvtgzj extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227689,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NRXeVWu extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            \n            data = System.getProperty(\"user.home\");\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227708,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZSYsBWR extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227710,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pwEajSa extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227712,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pwEajSa extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227713,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class meNlgBr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new zliHSXp()).RYNMBky(data);\n    }\n}\n\npublic class zliHSXp {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new MNmPxLq()).RYNMBky(data);\n    }\n}\n\npublic class BkPnZtc {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class mhUVwjB {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new BkPnZtc()).RYNMBky(data);\n    }\n}\n\npublic class MNmPxLq {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new mhUVwjB()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227722,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class QYxHGLD {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class SlqaiZP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new QYxHGLD()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227725,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class ebtFREp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new byIEoiU()).RYNMBky(dataArray);\n    }\n}\n\npublic class byIEoiU {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227726,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class rBnRUYg extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new svofJLR()).RYNMBky();\n    }\n}\n\npublic class svofJLR {\n\n    public void RYNMBky() throws Throwable {\n        String data = rBnRUYg.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227730,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class TiutYKM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new bkbXIbB()).fDqjRYE(dataVector);\n    }\n}\n\npublic class bkbXIbB {\n\n    \n    public void fDqjRYE(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227735,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class UIvwDcZ extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227745,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class kPtXHIX extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227760,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class kPtXHIX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227761,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lYVlDNw extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227765,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class WPhsbJE extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227768,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class mtaRWZk extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227771,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class fmkYbLh extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227773,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class FtZwRUn extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227775,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class aEZPwWO extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227777,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jecCFaF extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new hAHJnFw()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class hAHJnFw {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (jecCFaF.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227778,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lzxyJeC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            \n            data = \"foo\";\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227781,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class NlEPRgz extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227787,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GFluENR extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data = (new taUldXT()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class taUldXT {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227796,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class taUldXT {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class GFluENR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new taUldXT()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227797,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class bxtyhEJ extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new DCimPgo()).RYNMBky(dataContainer);\n    }\n}\n\npublic class DCimPgo {\n\n    public void RYNMBky(bxtyhEJ.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227800,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class QQOHqBY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new NpALjuv()).RYNMBky((Object) data);\n    }\n}\n\npublic class NpALjuv {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227804,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EmAPHcU extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new GSsWbvn()).RYNMBky(dataVector);\n    }\n}\n\npublic class GSsWbvn {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227806,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YLIvTgx extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227824,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class yylvnMb extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227828,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class yylvnMb extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227829,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class FJrGePW extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227830,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class rjDCzIc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227832,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class rjDCzIc extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227833,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ivfDNUy extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227838,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CXdQuMq extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227840,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class CXdQuMq extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227841,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YDublMs extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227843,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class SuZMFSx extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227846,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class RZmTAkZ extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227849,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class hNwdfOp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227852,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YODkmWb extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227854,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class QavslCm extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227856,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class QavslCm extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227857,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class fqyQptJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new gnZVJPf()).RYNMBky(data);\n    }\n}\n\npublic class gnZVJPf {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227860,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class tFthQLC extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new HsLlsRF()).RYNMBky(data);\n    }\n}\n\npublic class HsLlsRF {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new zHyopWL()).RYNMBky(data);\n    }\n}\n\npublic class zHyopWL {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227862,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class YCGZycV {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class tRDjszM extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new YCGZycV()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227869,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class lRpROHE extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new LUQLuEw()).RYNMBky();\n    }\n}\n\npublic class LUQLuEw {\n\n    public void RYNMBky() throws Throwable {\n        String data = lRpROHE.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227874,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GZRRxFO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227901,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class thahjlN extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227902,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ibSKErb extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227904,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class QANqaSl extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227906,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xjqEHnf extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227909,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class FJgfLRp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227912,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class IflSftr extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227916,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qMmHork extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227920,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zeODzRw extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new EtcJCix()).TkRMSAh();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new EtcJCix()).szAnMjq();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class EtcJCix {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (zeODzRw.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (zeODzRw.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227923,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tSqzYrb extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227926,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KKkInHZ extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227930,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class udQYxEx extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new zSRVTCm()).RYNMBky(data);\n    }\n}\n\npublic class DDkbPMq {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new GBnqicn()).RYNMBky(data);\n    }\n}\n\npublic class aKcdjaL {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class GBnqicn {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new aKcdjaL()).RYNMBky(data);\n    }\n}\n\npublic class zSRVTCm {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new DDkbPMq()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227938,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZPEghVS extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new fYOOrEE()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class fYOOrEE {\n\n    \n    public void fDqjRYE(ZPEghVS.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227945,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HxsJVKm extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new QJnecRg()).RYNMBky();\n    }\n}\n\npublic class QJnecRg {\n\n    public void RYNMBky() throws Throwable {\n        String data = HxsJVKm.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227946,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zPbZAud extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new AAUkIXo()).RYNMBky((Object) data);\n    }\n}\n\npublic class AAUkIXo {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227948,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class awIKWyI extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227958,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class kdXZLkC extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227963,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class hBumovb extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227968,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class hBumovb extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227969,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class IvYAfre extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227971,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class dWxBDqu extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227973,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class fNImGta extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227977,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class rzlHMCk extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227982,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class gDoEYRg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227984,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class XCKrPgF extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    Connection connection = null;\n                    PreparedStatement preparedStatement = null;\n                    ResultSet resultSet = null;\n                    try {\n                        \n                        connection = IO.getDBConnection();\n                        \n                        preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                        resultSet = preparedStatement.executeQuery();\n                        \n                        data = resultSet.getString(1);\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                    } finally {\n                        \n                        try {\n                            if (resultSet != null) {\n                                resultSet.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                        }\n                        try {\n                            if (preparedStatement != null) {\n                                preparedStatement.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                        }\n                        try {\n                            if (connection != null) {\n                                connection.close();\n                            }\n                        } catch (SQLException exceptSql) {\n                            IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227986,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class XCKrPgF extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227987,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class grSbuyg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227988,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class grSbuyg extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227989,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class RpBthlu extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        gmaYCRK = false;\n        data = MZKvgmW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String MZKvgmW() throws Throwable {\n        String data = null;\n        if (gmaYCRK) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        mAvKbsp = true;\n        data = ymJWUuP();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String ymJWUuP() throws Throwable {\n        String data = null;\n        if (mAvKbsp) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227993,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class mOVlKyn extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227998,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class beyVOex extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228000,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class beyVOex extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228001,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class twggBJm extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228003,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class dmRqbHF {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class yyvCQjF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new dmRqbHF()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228013,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class qUlgGYB extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new NPDccKr()).RYNMBky(dataArray);\n    }\n}\n\npublic class NPDccKr {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228014,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class ZLbVcHJ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new IYBgljG()).RYNMBky(dataVector);\n    }\n}\n\npublic class IYBgljG {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228022,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class sOeLksi extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new qZAWvlU()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class qZAWvlU {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228026,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class OzjaPNP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new amkpJPC()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class amkpJPC {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228028,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BVgossR extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228030,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LmoSAZM extends AbstractTestCaseServlet {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228039,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class UXNgITB extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228042,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class uqKDSrp extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228046,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class uqKDSrp extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228047,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xdUAchu extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228048,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class FQJoUaQ extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228051,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VaVdwjk extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228053,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class BqXzZeR extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new HdncIMD()).ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class HdncIMD {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (BqXzZeR.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228066,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class BqXzZeR extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new HdncIMD()).TkRMSAh(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new HdncIMD()).szAnMjq(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class HdncIMD {\n\n    \n    public String TkRMSAh(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (BqXzZeR.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (BqXzZeR.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228067,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VTMmjfC extends AbstractTestCaseServlet {\n\n    private void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228070,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class gWCQYjV extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        (new MjhIOhy()).RYNMBky(data, request, response);\n    }\n}\n\npublic class lKenUJU {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ZOCcWJy()).RYNMBky(data, request, response);\n    }\n}\n\npublic class ZOCcWJy {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class MjhIOhy {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new lKenUJU()).RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228080,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZgdSJyN {\n\n    \n    public String wHnwAlc(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class mKOoMJz extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new ZgdSJyN()).wHnwAlc(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228085,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class XegPQTX extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new EgIVeik()).fDqjRYE(dataArray, request, response);\n    }\n}\n\npublic class EgIVeik {\n\n    \n    public void fDqjRYE(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228087,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class VZfAsAD extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Cookie[] cookieSources = request.getCookies();\n            if (cookieSources != null) {\n                \n                data = cookieSources[0].getValue();\n            }\n        }\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new rvahceh()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class rvahceh {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228094,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KGKicyb extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228105,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DSMdhRg extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228108,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jzIIYHk extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228114,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jzIIYHk extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228115,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class dBtBJtS extends AbstractTestCaseServlet {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228117,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class mTwXTeS extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228120,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class uxjefJt extends AbstractTestCaseServlet {\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228125,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DxLJVcO extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228126,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class DxLJVcO extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228127,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ARAUwri extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    private void fDqjRYE(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data, request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228143,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EGCuVhM extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228144,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xfJQiQd extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new UbdJnKF()).RYNMBky(data, request, response);\n    }\n}\n\npublic class ZhyMmLf {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class UbdJnKF {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ZhyMmLf()).RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228150,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class rHuNRme extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        (new AeTVfsd()).RYNMBky(data, request, response);\n    }\n}\n\npublic class tgIfQJs {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new sIIBvTQ()).RYNMBky(data, request, response);\n    }\n}\n\npublic class AeTVfsd {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new TyJmALC()).RYNMBky(data, request, response);\n    }\n}\n\npublic class TyJmALC {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new tgIfQJs()).RYNMBky(data, request, response);\n    }\n}\n\npublic class sIIBvTQ {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228154,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class tFGqKhc extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new CCHmKtf()).ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class CCHmKtf {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228156,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class ynLOaCk extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new EanONoX()).RYNMBky(dataArray, request, response);\n    }\n}\n\npublic class EanONoX {\n\n    public void RYNMBky(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228158,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class TuADHPF extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = request.getParameter(\"name\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new xzrlyDA()).RYNMBky(dataVector, request, response);\n    }\n}\n\npublic class xzrlyDA {\n\n    public void RYNMBky(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228166,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class BzxUNqD extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228177,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class oumzfcf extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228180,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class iTWbBSk extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228184,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class iTWbBSk extends AbstractTestCaseServlet {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228185,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class vmUFrXV extends AbstractTestCaseServlet {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228187,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class jFXOWSe extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228190,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class jFXOWSe extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228191,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class AtpxWbl extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228194,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class FIFtVFD extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228196,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class uYsbHQo extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                    while (tokenizer.hasMoreTokens()) {\n                        String token = tokenizer.nextToken();\n                        \n                        if (token.startsWith(\"id=\")) \n                        {\n                            data = token.substring(3);\n                            \n                            break;\n                            \n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228202,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class UKUBmtf extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228204,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\nimport java.util.logging.Level;\n\npublic class TxPwRxJ extends AbstractTestCaseServlet {\n\n    private String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228216,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jLeJvMw extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new IdEfdxr()).RYNMBky(data, request, response);\n    }\n}\n\npublic class IdEfdxr {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228220,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class KTUDfaJ extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new GLXPhcE()).RYNMBky(data, request, response);\n    }\n}\n\npublic class xhGcjKZ {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new uUWpEGw()).RYNMBky(data, request, response);\n    }\n}\n\npublic class uUWpEGw {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class ArYrARk {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new xhGcjKZ()).RYNMBky(data, request, response);\n    }\n}\n\npublic class GLXPhcE {\n\n    public void RYNMBky(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        (new ArYrARk()).RYNMBky(data, request, response);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228226,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class lDiDZii extends AbstractTestCaseServlet {\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = (new jPggasS()).ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class jPggasS {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228228,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class aKizGZw extends AbstractTestCaseServlet {\n\n    public static String data;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        data = \"\";\n        \n        \n        {\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n            while (tokenizer.hasMoreTokens()) {\n                String token = tokenizer.nextToken();\n                \n                if (token.startsWith(\"id=\")) \n                {\n                    data = token.substring(3);\n                    \n                    break;\n                    \n                }\n            }\n        }\n        (new eCcokor()).RYNMBky(request, response);\n    }\n}\n\npublic class eCcokor {\n\n    public void RYNMBky(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = aKizGZw.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228234,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class DdnaCnU extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228251,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class KpbeXDS extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228252,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class AjSWmVg extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228255,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class KPFhuNv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228263,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class wpSCJFf extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228272,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class ixWWJmB extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new OQQmkrZ()).fDqjRYE(data);\n    }\n}\n\npublic class OQQmkrZ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ELQABcm()).fDqjRYE(data);\n    }\n}\n\npublic class ZvRRjrm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class ELQABcm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ZvRRjrm()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227505,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class upvFRbe extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                {\n                    File file = new File(\"C:\\\\data.txt\");\n                    FileInputStream streamFileInput = null;\n                    InputStreamReader readerInputStream = null;\n                    BufferedReader readerBuffered = null;\n                    try {\n                        \n                        streamFileInput = new FileInputStream(file);\n                        readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInput != null) {\n                                streamFileInput.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227554,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RLfSdOt extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227557,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HIYXLqb extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227559,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jqVqLRI extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new JzXrhUI()).TkRMSAh();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new JzXrhUI()).szAnMjq();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class JzXrhUI {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (jqVqLRI.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (jqVqLRI.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227563,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NwYQjnW extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new KuNgoAI()).RYNMBky(data);\n    }\n}\n\npublic class ydpkRyp {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class KuNgoAI {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ydpkRyp()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227574,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AtynjpY extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new VvCLtJS()).fDqjRYE(data);\n    }\n}\n\npublic class uNDhSyb {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class VvCLtJS {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ePWtZvv()).fDqjRYE(data);\n    }\n}\n\npublic class ePWtZvv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new uNDhSyb()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227577,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ciidmpv extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new edtkDUG()).fDqjRYE();\n    }\n}\n\npublic class edtkDUG {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = ciidmpv.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227587,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class KKrNPHj extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227614,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class tfVQbis extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227619,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class bXGukrH extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new DRoWsuj()).RYNMBky(dataArray);\n    }\n}\n\npublic class DRoWsuj {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227654,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class hYhYICm extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new kWVtXSJ()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class kWVtXSJ {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227666,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class lgFivXg extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227682,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wxsEHGV extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getProperty(\"user.home\");\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227700,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZKTMRbP extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227703,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class iNUWeJg extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        elORjvF = false;\n        data = (new RxNATxB()).TkRMSAh();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        CvGpmkk = true;\n        data = (new RxNATxB()).szAnMjq();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class RxNATxB {\n\n    \n    public String TkRMSAh() throws Throwable {\n        String data;\n        if (iNUWeJg.elORjvF) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        return data;\n    }\n\n    \n    public String szAnMjq() throws Throwable {\n        String data;\n        if (iNUWeJg.CvGpmkk) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227707,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class YXNQLqx extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227749,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class UnwWWhD extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new dVKaiwb()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class dVKaiwb {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227809,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class QpcgHgS extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227818,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YeNjyzE extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227820,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class pmouYHt extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new TcKjTBJ()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class TcKjTBJ {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (pmouYHt.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227850,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\n\npublic class uNVCiZf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new grExooN()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class grExooN {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227884,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HxsJVKm extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new QJnecRg()).fDqjRYE();\n    }\n}\n\npublic class QJnecRg {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = HxsJVKm.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227947,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class twggBJm extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    private void RYNMBky() throws Throwable {\n        String data = EuzMspW;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        EuzMspW = data;\n        RYNMBky();\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228002,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vkgJfKy extends AbstractTestCaseServlet {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228037,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KsAKjws extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Cookie[] cookieSources = request.getCookies();\n                if (cookieSources != null) {\n                    \n                    data = cookieSources[0].getValue();\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228056,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ROaVQOZ extends AbstractTestCaseServlet {\n\n    \n    private void nrUZtTn(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        nrUZtTn(request, response);\n        iEftrkw(request, response);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228107,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class JwTNCxj extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228122,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class OoWPWXf extends AbstractTestCaseServlet {\n\n    \n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = request.getParameter(\"name\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228128,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.StringTokenizer;\n\npublic class MLsbEEj extends AbstractTestCaseServlet {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new ocTeAxi()).ImBBndW(request, response);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class ocTeAxi {\n\n    public String ImBBndW(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        if (MLsbEEj.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\n                while (tokenizer.hasMoreTokens()) {\n                    String token = tokenizer.nextToken();\n                    \n                    if (token.startsWith(\"id=\")) \n                    {\n                        data = token.substring(3);\n                        \n                        break;\n                        \n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228210,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class IAukKsX extends AbstractTestCaseServlet {\n\n    public void JttWLtS(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        EXrOlJC(request, response);\n    }\n\n    \n    private void EXrOlJC(HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new DPAUCZK()).fDqjRYE(dataVector, request, response);\n    }\n}\n\npublic class DPAUCZK {\n\n    \n    public void fDqjRYE(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228239,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class veZcyWr extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            data = \"\";\n            \n            \n            {\n                ServerSocket listener = null;\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                \n                try {\n                    listener = new ServerSocket(39543);\n                    socket = listener.accept();\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                    try {\n                        if (listener != null) {\n                            listener.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228280,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\nimport java.util.logging.Level;\n\npublic class mBuUDVO extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new taENZzU()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class taENZzU {\n\n    \n    public void fDqjRYE(mBuUDVO.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228305,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.net.ServerSocket;\n\npublic class imCYeLQ extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            ServerSocket listener = null;\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            \n            try {\n                listener = new ServerSocket(39543);\n                socket = listener.accept();\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n                try {\n                    if (listener != null) {\n                        listener.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"vHszELc\", exceptIO);\n                }\n            }\n        }\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new FwWDeSn()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class FwWDeSn {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228316,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zQyQrMw extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227456,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class cyZXiNQ extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227461,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wZkIJle extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227479,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NBjBaBp extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227487,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class OWGdmim extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new wqFFTdV()).fDqjRYE(data);\n    }\n}\n\npublic class wqFFTdV {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227501,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NTcqcje extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        (new ntiYDCs()).RYNMBky(data);\n    }\n}\n\npublic class cnUUFZU {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class ntiYDCs {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new OSEohlu()).RYNMBky(data);\n    }\n}\n\npublic class OSEohlu {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new dYtDbpo()).RYNMBky(data);\n    }\n}\n\npublic class dYtDbpo {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new cnUUFZU()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227506,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class lDleScH extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new tmdTUKN()).RYNMBky(dataContainer);\n    }\n}\n\npublic class tmdTUKN {\n\n    public void RYNMBky(lDleScH.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227512,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class uiorMgf extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new dIwwZsd()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class dIwwZsd {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227524,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oMcIOdi extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227529,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NVgwGUu extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227533,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BwOUEoO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227541,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class eMQssMN extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227542,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vOpyYRt {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class yxQsTHr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new vOpyYRt()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227581,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class TgWJQwp extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new swMbFaJ()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class swMbFaJ {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227594,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class hVIEmXg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227602,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class KKrNPHj extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227615,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class flFpxvg extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227622,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class rgKHIAO extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new urPntBW()).RYNMBky(data);\n    }\n}\n\npublic class urPntBW {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227644,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class AinQsYb extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new xwwFrnJ()).fDqjRYE(data);\n    }\n}\n\npublic class xwwFrnJ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new WEMPFrE()).fDqjRYE(data);\n    }\n}\n\npublic class WEMPFrE {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227647,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class lSTzWTL extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new qFfEPwQ()).RYNMBky();\n    }\n}\n\npublic class qFfEPwQ {\n\n    public void RYNMBky() throws Throwable {\n        String data = lSTzWTL.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227658,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class lSTzWTL extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new qFfEPwQ()).fDqjRYE();\n    }\n}\n\npublic class qFfEPwQ {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = lSTzWTL.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227659,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class sHgUqvD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new exuAxpd()).RYNMBky(dataLinkedList);\n    }\n}\n\npublic class exuAxpd {\n\n    public void RYNMBky(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227664,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class lgFivXg extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227683,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class NDaIQBG extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227685,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class wxOHaAl extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227694,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BEpfGvp extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                \n                data = System.getProperty(\"user.home\");\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227698,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class TXASeAx extends AbstractTestCase {\n\n    \n    private boolean dWmGbZa = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        dWmGbZa = true;\n        data = LqPHiJL();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    private String LqPHiJL() throws Throwable {\n        String data;\n        if (dWmGbZa) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n\n    \n    private boolean gmaYCRK = false;\n\n    private boolean mAvKbsp = false;\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227704,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class gBioblq extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        (new oLveocb()).RYNMBky(data);\n    }\n}\n\npublic class wmmVoRq {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class oLveocb {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new YSxHkna()).RYNMBky(data);\n    }\n}\n\npublic class YSxHkna {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new wmmVoRq()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227720,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class meNlgBr extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new zliHSXp()).fDqjRYE(data);\n    }\n}\n\npublic class zliHSXp {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new MNmPxLq()).fDqjRYE(data);\n    }\n}\n\npublic class BkPnZtc {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class mhUVwjB {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new BkPnZtc()).fDqjRYE(data);\n    }\n}\n\npublic class MNmPxLq {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new mhUVwjB()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227723,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.LinkedList;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class tvGKvRT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        LinkedList<String> dataLinkedList = new LinkedList<String>();\n        dataLinkedList.add(0, data);\n        dataLinkedList.add(1, data);\n        dataLinkedList.add(2, data);\n        (new ofddZHX()).fDqjRYE(dataLinkedList);\n    }\n}\n\npublic class ofddZHX {\n\n    \n    public void fDqjRYE(LinkedList<String> dataLinkedList) throws Throwable {\n        String data = dataLinkedList.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227737,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class zEZXXwS extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new TMkvRhJ()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class TMkvRhJ {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227740,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class jLNnyUL extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227751,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class kECyjQc extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227758,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class mtaRWZk extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                data = \"\";\n                \n                \n                {\n                    URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                    BufferedReader readerBuffered = null;\n                    InputStreamReader readerInputStream = null;\n                    try {\n                        readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                        readerBuffered = new BufferedReader(readerInputStream);\n                        \n                        \n                        data = readerBuffered.readLine();\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBuffered != null) {\n                                readerBuffered.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStream != null) {\n                                readerInputStream.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                    }\n                }\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227770,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lzxyJeC extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227780,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class SnOJDZf extends AbstractTestCase {\n\n    private void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227782,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vpYVEsa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new cmqoVmC()).fDqjRYE(dataArray);\n    }\n}\n\npublic class cmqoVmC {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227799,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class bxtyhEJ extends AbstractTestCase {\n\n    static class Container {\n\n        public String containerOne;\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        Container dataContainer = new Container();\n        dataContainer.containerOne = data;\n        (new DCimPgo()).fDqjRYE(dataContainer);\n    }\n}\n\npublic class DCimPgo {\n\n    \n    public void fDqjRYE(bxtyhEJ.Container dataContainer) throws Throwable {\n        String data = dataContainer.containerOne;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227801,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class JDAODEV extends AbstractTestCase {\n\n    public static String data;\n\n    public void boNMSnT() throws Throwable {\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        (new EvpNCnl()).RYNMBky();\n    }\n}\n\npublic class EvpNCnl {\n\n    public void RYNMBky() throws Throwable {\n        String data = JDAODEV.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227802,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class gHslehD extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new KwVWBqJ()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class KwVWBqJ {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227810,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YYHrzIF extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227814,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YYHrzIF extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227815,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ZVubeCq extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227827,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class KkvuNBu extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227834,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NWDeNwf extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227836,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class YFRHkYe extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227844,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class kENnwRy extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new CroMksm()).fDqjRYE(data);\n    }\n}\n\npublic class ZLSKleH {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new dQHGxXF()).fDqjRYE(data);\n    }\n}\n\npublic class CroMksm {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new ZLSKleH()).fDqjRYE(data);\n    }\n}\n\npublic class dQHGxXF {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227865,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class EwcAEoP extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new XbxpCSv()).RYNMBky(data);\n    }\n}\n\npublic class tqgaWbg {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new qpXXqtL()).RYNMBky(data);\n    }\n}\n\npublic class CjBAjXr {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new tqgaWbg()).RYNMBky(data);\n    }\n}\n\npublic class XbxpCSv {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new CjBAjXr()).RYNMBky(data);\n    }\n}\n\npublic class qpXXqtL {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227866,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class EwcAEoP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new XbxpCSv()).fDqjRYE(data);\n    }\n}\n\npublic class tqgaWbg {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new qpXXqtL()).fDqjRYE(data);\n    }\n}\n\npublic class CjBAjXr {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new tqgaWbg()).fDqjRYE(data);\n    }\n}\n\npublic class XbxpCSv {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new CjBAjXr()).fDqjRYE(data);\n    }\n}\n\npublic class qpXXqtL {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227867,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class xubLTBI extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new GThAcNU()).RYNMBky(dataArray);\n    }\n}\n\npublic class GThAcNU {\n\n    public void RYNMBky(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227870,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class lRpROHE extends AbstractTestCase {\n\n    public static String data;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        \n        data = \"foo\";\n        (new LUQLuEw()).fDqjRYE();\n    }\n}\n\npublic class LUQLuEw {\n\n    \n    public void fDqjRYE() throws Throwable {\n        String data = lRpROHE.data;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227875,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class qRVGQuN extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new DVcpTsC()).RYNMBky(dataHashMap);\n    }\n}\n\npublic class DVcpTsC {\n\n    public void RYNMBky(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227882,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class XGsnJCv extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227891,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oCQAVut extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227899,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GZRRxFO extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227900,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class tSqzYrb extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227927,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ieydntq extends AbstractTestCase {\n\n    private String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227929,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class KKkInHZ extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227931,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class aHiHJJs extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new Xjsbtso()).RYNMBky(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class Xjsbtso {\n\n    public void RYNMBky(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227956,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class zCIFTWX extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getenv(\"ADD\");\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227454,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RHOaFZl extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227477,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pwvKMgq extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            \n            \n            data = System.getenv(\"ADD\");\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227484,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class pwvKMgq extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        while (true) {\n            \n            data = \"foo\";\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227485,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class dyShxkZ {\n\n    \n    public String wHnwAlc() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        return data;\n    }\n}\n\npublic class vHePSjP extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data = (new dyShxkZ()).wHnwAlc();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227509,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oMcIOdi extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227528,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MBUExrC extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227539,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class eMQssMN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227543,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ExjgLHH extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            {\n                File file = new File(\"C:\\\\data.txt\");\n                FileInputStream streamFileInput = null;\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                try {\n                    \n                    streamFileInput = new FileInputStream(file);\n                    readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227544,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class iFOOQjN extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227553,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class vgPNYxS extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new LNTdysi()).fDqjRYE(data);\n    }\n}\n\npublic class LNTdysi {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227573,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class AtynjpY extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new VvCLtJS()).RYNMBky(data);\n    }\n}\n\npublic class uNDhSyb {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class VvCLtJS {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new ePWtZvv()).RYNMBky(data);\n    }\n}\n\npublic class ePWtZvv {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new uNDhSyb()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227576,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RTLewit extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            File file = new File(\"C:\\\\data.txt\");\n            FileInputStream streamFileInput = null;\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            try {\n                \n                streamFileInput = new FileInputStream(file);\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new qEfTMtg()).RYNMBky((Object) data);\n    }\n}\n\npublic class qEfTMtg {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227588,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RTLewit extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new qEfTMtg()).fDqjRYE((Object) data);\n    }\n}\n\npublic class qEfTMtg {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227589,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.logging.Level;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class PJYRYvN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        \n        ByteArrayOutputStream streamByteArrayOutput = null;\n        ObjectOutput outputObject = null;\n        try {\n            streamByteArrayOutput = new ByteArrayOutputStream();\n            outputObject = new ObjectOutputStream(streamByteArrayOutput);\n            outputObject.writeObject(data);\n            byte[] dataSerialized = streamByteArrayOutput.toByteArray();\n            (new aBskEZt()).fDqjRYE(dataSerialized);\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"IQdccST\", exceptIO);\n        } finally {\n            \n            try {\n                if (outputObject != null) {\n                    outputObject.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"LgADWEx\", exceptIO);\n            }\n            try {\n                if (streamByteArrayOutput != null) {\n                    streamByteArrayOutput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"vFutZps\", exceptIO);\n            }\n        }\n    }\n}\n\npublic class aBskEZt {\n\n    \n    public void fDqjRYE(byte[] dataSerialized) throws Throwable {\n        \n        ByteArrayInputStream streamByteArrayInput = null;\n        ObjectInputStream streamObjectInput = null;\n        try {\n            streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\n            streamObjectInput = new ObjectInputStream(streamByteArrayInput);\n            String data = (String) streamObjectInput.readObject();\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        } catch (IOException exceptIO) {\n            IO.logger.log(Level.WARNING, \"VcFIKxo\", exceptIO);\n        } catch (ClassNotFoundException exceptClassNotFound) {\n            IO.logger.log(Level.WARNING, \"XOCCPfT\", exceptClassNotFound);\n        } finally {\n            \n            try {\n                if (streamObjectInput != null) {\n                    streamObjectInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"kpDMUXH\", exceptIO);\n            }\n            try {\n                if (streamByteArrayInput != null) {\n                    streamByteArrayInput.close();\n                }\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"oiWyzFb\", exceptIO);\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227597,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class VJILwXX extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227616,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.Properties;\nimport java.util.logging.Level;\n\npublic class yfnQVhh extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            data = \"\";\n            \n            \n            {\n                Properties properties = new Properties();\n                FileInputStream streamFileInput = null;\n                try {\n                    streamFileInput = new FileInputStream(\"../common/config.properties\");\n                    properties.load(streamFileInput);\n                    \n                    data = properties.getProperty(\"data\");\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (streamFileInput != null) {\n                            streamFileInput.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227624,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class cUytcxr extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Properties properties = new Properties();\n            FileInputStream streamFileInput = null;\n            try {\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\n                properties.load(streamFileInput);\n                \n                data = properties.getProperty(\"data\");\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (streamFileInput != null) {\n                        streamFileInput.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                }\n            }\n        }\n        (new BWuzYJc()).RYNMBky(data);\n    }\n}\n\npublic class mjQZbYI {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new VTuYTyv()).RYNMBky(data);\n    }\n}\n\npublic class VTuYTyv {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class BWuzYJc {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new cnhkpjK()).RYNMBky(data);\n    }\n}\n\npublic class cnhkpjK {\n\n    public void RYNMBky(String data) throws Throwable {\n        (new mjQZbYI()).RYNMBky(data);\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227650,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class bXGukrH extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new DRoWsuj()).fDqjRYE(dataArray);\n    }\n}\n\npublic class DRoWsuj {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227655,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class GkaqZXm extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new DQpAtSR()).fDqjRYE((Object) data);\n    }\n}\n\npublic class DQpAtSR {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227661,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class YxqYnGY extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227673,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class lQmvEsV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227687,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class MCvtgzj extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticTrue) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227688,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class odAmzrz extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227690,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qNbKjuX extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            \n            data = System.getProperty(\"user.home\");\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227696,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class qNbKjuX extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227697,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class BEpfGvp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data = null;\n        switch(5) {\n            case 6:\n                \n                data = null;\n                break;\n            default:\n                \n                data = \"foo\";\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data = null;\n        switch(6) {\n            case 6:\n                \n                data = \"foo\";\n                break;\n            default:\n                \n                data = null;\n                break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227699,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ZSYsBWR extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227711,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class HFTidFG extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227715,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class IcJEdxG extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new amQBZCz()).fDqjRYE((Object) data);\n    }\n}\n\npublic class amQBZCz {\n\n    \n    public void fDqjRYE(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227733,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.Vector;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class TiutYKM extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        \n        \n        data = System.getProperty(\"user.home\");\n        Vector<String> dataVector = new Vector<String>(5);\n        dataVector.add(0, data);\n        dataVector.add(1, data);\n        dataVector.add(2, data);\n        (new bkbXIbB()).RYNMBky(dataVector);\n    }\n}\n\npublic class bkbXIbB {\n\n    public void RYNMBky(Vector<String> dataVector) throws Throwable {\n        String data = dataVector.remove(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227734,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class RJFeZCA extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new VMptJTM()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class VMptJTM {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227739,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class cqaTjdt extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227742,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class QBSUKTu extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (5 == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227746,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class QBSUKTu extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (5 != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (5 == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227747,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class IiNHDQJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227752,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class IiNHDQJ extends AbstractTestCase {\n\n    \n    private static final int PRIVATE_STATIC_FINAL_FIVE = 5;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227753,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class UZMmEyQ extends AbstractTestCase {\n\n    \n    private boolean privateReturnsTrue() {\n        return true;\n    }\n\n    private boolean privateReturnsFalse() {\n        return false;\n    }\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227757,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class XhcvaXn extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticReturnsFalse()) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227763,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class lYVlDNw extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227764,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class fmkYbLh extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        while (true) {\n            data = \"\";\n            \n            \n            {\n                URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            break;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227772,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class FtZwRUn extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227774,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.logging.Level;\n\npublic class yvIHGWE extends AbstractTestCase {\n\n    private String ImBBndW() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        return data;\n    }\n\n    \n    public void boNMSnT() throws Throwable {\n        String data = ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227784,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class EnoObNa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new qUjPotS()).fDqjRYE(data);\n    }\n}\n\npublic class qUjPotS {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new LIPNQqB()).fDqjRYE(data);\n    }\n}\n\npublic class LIPNQqB {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227791,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class xSvSGPh extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new FuDdRdJ()).fDqjRYE(data);\n    }\n}\n\npublic class wNqkwec {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new pdtwbnb()).fDqjRYE(data);\n    }\n}\n\npublic class FuDdRdJ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new wJqiBdl()).fDqjRYE(data);\n    }\n}\n\npublic class wJqiBdl {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new wNqkwec()).fDqjRYE(data);\n    }\n}\n\npublic class pdtwbnb {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227795,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class mIqeOMm extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (true) {\n            data = \"\";\n            \n            \n            {\n                Socket socket = null;\n                BufferedReader readerBuffered = null;\n                InputStreamReader readerInputStream = null;\n                try {\n                    \n                    socket = new Socket(\"host.example.org\", 39544);\n                    \n                    readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    \n                    try {\n                        if (socket != null) {\n                            socket.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227816,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class NWDeNwf extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrueOrFalse()) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227837,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class SuZMFSx extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227847,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class ZyeXIDd extends AbstractTestCase {\n\n    private String EuzMspW;\n\n    private String vZNWMPE;\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    private void fDqjRYE() throws Throwable {\n        String data = vZNWMPE;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        vZNWMPE = data;\n        fDqjRYE();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227859,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class tFthQLC extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new HsLlsRF()).fDqjRYE(data);\n    }\n}\n\npublic class HsLlsRF {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new zHyopWL()).fDqjRYE(data);\n    }\n}\n\npublic class zHyopWL {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227863,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class BKkDjOA extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Socket socket = null;\n            BufferedReader readerBuffered = null;\n            InputStreamReader readerInputStream = null;\n            try {\n                \n                socket = new Socket(\"host.example.org\", 39544);\n                \n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                \n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n                \n                try {\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"wpVXzhZ\", exceptIO);\n                }\n            }\n        }\n        (new PLeyMEj()).RYNMBky((Object) data);\n    }\n}\n\npublic class PLeyMEj {\n\n    public void RYNMBky(Object dataObject) throws Throwable {\n        String data = (String) dataObject;\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227876,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.net.Socket;\nimport java.util.logging.Level;\n\npublic class qRVGQuN extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new DVcpTsC()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class DVcpTsC {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227883,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class rWSxnyZ extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227886,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class PkWpRoo extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (false) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (true) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227889,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LTAeyif extends AbstractTestCase {\n\n    \n    private static final boolean PRIVATE_STATIC_FINAL_TRUE = true;\n\n    private static final boolean PRIVATE_STATIC_FINAL_FALSE = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_FALSE) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (PRIVATE_STATIC_FINAL_TRUE) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227893,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class meKfzBV extends AbstractTestCase {\n\n    \n    private boolean privateTrue = true;\n\n    private boolean privateFalse = false;\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (privateFalse) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (privateTrue) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227895,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class oCQAVut extends AbstractTestCase {\n\n    \n    private int privateFive = 5;\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (privateFive == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227898,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EweYEDV extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            data = \"\";\n            \n            {\n                InputStreamReader readerInputStream = null;\n                BufferedReader readerBuffered = null;\n                \n                try {\n                    readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                    readerBuffered = new BufferedReader(readerInputStream);\n                    \n                    data = readerBuffered.readLine();\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    try {\n                        if (readerBuffered != null) {\n                            readerBuffered.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStream != null) {\n                            readerInputStream.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                }\n            }\n            \n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227910,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class EweYEDV extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.STATIC_FINAL_FIVE == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227911,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class FJgfLRp extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227913,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class ULeeLHc extends AbstractTestCase {\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        {\n            InputStreamReader readerInputStream = null;\n            BufferedReader readerBuffered = null;\n            \n            try {\n                readerInputStream = new InputStreamReader(System.in, \"UTF-8\");\n                readerBuffered = new BufferedReader(readerInputStream);\n                \n                data = readerBuffered.readLine();\n            } catch (IOException exceptIO) {\n                IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n            } finally {\n                try {\n                    if (readerBuffered != null) {\n                        readerBuffered.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                }\n                try {\n                    if (readerInputStream != null) {\n                        readerInputStream.close();\n                    }\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                }\n            }\n        }\n        \n        (new romNYQM()).RYNMBky(data);\n    }\n}\n\npublic class romNYQM {\n\n    public void RYNMBky(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227932,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class LJibnTT extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new JlCUmWS()).fDqjRYE(data);\n    }\n}\n\npublic class JlCUmWS {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new SRTfScH()).fDqjRYE(data);\n    }\n}\n\npublic class SRTfScH {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227935,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class jnoLtBc extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        String[] dataArray = new String[5];\n        dataArray[2] = data;\n        (new WDRtUdn()).fDqjRYE(dataArray);\n    }\n}\n\npublic class WDRtUdn {\n\n    \n    public void fDqjRYE(String[] dataArray) throws Throwable {\n        String data = dataArray[2];\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227943,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.util.HashMap;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class cQDWtpa extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\n        dataHashMap.put(0, data);\n        dataHashMap.put(1, data);\n        dataHashMap.put(2, data);\n        (new AHHZdBz()).fDqjRYE(dataHashMap);\n    }\n}\n\npublic class AHHZdBz {\n\n    \n    public void fDqjRYE(HashMap<Integer, String> dataHashMap) throws Throwable {\n        String data = dataHashMap.get(2);\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227955,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class yfMNclS extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        if (IO.staticReturnsTrue()) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227978,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class gDoEYRg extends AbstractTestCase {\n\n    \n    private void nrUZtTn() throws Throwable {\n        String data;\n        if (IO.staticFive != 5) {\n            \n            data = null;\n        } else {\n            \n            data = \"foo\";\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    private void iEftrkw() throws Throwable {\n        String data;\n        if (IO.staticFive == 5) {\n            \n            data = \"foo\";\n        } else {\n            \n            data = null;\n        }\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        nrUZtTn();\n        iEftrkw();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227985,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class cNqhPMb extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String data;\n        data = \"\";\n        \n        \n        {\n            Connection connection = null;\n            PreparedStatement preparedStatement = null;\n            ResultSet resultSet = null;\n            try {\n                \n                connection = IO.getDBConnection();\n                \n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                resultSet = preparedStatement.executeQuery();\n                \n                data = resultSet.getString(1);\n            } catch (SQLException exceptSql) {\n                IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n            } finally {\n                \n                try {\n                    if (resultSet != null) {\n                        resultSet.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                }\n                try {\n                    if (preparedStatement != null) {\n                        preparedStatement.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                }\n                try {\n                    if (connection != null) {\n                        connection.close();\n                    }\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                }\n            }\n        }\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227990,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class cNqhPMb extends AbstractTestCase {\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        for (int i = 0; i < 1; i++) {\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227991,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.util.logging.Level;\n\npublic class yLKogHS extends AbstractTestCase {\n\n    \n    public static boolean qRMEpGJ = false;\n\n    public void boNMSnT() throws Throwable {\n        String data;\n        qRMEpGJ = true;\n        data = (new IgPVFBY()).ImBBndW();\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n\n    \n    public static boolean elORjvF = false;\n\n    public static boolean CvGpmkk = false;\n}\n\npublic class IgPVFBY {\n\n    public String ImBBndW() throws Throwable {\n        String data;\n        if (yLKogHS.qRMEpGJ) {\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n        } else {\n            \n            data = null;\n        }\n        return data;\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227994,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.logging.Level;\n\npublic class ZdYMUKM extends AbstractTestCase {\n\n    \n    public void boNMSnT() throws Throwable {\n        String dataCopy;\n        {\n            String data;\n            data = \"\";\n            \n            \n            {\n                Connection connection = null;\n                PreparedStatement preparedStatement = null;\n                ResultSet resultSet = null;\n                try {\n                    \n                    connection = IO.getDBConnection();\n                    \n                    preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\n                    resultSet = preparedStatement.executeQuery();\n                    \n                    data = resultSet.getString(1);\n                } catch (SQLException exceptSql) {\n                    IO.logger.log(Level.WARNING, \"FMVCxkV\", exceptSql);\n                } finally {\n                    \n                    try {\n                        if (resultSet != null) {\n                            resultSet.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"VvCeZRu\", exceptSql);\n                    }\n                    try {\n                        if (preparedStatement != null) {\n                            preparedStatement.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"tBLwrWM\", exceptSql);\n                    }\n                    try {\n                        if (connection != null) {\n                            connection.close();\n                        }\n                    } catch (SQLException exceptSql) {\n                        IO.logger.log(Level.WARNING, \"sPvuLKK\", exceptSql);\n                    }\n                }\n            }\n            dataCopy = data;\n        }\n        {\n            String data = dataCopy;\n            String root;\n            if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n                \n                root = \"C:\\\\uploads\\\\\";\n            } else {\n                \n                root = \"/home/user/uploads/\";\n            }\n            if (data != null) {\n                \n                File file = new File(root + data);\n                FileInputStream streamFileInputSink = null;\n                InputStreamReader readerInputStreamSink = null;\n                BufferedReader readerBufferdSink = null;\n                if (file.exists() && file.isFile()) {\n                    try {\n                        streamFileInputSink = new FileInputStream(file);\n                        readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                        readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                        IO.writeLine(readerBufferdSink.readLine());\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                    } finally {\n                        \n                        try {\n                            if (readerBufferdSink != null) {\n                                readerBufferdSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                        }\n                        try {\n                            if (readerInputStreamSink != null) {\n                                readerInputStreamSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                        }\n                        try {\n                            if (streamFileInputSink != null) {\n                                streamFileInputSink.close();\n                            }\n                        } catch (IOException exceptIO) {\n                            IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
        "target": 1,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1227996,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    },
    {
        "CWE_ID": [
            "CWE-23"
        ],
        "code": "\nimport testcasesupport.*;\nimport java.io.*;\nimport javax.servlet.http.*;\n\npublic class PIfHBOp extends AbstractTestCase {\n\n    public void JttWLtS() throws Throwable {\n        EXrOlJC();\n    }\n\n    \n    private void EXrOlJC() throws Throwable {\n        String data;\n        \n        data = \"foo\";\n        (new cHZWZYZ()).fDqjRYE(data);\n    }\n}\n\npublic class xicUHWf {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new KyzPVbu()).fDqjRYE(data);\n    }\n}\n\npublic class KyzPVbu {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        String root;\n        if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") >= 0) {\n            \n            root = \"C:\\\\uploads\\\\\";\n        } else {\n            \n            root = \"/home/user/uploads/\";\n        }\n        if (data != null) {\n            \n            File file = new File(root + data);\n            FileInputStream streamFileInputSink = null;\n            InputStreamReader readerInputStreamSink = null;\n            BufferedReader readerBufferdSink = null;\n            if (file.exists() && file.isFile()) {\n                try {\n                    streamFileInputSink = new FileInputStream(file);\n                    readerInputStreamSink = new InputStreamReader(streamFileInputSink, \"UTF-8\");\n                    readerBufferdSink = new BufferedReader(readerInputStreamSink);\n                    IO.writeLine(readerBufferdSink.readLine());\n                } catch (IOException exceptIO) {\n                    IO.logger.log(Level.WARNING, \"IYYVZaV\", exceptIO);\n                } finally {\n                    \n                    try {\n                        if (readerBufferdSink != null) {\n                            readerBufferdSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"WeqfbqF\", exceptIO);\n                    }\n                    try {\n                        if (readerInputStreamSink != null) {\n                            readerInputStreamSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"kEdxQqs\", exceptIO);\n                    }\n                    try {\n                        if (streamFileInputSink != null) {\n                            streamFileInputSink.close();\n                        }\n                    } catch (IOException exceptIO) {\n                        IO.logger.log(Level.WARNING, \"NYmPNkP\", exceptIO);\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class cHZWZYZ {\n\n    \n    public void fDqjRYE(String data) throws Throwable {\n        (new xicUHWf()).fDqjRYE(data);\n    }\n}\n",
        "target": 0,
        "language": "java",
        "dataset": "juliet 1.3",
        "idx": 1228009,
        "RELATED_CWE": [
            "CWE-15",
            "CWE-59",
            "CWE-426"
        ]
    }
]