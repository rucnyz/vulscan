[
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_oweoxfnk()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            \n            twoIntsStruct * dataBuffer = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i].intOne = 1;\n                    dataBuffer[i].intTwo = 1;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\nstatic void f_rqkgpyys()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            twoIntsStruct * dataBuffer = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i].intOne = 1;\n                    dataBuffer[i].intTwo = 1;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\nvoid f_fjyoepqr()\n{\n    f_oweoxfnk();\n    f_rqkgpyys();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_fjyoepqr();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402836,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_mycwfsrc()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            twoIntsStruct dataBuffer[100];\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i].intOne = 1;\n                    dataBuffer[i].intTwo = 1;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_mycwfsrc();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402837,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_rmhxikdu()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            twoIntsStruct * dataBuffer = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i].intOne = 1;\n                    dataBuffer[i].intTwo = 1;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rmhxikdu();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402839,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_wbtedtcs()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            static twoIntsStruct dataBuffer[100];\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i].intOne = 1;\n                    dataBuffer[i].intTwo = 1;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wbtedtcs();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402841,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\n\n\nstatic void f_lnarbdbm()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        \n        twoIntsStruct * dataBuffer = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n        if (dataBuffer == NULL)\n        {\n            printLine(\"malloc() failed\");\n            exit(1);\n        }\n        {\n            size_t i;\n            for (i = 0; i < 100; i++)\n            {\n                dataBuffer[i].intOne = 1;\n                dataBuffer[i].intTwo = 1;\n            }\n        }\n        data = dataBuffer;\n    }\n    break;\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\nstatic void f_evrmmfmm()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    switch(6)\n    {\n    case 6:\n    {\n        \n        twoIntsStruct * dataBuffer = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n        if (dataBuffer == NULL)\n        {\n            printLine(\"malloc() failed\");\n            exit(1);\n        }\n        {\n            size_t i;\n            for (i = 0; i < 100; i++)\n            {\n                dataBuffer[i].intOne = 1;\n                dataBuffer[i].intTwo = 1;\n            }\n        }\n        data = dataBuffer;\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\nvoid f_gmkzxtfm()\n{\n    f_lnarbdbm();\n    f_evrmmfmm();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gmkzxtfm();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402842,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_15.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nvoid f_rekbtweg()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    switch(6)\n    {\n    case 6:\n    {\n        \n        static twoIntsStruct dataBuffer[100];\n        {\n            size_t i;\n            for (i = 0; i < 100; i++)\n            {\n                dataBuffer[i].intOne = 1;\n                dataBuffer[i].intTwo = 1;\n            }\n        }\n        data = dataBuffer;\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rekbtweg();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402843,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_15.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nvoid f_fufwoysq()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    switch(6)\n    {\n    case 6:\n    {\n        \n        twoIntsStruct * dataBuffer = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\n        {\n            size_t i;\n            for (i = 0; i < 100; i++)\n            {\n                dataBuffer[i].intOne = 1;\n                dataBuffer[i].intTwo = 1;\n            }\n        }\n        data = dataBuffer;\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_fufwoysq();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402845,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_15.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nvoid f_tyjuhxes()\n{\n    twoIntsStruct * data;\n    data = NULL; \n    switch(6)\n    {\n    case 6:\n    {\n        \n        twoIntsStruct dataBuffer[100];\n        {\n            size_t i;\n            for (i = 0; i < 100; i++)\n            {\n                dataBuffer[i].intOne = 1;\n                dataBuffer[i].intTwo = 1;\n            }\n        }\n        data = dataBuffer;\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    printStructLine(&data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tyjuhxes();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402847,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_15.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_wtcbpuqp()\n{\n    long * data;\n    data = NULL; \n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            \n            long * dataBuffer = (long *)malloc(100*sizeof(long));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5L;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLine(data[0]);\n    \n    free(data);\n}\n\n\nstatic void f_lwgvdnbs()\n{\n    long * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            long * dataBuffer = (long *)malloc(100*sizeof(long));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5L;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLine(data[0]);\n    \n    free(data);\n}\n\nvoid f_zkaczhdw()\n{\n    f_wtcbpuqp();\n    f_lwgvdnbs();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zkaczhdw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402848,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_long_static_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_lgsmymad()\n{\n    long * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            static long dataBuffer[100];\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5L;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLine(data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lgsmymad();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402849,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_long_static_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_xveizoap()\n{\n    int64_t * data;\n    data = NULL; \n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            \n            int64_t * dataBuffer = (int64_t *)malloc(100*sizeof(int64_t));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5LL;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLongLine(data[0]);\n    \n    free(data);\n}\n\n\nstatic void f_gwzgqxrr()\n{\n    int64_t * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            int64_t * dataBuffer = (int64_t *)malloc(100*sizeof(int64_t));\n            if (dataBuffer == NULL)\n            {\n                printLine(\"malloc() failed\");\n                exit(1);\n            }\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5LL;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLongLine(data[0]);\n    \n    free(data);\n}\n\nvoid f_lxsnsija()\n{\n    f_xveizoap();\n    f_gwzgqxrr();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lxsnsija();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402850,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_iapxjrig()\n{\n    int64_t * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            int64_t * dataBuffer = (int64_t *)ALLOCA(100*sizeof(int64_t));\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5LL;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLongLine(data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_iapxjrig();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402851,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_jrikbulw()\n{\n    int64_t * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            int64_t dataBuffer[100];\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5LL;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLongLine(data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jrikbulw();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402853,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  },
  {
    "CWE_ID": [
      "CWE-590"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_analghkg()\n{\n    int64_t * data;\n    data = NULL; \n    if(staticReturnsTrue())\n    {\n        {\n            \n            static int64_t dataBuffer[100];\n            {\n                size_t i;\n                for (i = 0; i < 100; i++)\n                {\n                    dataBuffer[i] = 5LL;\n                }\n            }\n            data = dataBuffer;\n        }\n    }\n    printLongLongLine(data[0]);\n    \n    free(data);\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_analghkg();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402855,
    "original_file": "testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_static_08.c",
    "RELATED_CWE": [
      "CWE-415",
      "CWE-416",
      "CWE-121"
    ]
  }
]