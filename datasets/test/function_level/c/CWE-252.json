[
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\n\n\nstatic void f_ywinldlh()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n    else\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_khjgookw()\n{\n    f_ywinldlh();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_khjgookw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402816,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_12.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nvoid f_sdosgovk()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n    else\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sdosgovk();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402817,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_12.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\n\n\nstatic void f_sqyzupck()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n    else\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_uwitgarb()\n{\n    f_sqyzupck();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uwitgarb();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402818,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_12.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nvoid f_uzkgfjlk()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n    else\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uzkgfjlk();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402819,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_12.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\n\n\nstatic void f_qrqmksay()\n{\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeA(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        if (hPipe == INVALID_HANDLE_VALUE)\n        {\n            exit(1);\n        }\n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    }\n}\n\n\nstatic void f_mqwuckww()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeA(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        if (hPipe == INVALID_HANDLE_VALUE)\n        {\n            exit(1);\n        }\n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_ruwmpsyw()\n{\n    f_qrqmksay();\n    f_mqwuckww();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ruwmpsyw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402820,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_15.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nvoid f_pygrcpjr()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeA(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pygrcpjr();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402821,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_15.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_wbcrfblu()\n{\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_tnvjzddn()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_gqepzxxk()\n{\n    f_wbcrfblu();\n    f_tnvjzddn();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gqepzxxk();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402822,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_08.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_xlfgqjsa()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xlfgqjsa();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402823,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_08.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_timginqm()\n{\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_bvblwcqk()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_kwudyzaq()\n{\n    f_timginqm();\n    f_bvblwcqk();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kwudyzaq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402824,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_08.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_sldvulcs()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sldvulcs();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402825,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_08.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\n\n\nstatic void f_navoqeyp()\n{\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeW(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        if (hPipe == INVALID_HANDLE_VALUE)\n        {\n            exit(1);\n        }\n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    }\n}\n\n\nstatic void f_szkodsbu()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeW(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        if (hPipe == INVALID_HANDLE_VALUE)\n        {\n            exit(1);\n        }\n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_zkkkbakh()\n{\n    f_navoqeyp();\n    f_szkodsbu();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zkkkbakh();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402826,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_15.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nvoid f_wqaoaalt()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n        HANDLE hPipe = INVALID_HANDLE_VALUE;\n        BOOL fConnected = FALSE;\n        hPipe = CreateNamedPipeW(\n                    pipeName,\n                    FILE_FLAG_FIRST_PIPE_INSTANCE, \n                    PIPE_TYPE_MESSAGE |\n                    PIPE_READMODE_MESSAGE |\n                    PIPE_WAIT,\n                    PIPE_UNLIMITED_INSTANCES,\n                    BUFSIZE,\n                    BUFSIZE,\n                    NMPWAIT_USE_DEFAULT_WAIT,\n                    NULL);\n        \n        fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n        \n        CloseHandle(hPipe);\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wqaoaalt();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402827,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_15.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\n\n\nstatic void f_gxxobanq()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_ferdgckc()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_dcmjiftb()\n{\n    f_gxxobanq();\n    f_ferdgckc();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dcmjiftb();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402828,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_04.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\nvoid f_cbcgsgfx()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_cbcgsgfx();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402829,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_04.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\n\n\nstatic void f_qewbxubk()\n{\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_uyspeenp()\n{\n    if(staticTrue)\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_kcjtaynu()\n{\n    f_qewbxubk();\n    f_uyspeenp();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kcjtaynu();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402830,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_05.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\nvoid f_zrhngytk()\n{\n    if(staticTrue)\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zrhngytk();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402831,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_05.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\n\n\nstatic void f_vxcosskg()\n{\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_whrtdlwc()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_srepkquq()\n{\n    f_vxcosskg();\n    f_whrtdlwc();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_srepkquq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402832,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_05.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\nvoid f_ldtssayj()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * pipeName = L\"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeW(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ldtssayj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402833,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__wchar_t_w32CreateNamedPipe_05.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\n\n\nstatic void f_tjccynit()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\nstatic void f_shzmajtz()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            if (hPipe == INVALID_HANDLE_VALUE)\n            {\n                exit(1);\n            }\n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\nvoid f_owxzsxpu()\n{\n    f_tjccynit();\n    f_shzmajtz();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_owxzsxpu();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402834,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_04.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  },
  {
    "CWE_ID": [
      "CWE-252"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\n#include <windows.h>\n#define BUFSIZE 1024\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\nvoid f_vkeadxvx()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * pipeName = \"\\\\\\\\.\\\\pipe\\\\mypipe\";\n            HANDLE hPipe = INVALID_HANDLE_VALUE;\n            BOOL fConnected = FALSE;\n            hPipe = CreateNamedPipeA(\n                        pipeName,\n                        FILE_FLAG_FIRST_PIPE_INSTANCE, \n                        PIPE_TYPE_MESSAGE |\n                        PIPE_READMODE_MESSAGE |\n                        PIPE_WAIT,\n                        PIPE_UNLIMITED_INSTANCES,\n                        BUFSIZE,\n                        BUFSIZE,\n                        NMPWAIT_USE_DEFAULT_WAIT,\n                        NULL);\n            \n            fConnected = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n            \n            CloseHandle(hPipe);\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_vkeadxvx();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 402835,
    "original_file": "testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_w32CreateNamedPipe_04.c",
    "RELATED_CWE": [
      "CWE-703",
      "CWE-665",
      "CWE-457"
    ]
  }
]