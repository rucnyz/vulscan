[
  {
    "CWE_ID": [
      "CWE-862"
    ],
    "code": "/*\n * ***** BEGIN LICENSE BLOCK *****\n * Zimbra Collaboration Suite Server\n * Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2014, 2016 Synacor, Inc.\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software Foundation,\n * version 2 of the License.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with this program.\n * If not, see <https://www.gnu.org/licenses/>.\n * ***** END LICENSE BLOCK *****\n */\npackage com.zimbra.cs.service.account;\n\nimport java.util.Map;\n\nimport com.zimbra.common.service.ServiceException;\nimport com.zimbra.common.soap.AccountConstants;\nimport com.zimbra.common.soap.Element;\nimport com.zimbra.cs.account.Account;\nimport com.zimbra.cs.account.Provisioning;\nimport com.zimbra.cs.gal.GalSearchControl;\nimport com.zimbra.cs.gal.GalSearchParams;\nimport com.zimbra.soap.ZimbraSoapContext;\nimport com.zimbra.soap.type.GalSearchType;\n\n/**\n * @since May 26, 2004\n * @author schemers\n */\npublic class AutoCompleteGal extends GalDocumentHandler {\n\n    @Override\n    public Element handle(Element request, Map<String, Object> context) throws ServiceException {\n        ZimbraSoapContext zsc = getZimbraSoapContext(context);\n        Account account = getRequestedAccount(getZimbraSoapContext(context));\n\n        if (!canAccessAccount(zsc, account))\n            throw ServiceException.PERM_DENIED(\"can not access account\");\n        \n        String name = request.getAttribute(AccountConstants.E_NAME);\n        String typeStr = request.getAttribute(AccountConstants.A_TYPE, \"account\");\n        GalSearchType type = GalSearchType.fromString(typeStr);\n\n        boolean needCanExpand = request.getAttributeBool(AccountConstants.A_NEED_EXP, false);\n\n        String galAcctId = request.getAttribute(AccountConstants.A_GAL_ACCOUNT_ID, null);\n        \n        GalSearchParams params = new GalSearchParams(account, zsc);\n        params.setType(type);\n        params.setRequest(request);\n        params.setQuery(name);\n        params.setLimit(account.getContactAutoCompleteMaxResults());\n        params.setNeedCanExpand(needCanExpand);\n        params.setResponseName(AccountConstants.AUTO_COMPLETE_GAL_RESPONSE);\n        if (galAcctId != null)\n            params.setGalSyncAccount(Provisioning.getInstance().getAccountById(galAcctId));\n        GalSearchControl gal = new GalSearchControl(params);\n        gal.autocomplete();\n        return params.getResultCallback().getResponse();\n    }\n\n    @Override\n    public boolean needsAuth(Map<String, Object> context) {\n        return true;\n    }\n}\n",
    "target": 1,
    "language": "java",
    "dataset": "TreeVul",
    "idx": 700158,
    "RELATED_CWE": [
      "CWE-538",
      "CWE-200",
      "CWE-35"
    ]
  },
  {
    "CWE_ID": [
      "CWE-862"
    ],
    "code": "/*\n * ***** BEGIN LICENSE BLOCK *****\n * Zimbra Collaboration Suite Server\n * Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2014, 2016, 2020 Synacor, Inc.\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software Foundation,\n * version 2 of the License.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with this program.\n * If not, see <https://www.gnu.org/licenses/>.\n * ***** END LICENSE BLOCK *****\n */\npackage com.zimbra.cs.service.account;\n\nimport java.util.Map;\n\nimport com.zimbra.common.service.ServiceException;\nimport com.zimbra.common.soap.AccountConstants;\nimport com.zimbra.common.soap.Element;\nimport com.zimbra.cs.account.Account;\nimport com.zimbra.cs.account.Provisioning;\nimport com.zimbra.cs.gal.GalSearchControl;\nimport com.zimbra.cs.gal.GalSearchParams;\nimport com.zimbra.soap.ZimbraSoapContext;\nimport com.zimbra.soap.type.GalSearchType;\n\n/**\n * @since May 26, 2004\n * @author schemers\n */\npublic class AutoCompleteGal extends GalDocumentHandler {\n\n    @Override\n    public Element handle(Element request, Map<String, Object> context) throws ServiceException {\n        ZimbraSoapContext zsc = getZimbraSoapContext(context);\n        Account account = getRequestedAccount(getZimbraSoapContext(context));\n\n        if (!canAccessAccount(zsc, account))\n            throw ServiceException.PERM_DENIED(\"can not access account\");\n        \n        String name = request.getAttribute(AccountConstants.E_NAME);\n        String typeStr = request.getAttribute(AccountConstants.A_TYPE, \"account\");\n        GalSearchType type = GalSearchType.fromString(typeStr);\n\n        boolean needCanExpand = request.getAttributeBool(AccountConstants.A_NEED_EXP, false);\n\n        String galAcctId = request.getAttribute(AccountConstants.A_GAL_ACCOUNT_ID, null);\n        \n        GalSearchParams params = new GalSearchParams(account, zsc);\n        params.setType(type);\n        params.setRequest(request);\n        params.setQuery(name);\n        params.setLimit(account.getContactAutoCompleteMaxResults());\n        params.setNeedCanExpand(needCanExpand);\n        params.setResponseName(AccountConstants.AUTO_COMPLETE_GAL_RESPONSE);\n        if (galAcctId != null) {\n            Account galAccount = Provisioning.getInstance().getAccountById(galAcctId);\n            if (galAccount != null && (!account.getDomainId().equals(galAccount.getDomainId()))) {\n                throw ServiceException\n                    .PERM_DENIED(\"can not access galsync account of different domain\");\n            }\n            params.setGalSyncAccount(galAccount);\n        }\n        GalSearchControl gal = new GalSearchControl(params);\n        gal.autocomplete();\n        return params.getResultCallback().getResponse();\n    }\n\n    @Override\n    public boolean needsAuth(Map<String, Object> context) {\n        return true;\n    }\n}\n",
    "target": 0,
    "language": "java",
    "dataset": "TreeVul",
    "idx": 700159,
    "RELATED_CWE": [
      "CWE-538",
      "CWE-200",
      "CWE-35"
    ]
  }
]