[
  {
    "CWE_ID": [
      "CWE-798"
    ],
    "code": "static tool_rc key_import(ESYS_CONTEXT *ectx, TPM2B_PUBLIC *parent_pub,\n        TPM2B_SENSITIVE *privkey, TPM2B_PUBLIC *pubkey,\n        TPM2B_ENCRYPTED_SECRET *encrypted_seed,\n        TPM2B_PRIVATE **imported_private) {\n\n    TPMI_ALG_HASH name_alg = pubkey->publicArea.nameAlg;\n\n    TPM2B_DIGEST *seed = &privkey->sensitiveArea.seedValue;\n\n    /*\n     * Create the protection encryption key that gets encrypted with the parents public key.\n     */\n    TPM2B_DATA enc_sensitive_key = {\n        .size = parent_pub->publicArea.parameters.rsaDetail.symmetric.keyBits.sym / 8\n    };\n    memset(enc_sensitive_key.buffer, 0xFF, enc_sensitive_key.size);\n\n    /*\n     * Calculate the object name.\n     */\n    TPM2B_NAME pubname = TPM2B_TYPE_INIT(TPM2B_NAME, name);\n    bool res = tpm2_identity_create_name(pubkey, &pubname);\n    if (!res) {\n        return false;\n    }\n\n    TPM2B_MAX_BUFFER hmac_key;\n    TPM2B_MAX_BUFFER enc_key;\n    tpm2_identity_util_calc_outer_integrity_hmac_key_and_dupsensitive_enc_key(\n            parent_pub, &pubname, seed, &hmac_key, &enc_key);\n\n    TPM2B_MAX_BUFFER encrypted_inner_integrity = TPM2B_EMPTY_INIT;\n    tpm2_identity_util_calculate_inner_integrity(name_alg, privkey, &pubname,\n            &enc_sensitive_key,\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric,\n            &encrypted_inner_integrity);\n\n    TPM2B_DIGEST outer_hmac = TPM2B_EMPTY_INIT;\n    TPM2B_MAX_BUFFER encrypted_duplicate_sensitive = TPM2B_EMPTY_INIT;\n    tpm2_identity_util_calculate_outer_integrity(parent_pub->publicArea.nameAlg,\n            &pubname, &encrypted_inner_integrity, &hmac_key, &enc_key,\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric,\n            &encrypted_duplicate_sensitive, &outer_hmac);\n\n    TPM2B_PRIVATE private = TPM2B_EMPTY_INIT;\n    res = create_import_key_private_data(&private, parent_pub->publicArea.nameAlg,\n            &encrypted_duplicate_sensitive, &outer_hmac);\n    if (!res) {\n        return tool_rc_general_error;\n    }\n\n    TPMT_SYM_DEF_OBJECT *sym_alg =\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric;\n\n    if (!ctx.cp_hash_path) {\n        return tpm2_import(ectx, &ctx.parent.object, &enc_sensitive_key, pubkey,\n            &private, encrypted_seed, sym_alg, imported_private, NULL);\n    }\n\n    TPM2B_DIGEST cp_hash = { .size = 0 };\n    tool_rc rc = tpm2_import(ectx, &ctx.parent.object, &enc_sensitive_key, pubkey,\n            &private, encrypted_seed, sym_alg, imported_private, &cp_hash);\n    if (rc != tool_rc_success) {\n        return rc;\n    }\n\n    bool result = files_save_digest(&cp_hash, ctx.cp_hash_path);\n    if (!result) {\n        rc = tool_rc_general_error;\n    }\n    return rc;\n}",
    "target": 1,
    "language": "c",
    "dataset": "primevul_pair",
    "idx": 147258,
    "RELATED_CWE": [
      "CWE-312",
      "CWE-287",
      "CWE-306"
    ]
  },
  {
    "CWE_ID": [
      "CWE-798"
    ],
    "code": "static tool_rc key_import(ESYS_CONTEXT *ectx, TPM2B_PUBLIC *parent_pub,\n        TPM2B_SENSITIVE *privkey, TPM2B_PUBLIC *pubkey,\n        TPM2B_ENCRYPTED_SECRET *encrypted_seed,\n        TPM2B_PRIVATE **imported_private) {\n\n    TPMI_ALG_HASH name_alg = pubkey->publicArea.nameAlg;\n\n    TPM2B_DIGEST *seed = &privkey->sensitiveArea.seedValue;\n\n    /*\n     * Create the protection encryption key that gets encrypted with the parents public key.\n     */\n    TPM2B_DATA enc_sensitive_key = {\n        .size = parent_pub->publicArea.parameters.rsaDetail.symmetric.keyBits.sym / 8\n    };\n\n    if(enc_sensitive_key.size < 16) {\n        LOG_ERR(\"Calculated wrapping keysize is less than 16 bytes, got: %u\", enc_sensitive_key.size);\n        return tool_rc_general_error;\n    }\n\n    int ossl_rc = RAND_bytes(enc_sensitive_key.buffer, enc_sensitive_key.size);\n    if (ossl_rc != 1) {\n        LOG_ERR(\"RAND_bytes failed: %s\", ERR_error_string(ERR_get_error(), NULL));\n        return tool_rc_general_error;\n    }\n\n    /*\n     * Calculate the object name.\n     */\n    TPM2B_NAME pubname = TPM2B_TYPE_INIT(TPM2B_NAME, name);\n    bool res = tpm2_identity_create_name(pubkey, &pubname);\n    if (!res) {\n        return false;\n    }\n\n    TPM2B_MAX_BUFFER hmac_key;\n    TPM2B_MAX_BUFFER enc_key;\n    tpm2_identity_util_calc_outer_integrity_hmac_key_and_dupsensitive_enc_key(\n            parent_pub, &pubname, seed, &hmac_key, &enc_key);\n\n    TPM2B_MAX_BUFFER encrypted_inner_integrity = TPM2B_EMPTY_INIT;\n    tpm2_identity_util_calculate_inner_integrity(name_alg, privkey, &pubname,\n            &enc_sensitive_key,\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric,\n            &encrypted_inner_integrity);\n\n    TPM2B_DIGEST outer_hmac = TPM2B_EMPTY_INIT;\n    TPM2B_MAX_BUFFER encrypted_duplicate_sensitive = TPM2B_EMPTY_INIT;\n    tpm2_identity_util_calculate_outer_integrity(parent_pub->publicArea.nameAlg,\n            &pubname, &encrypted_inner_integrity, &hmac_key, &enc_key,\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric,\n            &encrypted_duplicate_sensitive, &outer_hmac);\n\n    TPM2B_PRIVATE private = TPM2B_EMPTY_INIT;\n    res = create_import_key_private_data(&private, parent_pub->publicArea.nameAlg,\n            &encrypted_duplicate_sensitive, &outer_hmac);\n    if (!res) {\n        return tool_rc_general_error;\n    }\n\n    TPMT_SYM_DEF_OBJECT *sym_alg =\n            &parent_pub->publicArea.parameters.rsaDetail.symmetric;\n\n    if (!ctx.cp_hash_path) {\n        return tpm2_import(ectx, &ctx.parent.object, &enc_sensitive_key, pubkey,\n            &private, encrypted_seed, sym_alg, imported_private, NULL);\n    }\n\n    TPM2B_DIGEST cp_hash = { .size = 0 };\n    tool_rc rc = tpm2_import(ectx, &ctx.parent.object, &enc_sensitive_key, pubkey,\n            &private, encrypted_seed, sym_alg, imported_private, &cp_hash);\n    if (rc != tool_rc_success) {\n        return rc;\n    }\n\n    bool result = files_save_digest(&cp_hash, ctx.cp_hash_path);\n    if (!result) {\n        rc = tool_rc_general_error;\n    }\n    return rc;\n}",
    "target": 0,
    "language": "c",
    "dataset": "primevul_pair",
    "idx": 147259,
    "RELATED_CWE": [
      "CWE-312",
      "CWE-287",
      "CWE-306"
    ]
  }
]