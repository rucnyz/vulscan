[
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_rloheccv()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_zgtlvpnl()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_tqrbbezv()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_jryksuka()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_zyhmwymg()\n{\n    f_rloheccv();\n    f_zgtlvpnl();\n    f_tqrbbezv();\n    f_jryksuka();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zyhmwymg();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400516,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_ehachfub()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ehachfub();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400517,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_rtpntvtx()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_izsxpzia()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_rzypnbig()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_onuspseu()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_lovocgzx()\n{\n    f_rtpntvtx();\n    f_izsxpzia();\n    f_rzypnbig();\n    f_onuspseu();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lovocgzx();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400518,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_aqztpnve()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aqztpnve();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400519,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_oyfvoiny()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_niqrelew()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_dzgkuvxy()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_uzlihpdz()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_sypcctwf()\n{\n    f_oyfvoiny();\n    f_niqrelew();\n    f_dzgkuvxy();\n    f_uzlihpdz();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sypcctwf();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400520,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_lfwztjoa()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lfwztjoa();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400521,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_xubaakup()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_ebngongz()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_uyulgwgh()\n{\n    double * data;\n    data = new double[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_laexzfjr()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_cpllsxea()\n{\n    f_xubaakup();\n    f_ebngongz();\n    f_uyulgwgh();\n    f_laexzfjr();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_cpllsxea();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400522,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_hvxgwnzp()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hvxgwnzp();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400523,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_kerjakyy()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_mehfqqpn()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_jewfuutw()\n{\n    int * data;\n    data = new int[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_iniycgkq()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_ojekxpen()\n{\n    f_kerjakyy();\n    f_mehfqqpn();\n    f_jewfuutw();\n    f_iniycgkq();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ojekxpen();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400524,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_bvnbnqhl()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bvnbnqhl();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400525,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_pdryyzyy()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_imatlktb()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_dnbsckxm()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_bnpbyyom()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_wbkrungz()\n{\n    f_pdryyzyy();\n    f_imatlktb();\n    f_dnbsckxm();\n    f_bnpbyyom();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wbkrungz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400526,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_dbsowaqu()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dbsowaqu();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400527,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_bqotznbz()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_iwssnkak()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_eljafmsc()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_mcbhncvl()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_icddjgme()\n{\n    f_bqotznbz();\n    f_iwssnkak();\n    f_eljafmsc();\n    f_mcbhncvl();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_icddjgme();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400528,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_ggtnexah()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ggtnexah();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400529,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_azqjmfea()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_xtyhpvmm()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_bafgcrpa()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_ryiduhvi()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_ddioenvz()\n{\n    f_azqjmfea();\n    f_xtyhpvmm();\n    f_bafgcrpa();\n    f_ryiduhvi();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ddioenvz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400530,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_caufxlna()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_caufxlna();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400531,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_zhutcoqx()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_dfhnzluo()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_homzbmun()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_kojinlah()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_fgiaoaiw()\n{\n    f_zhutcoqx();\n    f_dfhnzluo();\n    f_homzbmun();\n    f_kojinlah();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_fgiaoaiw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400532,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_iuyaxxuk()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_iuyaxxuk();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400533,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_bvhxpizz()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_hcmmuuhi()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_nnlfczag()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_pvzcbyfb()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_jxgkagcd()\n{\n    f_bvhxpizz();\n    f_hcmmuuhi();\n    f_nnlfczag();\n    f_pvzcbyfb();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jxgkagcd();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400534,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_cblyqrkq()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_cblyqrkq();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400535,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_dahzjedx()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_gyuhidtb()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_tcigplmt()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_viyzueaf()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_mlugblzw()\n{\n    f_dahzjedx();\n    f_gyuhidtb();\n    f_tcigplmt();\n    f_viyzueaf();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_mlugblzw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400536,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_xiekjkex()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xiekjkex();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400537,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_znghnrgw()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_lweggyfn()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_tuylhhjn()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_mdwmuycc()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_flansbkk()\n{\n    f_znghnrgw();\n    f_lweggyfn();\n    f_tuylhhjn();\n    f_mdwmuycc();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_flansbkk();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400538,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_hdbegqxm()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hdbegqxm();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400539,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_djtckaax()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_ertvlxme()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_yqvuuufz()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_xvemlpow()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_pvadgkms()\n{\n    f_djtckaax();\n    f_ertvlxme();\n    f_yqvuuufz();\n    f_xvemlpow();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pvadgkms();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400540,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_jungiihu()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<(10/2); i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jungiihu();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400541,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_wdimosya()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_dizaybuv()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_atgobwks()\n{\n    double * data;\n    data = new double[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_wyrfqqon()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_tkwnxdvf()\n{\n    f_wdimosya();\n    f_dizaybuv();\n    f_atgobwks();\n    f_wyrfqqon();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tkwnxdvf();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400542,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_xyknvtfa()\n{\n    double * data;\n    data = new double[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xyknvtfa();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400543,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_jigqsnxs()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    }\n}\n\n\nstatic void f_zcnuuvrk()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_dtdezqxk()\n{\n    int * data;\n    data = new int[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_swzhrjfh()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_dviheaiw()\n{\n    f_jigqsnxs();\n    f_zcnuuvrk();\n    f_dtdezqxk();\n    f_swzhrjfh();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dviheaiw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400544,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_huukmhyd()\n{\n    int * data;\n    data = new int[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    \n    delete [] data;\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_huukmhyd();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400545,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_hzhwxhzo()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_mweungns()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_aebinmke()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_jzryewgl()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_tkvdtdcf()\n{\n    f_hzhwxhzo();\n    f_mweungns();\n    f_aebinmke();\n    f_jzryewgl();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tkvdtdcf();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400546,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_xvkqvyqf()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xvkqvyqf();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400547,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_ynplpaqm()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_pjcrntth()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_yymxvfpi()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_lptbfvau()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_nuorapst()\n{\n    f_ynplpaqm();\n    f_pjcrntth();\n    f_yymxvfpi();\n    f_lptbfvau();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_nuorapst();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400548,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_jpwcxyij()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jpwcxyij();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400549,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_rehmufxq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_yvzhtlzd()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_vuwltetg()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_mawuxwyb()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_wteypedg()\n{\n    f_rehmufxq();\n    f_yvzhtlzd();\n    f_vuwltetg();\n    f_mawuxwyb();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wteypedg();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400550,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\nvoid f_bzvsuqss()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bzvsuqss();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400551,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_cqxfsytx()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_uokvopgt()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_padspxcx()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_gifrvmbj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_xbpeyswy()\n{\n    f_cqxfsytx();\n    f_uokvopgt();\n    f_padspxcx();\n    f_gifrvmbj();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xbpeyswy();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400552,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_zpyxozmf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zpyxozmf();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400553,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_yssixwuy()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_qlksmpgr()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_jvckxweh()\n{\n    f_yssixwuy();\n    f_qlksmpgr();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jvckxweh();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400554,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_hsmoffvj()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hsmoffvj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400555,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_pssqb()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_yhygtjar()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_snbncrpy()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_tqcjntbg()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_xisyvhga()\n{\n    f_pssqb();\n    f_yhygtjar();\n    f_snbncrpy();\n    f_tqcjntbg();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xisyvhga();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400556,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_dvfmpfki()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dvfmpfki();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400557,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_gcpfkehg()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_ymgmmtmr()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_fecrkskq()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_otkuqyxd()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_zaaxdqef()\n{\n    f_gcpfkehg();\n    f_ymgmmtmr();\n    f_fecrkskq();\n    f_otkuqyxd();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zaaxdqef();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400558,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_declare_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_riyvfsfn()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_riyvfsfn();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400559,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_declare_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_xmgvdzcn()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_ehmflpbw()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_jvacmyus()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_mfptelri()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_lesfhwhh()\n{\n    f_xmgvdzcn();\n    f_ehmflpbw();\n    f_jvacmyus();\n    f_mfptelri();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lesfhwhh();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400560,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_covmpnan()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_covmpnan();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400561,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_tcpbkimw()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_omalkkly()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_cctrcrwj()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_zmbhitmx()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_pjihqutm()\n{\n    f_tcpbkimw();\n    f_omalkkly();\n    f_cctrcrwj();\n    f_zmbhitmx();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pjihqutm();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400562,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_slqlbgnv()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_slqlbgnv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400563,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_zzqluvao()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_bcvzgooy()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_bbxtaqsz()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_wwpfjalj()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_wvksufjx()\n{\n    f_zzqluvao();\n    f_bcvzgooy();\n    f_bbxtaqsz();\n    f_wwpfjalj();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wvksufjx();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400564,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ovhguhyh()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ovhguhyh();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400565,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_jegzviix()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_idpydsro()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_wadiifvo()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_mibxsjfm()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_kpymxlkj()\n{\n    f_jegzviix();\n    f_idpydsro();\n    f_wadiifvo();\n    f_mibxsjfm();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kpymxlkj();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400566,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_malloc_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_ogcxdgxn()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ogcxdgxn();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400567,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_malloc_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_uwtaayyv()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_wmwkcakk()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_urvoajgd()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ihehbqip()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_enfnnmmk()\n{\n    f_uwtaayyv();\n    f_wmwkcakk();\n    f_urvoajgd();\n    f_ihehbqip();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_enfnnmmk();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400568,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_bzosvlcp()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bzosvlcp();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400569,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_eerdywim()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_pkrvxxuc()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_zkvhnona()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_pxubjhqq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_gicivbnu()\n{\n    f_eerdywim();\n    f_pkrvxxuc();\n    f_zkvhnona();\n    f_pxubjhqq();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gicivbnu();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400570,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_nzfythbx()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_nzfythbx();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400571,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_niabnzrp()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_rmowbsqt()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_vqjonktc()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_lkyntmun()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_aphnbfzj()\n{\n    f_niabnzrp();\n    f_rmowbsqt();\n    f_vqjonktc();\n    f_lkyntmun();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aphnbfzj();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400572,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_mdndsglv()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_mdndsglv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400573,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_eaxfklef()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xajvpddf()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_vgryrujv()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_samgjayn()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_lzevhyrz()\n{\n    f_eaxfklef();\n    f_xajvpddf();\n    f_vgryrujv();\n    f_samgjayn();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lzevhyrz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400574,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_uuuvzvju()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uuuvzvju();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400575,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_fhnqhhfo()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_tavtwpay()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_ntzcbvdo()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_romlsbmt()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = (double)i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_gkcluujm()\n{\n    f_fhnqhhfo();\n    f_tavtwpay();\n    f_ntzcbvdo();\n    f_romlsbmt();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gkcluujm();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400576,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ybfhvccs()\n{\n    double * data;\n    data = (double *)ALLOCA(10*sizeof(double));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printDoubleLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ybfhvccs();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400577,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_knfazyfm()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_yklwnuwx()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_rxyrywsc()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_ywyxdjwk()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_gwgsnpki()\n{\n    f_knfazyfm();\n    f_yklwnuwx();\n    f_rxyrywsc();\n    f_ywyxdjwk();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gwgsnpki();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400578,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_alloca_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_vfusqrbp()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_vfusqrbp();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400579,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_alloca_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_sawqnmbz()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    }\n}\n\n\nstatic void f_dhzxssla()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_epquwwxu()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_pzukvtip()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            data[i] = i;\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_fpetpqmz()\n{\n    f_sawqnmbz();\n    f_dhzxssla();\n    f_epquwwxu();\n    f_pzukvtip();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_fpetpqmz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400580,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_awulvydg()\n{\n    int * data;\n    data = (int *)ALLOCA(10*sizeof(int));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n    {\n        int i;\n        for(i=0; i<10; i++)\n        {\n            printIntLine(data[i]);\n        }\n    }\n    break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_awulvydg();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400581,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_15.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_uqsbmpif()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_fulrvgnn()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_lrjlpsvh()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_gmtyuaxm()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_vyyibypk()\n{\n    f_uqsbmpif();\n    f_fulrvgnn();\n    f_lrjlpsvh();\n    f_gmtyuaxm();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_vyyibypk();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400582,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_new_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_pbeiscok()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<(10/2); i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pbeiscok();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400583,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_new_partial_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_swvnsluh()\n{\n    double * data;\n    data = new double[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nzzimyli()\n{\n    double * data;\n    data = new double[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_mmstuinh()\n{\n    double * data;\n    data = new double[10];\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_cpdfhnwe()\n{\n    double * data;\n    data = new double[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_zmcgvwza()\n{\n    f_swvnsluh();\n    f_nzzimyli();\n    f_mmstuinh();\n    f_cpdfhnwe();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zmcgvwza();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400584,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\nvoid f_iglitbsu()\n{\n    double * data;\n    data = new double[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_iglitbsu();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400585,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_tsdscymt()\n{\n    int * data;\n    data = new int[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_krbfmgcd()\n{\n    int * data;\n    data = new int[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_qipaennq()\n{\n    int * data;\n    data = new int[10];\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nuvujyte()\n{\n    int * data;\n    data = new int[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_xmtmkcnl()\n{\n    f_tsdscymt();\n    f_krbfmgcd();\n    f_qipaennq();\n    f_nuvujyte();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xmtmkcnl();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400586,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\nvoid f_hhhfouwr()\n{\n    int * data;\n    data = new int[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hhhfouwr();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400587,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_lchbsegp()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_qqbhcyje()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_xxjhmdxy()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_qltgqpsz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_yaygpljj()\n{\n    f_lchbsegp();\n    f_qqbhcyje();\n    f_xxjhmdxy();\n    f_qltgqpsz();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yaygpljj();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400588,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_qktkokoa()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qktkokoa();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400589,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_twwevcfw()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_nltkkoim()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_djofwosz()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_cnpambwv()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_ligrqbip()\n{\n    f_twwevcfw();\n    f_nltkkoim();\n    f_djofwosz();\n    f_cnpambwv();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ligrqbip();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400590,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_sfsnmqsz()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sfsnmqsz();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400591,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_jdhakxcx()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_hniwolij()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_lzqxhbcf()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_orqvrfos()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_wbslrimo()\n{\n    f_jdhakxcx();\n    f_hniwolij();\n    f_lzqxhbcf();\n    f_orqvrfos();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_wbslrimo();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400592,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_btazwtsj()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_btazwtsj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400593,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_pllgrrfn()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_smbjzohz()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ysgmuxgz()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nmpfneiz()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_jwxqcxty()\n{\n    f_pllgrrfn();\n    f_smbjzohz();\n    f_ysgmuxgz();\n    f_nmpfneiz();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jwxqcxty();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400594,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_bqrameum()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bqrameum();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400595,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_pmllpfti()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_aolcogfd()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_bummujnm()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_pkyrgpza()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_sgzmqiir()\n{\n    f_pmllpfti();\n    f_aolcogfd();\n    f_bummujnm();\n    f_pkyrgpza();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sgzmqiir();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400596,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_09.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_yrflkwvm()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yrflkwvm();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400597,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_09.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_rhntlfnu()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_utkdiplq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_hddkoolu()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xbxyffla()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_asghgpur()\n{\n    f_rhntlfnu();\n    f_utkdiplq();\n    f_hddkoolu();\n    f_xbxyffla();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_asghgpur();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400598,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_bjghjljo()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bjghjljo();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400599,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_vsbfooaf()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_svngqnyh()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_mwpjfvux()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nspcjkbz()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_rmbpiqpp()\n{\n    f_vsbfooaf();\n    f_svngqnyh();\n    f_mwpjfvux();\n    f_nspcjkbz();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rmbpiqpp();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400600,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_13.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_qarlqdum()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qarlqdum();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400601,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_13.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_wvtvqoqb()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ppputirn()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_yxooyany()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_pprbeuwl()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_qzyiahyu()\n{\n    f_wvtvqoqb();\n    f_ppputirn();\n    f_yxooyany();\n    f_pprbeuwl();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qzyiahyu();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400602,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_14.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_bvpxpqda()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bvpxpqda();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400603,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_14.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_bzqbzvak()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_owopgmoq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_disfgpyq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_wxteqbnq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_kfazhrgq()\n{\n    f_bzqbzvak();\n    f_owopgmoq();\n    f_disfgpyq();\n    f_wxteqbnq();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kfazhrgq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400604,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_11.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_asdpbmmx()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_asdpbmmx();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400605,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_partial_init_11.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_antyflpe()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ecdncklu()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_fvdwqatx()\n{\n    f_antyflpe();\n    f_ecdncklu();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_fvdwqatx();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400606,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ihvdfphj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ihvdfphj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400607,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_prodpook()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_wcfvxedz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_mktilyiq()\n{\n    f_prodpook();\n    f_wcfvxedz();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_mktilyiq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400608,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_hqhwzres()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hqhwzres();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400609,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_bxxdvoxh()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ksqhmiiv()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_nsatizzn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_xmttjxqj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_dowwshtw()\n{\n    f_bxxdvoxh();\n    f_ksqhmiiv();\n    f_nsatizzn();\n    f_xmttjxqj();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dowwshtw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400610,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_iapcxlxq()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_iapcxlxq();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400611,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_rtdqzfzw()\n{\n    double * data;\n    data = new double[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_yvwqpfjx()\n{\n    double * data;\n    data = new double[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_liuexdde()\n{\n    f_rtdqzfzw();\n    f_yvwqpfjx();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_liuexdde();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400612,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_pnwgpasi()\n{\n    double * data;\n    data = new double[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pnwgpasi();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400613,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_kloavjqo()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_opisciei()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_yszecgbq()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_xrrchldh()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_rwboczqq()\n{\n    f_kloavjqo();\n    f_opisciei();\n    f_yszecgbq();\n    f_xrrchldh();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rwboczqq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400614,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_declare_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_dbwpinoy()\n{\n    TwoIntsClass * data;\n    TwoIntsClass dataUninitArray[10];\n    data = dataUninitArray;\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dbwpinoy();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400615,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_declare_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_bcvliqfx()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_tnmahbvj()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_lwnlxfqi()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_fvlbtxle()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_aotpitlw()\n{\n    f_bcvliqfx();\n    f_tnmahbvj();\n    f_lwnlxfqi();\n    f_fvlbtxle();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aotpitlw();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400616,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_malloc_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_couwnqhp()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(malloc(10*sizeof(TwoIntsClass)));\n    if (data == NULL) {exit(-1);}\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_couwnqhp();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400617,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_malloc_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_ohupyfad()\n{\n    int * data;\n    data = new int[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_dgrichms()\n{\n    int * data;\n    data = new int[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_lfukzogz()\n{\n    f_ohupyfad();\n    f_dgrichms();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lfukzogz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400618,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_tnrxchto()\n{\n    int * data;\n    data = new int[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tnrxchto();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400619,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_kjrocump()\n{\n    double * data;\n    data = new double[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_eynxpptj()\n{\n    double * data;\n    data = new double[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_kwbjzoxi()\n{\n    double * data;\n    data = new double[10];\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_trabeeaa()\n{\n    double * data;\n    data = new double[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_uyhywhlz()\n{\n    f_kjrocump();\n    f_eynxpptj();\n    f_kwbjzoxi();\n    f_trabeeaa();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uyhywhlz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400620,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_emcwfcam()\n{\n    double * data;\n    data = new double[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_emcwfcam();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400621,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\n\n\nstatic void f_qkhdoksd()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_tbyklgnj()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_vhsgpgqz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_odgocren()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_uaolidzl()\n{\n    f_qkhdoksd();\n    f_tbyklgnj();\n    f_vhsgpgqz();\n    f_odgocren();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uaolidzl();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400622,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\nvoid f_ihkdsjxc()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ihkdsjxc();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400623,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\n\n\nstatic void f_yczcycfn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_pclbcwou()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_lufwhwdr()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_aukegbbo()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_sparmvyu()\n{\n    f_yczcycfn();\n    f_pclbcwou();\n    f_lufwhwdr();\n    f_aukegbbo();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sparmvyu();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400624,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\nvoid f_nhkesxaf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_nhkesxaf();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400625,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_gajmvsmx()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_uxqrfedt()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_aajddkzx()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_jchphrxv()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_evymmqce()\n{\n    f_gajmvsmx();\n    f_uxqrfedt();\n    f_aajddkzx();\n    f_jchphrxv();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_evymmqce();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400626,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_kgxdvrou()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kgxdvrou();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400627,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\n\n\nstatic void f_qoshfejs()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_wxesnqak()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_klzohcqt()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_btcmtrja()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_hkdemhul()\n{\n    f_qoshfejs();\n    f_wxesnqak();\n    f_klzohcqt();\n    f_btcmtrja();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hkdemhul();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400628,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\nvoid f_xqafpijz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xqafpijz();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400629,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_jrzbjkzu()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_anobkgfj()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ylxsemwp()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_uedvuude()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_ygdaafsf()\n{\n    f_jrzbjkzu();\n    f_anobkgfj();\n    f_ylxsemwp();\n    f_uedvuude();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ygdaafsf();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400630,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_pokhdlgl()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pokhdlgl();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400631,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_04.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\n\n\nstatic void f_taewyepm()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_cwwiqpda()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_fcwayjus()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_nfpbcjrf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_eaoogsoz()\n{\n    f_taewyepm();\n    f_cwwiqpda();\n    f_fcwayjus();\n    f_nfpbcjrf();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_eaoogsoz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400632,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\nvoid f_majcnylp()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_majcnylp();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400633,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_kyfkmses()\n{\n    int * data;\n    data = new int[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_gretikwq()\n{\n    int * data;\n    data = new int[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_dpqdhmqa()\n{\n    int * data;\n    data = new int[10];\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_cwctgnxg()\n{\n    int * data;\n    data = new int[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_hnepscis()\n{\n    f_kyfkmses();\n    f_gretikwq();\n    f_dpqdhmqa();\n    f_cwctgnxg();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hnepscis();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400634,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\nnamespace _A_namespace\n{\n\n\nvoid f_yfasslfy()\n{\n    int * data;\n    data = new int[10];\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yfasslfy();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400635,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_05.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_qdotnrhe()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nvcqjzig()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_lozbuyjl()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_plobgkjf()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_qcvtrgsm()\n{\n    f_qdotnrhe();\n    f_nvcqjzig();\n    f_lozbuyjl();\n    f_plobgkjf();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qcvtrgsm();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400636,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_rvjebams()\n{\n    double * data;\n    data = new double[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rvjebams();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400637,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_ovlbcnyt()\n{\n    int * data;\n    data = new int[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_grmzjodt()\n{\n    int * data;\n    data = new int[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_tyracuvu()\n{\n    int * data;\n    data = new int[10];\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_eavjknoo()\n{\n    int * data;\n    data = new int[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_opwbtdry()\n{\n    f_ovlbcnyt();\n    f_grmzjodt();\n    f_tyracuvu();\n    f_eavjknoo();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_opwbtdry();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400638,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_pseizwer()\n{\n    int * data;\n    data = new int[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pseizwer();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400639,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\n\n\nstatic void f_xgqlyeuf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ouqhvsgf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_quwvtckf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_cxqhnnwl()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_saznwrtj()\n{\n    f_xgqlyeuf();\n    f_ouqhvsgf();\n    f_quwvtckf();\n    f_cxqhnnwl();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_saznwrtj();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400640,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\nvoid f_ugthbhgj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ugthbhgj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400641,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\n\n\nstatic void f_ompvawez()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_lfhwheng()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_rckcohkd()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ziwqhmky()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_rxroufdv()\n{\n    f_ompvawez();\n    f_lfhwheng();\n    f_rckcohkd();\n    f_ziwqhmky();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rxroufdv();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400642,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\nvoid f_rbjkhpst()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rbjkhpst();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400643,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_xxqzqlmj()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_szxtidlo()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ommdagne()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_cstnxlvy()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_yoitlnyq()\n{\n    f_xxqzqlmj();\n    f_szxtidlo();\n    f_ommdagne();\n    f_cstnxlvy();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yoitlnyq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400644,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_pmdblyce()\n{\n    int * data;\n    data = new int[10];\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pmdblyce();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400645,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_06.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\n\n\nstatic void f_qdlxhupa()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_xdjjemig()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_kiubkppy()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_bfukhhfm()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_deygklbk()\n{\n    f_qdlxhupa();\n    f_xdjjemig();\n    f_kiubkppy();\n    f_bfukhhfm();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_deygklbk();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400646,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\nvoid f_hlwpdhql()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hlwpdhql();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400647,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_nukzjhpk()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_hxxidnnn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_jtrnhdjg()\n{\n    f_nukzjhpk();\n    f_hxxidnnn();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jtrnhdjg();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400648,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_xfgfyoxs()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xfgfyoxs();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400649,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_12.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\n\n\nstatic void f_spkmfjru()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_mmnbakbn()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_zhnrhcdc()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ephoogog()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_dpsisihz()\n{\n    f_spkmfjru();\n    f_mmnbakbn();\n    f_zhnrhcdc();\n    f_ephoogog();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dpsisihz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400650,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\nvoid f_jygmyqjw()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jygmyqjw();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400651,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_gqtfejzb()\n{\n    double * data;\n    data = new double[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xlgdguub()\n{\n    double * data;\n    data = new double[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_oqdgmctv()\n{\n    double * data;\n    data = new double[10];\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_bjkzohyw()\n{\n    double * data;\n    data = new double[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_ywibupbd()\n{\n    f_gqtfejzb();\n    f_xlgdguub();\n    f_oqdgmctv();\n    f_bjkzohyw();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ywibupbd();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400652,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\nnamespace _A_namespace\n{\n\n\nvoid f_aqmutxgk()\n{\n    double * data;\n    data = new double[10];\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aqmutxgk();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400653,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_07.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_wtyhjcal()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        ; \n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_acxiibla()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        ; \n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_cfjhrokf()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_fiykaygs()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_krdyvmuv()\n{\n    f_wtyhjcal();\n    f_acxiibla();\n    f_cfjhrokf();\n    f_fiykaygs();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_krdyvmuv();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400654,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\nnamespace _A_namespace\n{\n\n\nvoid f_vlcxgnvg()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(staticReturnsTrue())\n    {\n        \n        ; \n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_vlcxgnvg();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400655,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_08.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_etsmddgx()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_edqxvpfr()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_tckukcaq()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_cocnicjo()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_yrfffnbz()\n{\n    f_etsmddgx();\n    f_edqxvpfr();\n    f_tckukcaq();\n    f_cocnicjo();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yrfffnbz();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400656,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_alloca_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_dydciwfm()\n{\n    TwoIntsClass * data;\n    data = reinterpret_cast<TwoIntsClass *>(ALLOCA(10*sizeof(TwoIntsClass)));\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dydciwfm();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400657,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_alloca_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_lznizjpr()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    }\n}\n\n\nstatic void f_kvboczmm()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_okwvqxpe()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(5)\n    {\n    case 6:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\nstatic void f_vixnhiex()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        for(int i=0; i<10; i++)\n        {\n            data[i].intOne = i;\n            data[i].intTwo = i;\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\nvoid f_zhzwmjxa()\n{\n    f_lznizjpr();\n    f_kvboczmm();\n    f_okwvqxpe();\n    f_vixnhiex();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zhzwmjxa();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400658,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_new_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_bgrvahfd()\n{\n    TwoIntsClass * data;\n    data = new TwoIntsClass[10];\n    switch(6)\n    {\n    case 6:\n        \n        ; \n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        \n        for(int i=0; i<10; i++)\n        {\n            printIntLine(data[i].intOne);\n            printIntLine(data[i].intTwo);\n        }\n        break;\n    default:\n        \n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_bgrvahfd();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400659,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s02/CWE457_Use_of_Uninitialized_Variable__twointsclass_array_new_no_init_15.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_mmwzjcwu()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        ; \n    }\n    else\n    {\n        \n        ; \n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_zncrsknq()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_pxcjpivx()\n{\n    f_mmwzjcwu();\n    f_zncrsknq();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_pxcjpivx();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400660,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_szdhhrpc()\n{\n    twoIntsStruct * data;\n    data = new twoIntsStruct[10];\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        ; \n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_szdhhrpc();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400661,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_struct_array_no_init_12.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\n\n\nstatic void f_ioyejyqj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_lgphjekq()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_rjssutms()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_qamowojd()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_hvtupuao()\n{\n    f_ioyejyqj();\n    f_lgphjekq();\n    f_rjssutms();\n    f_qamowojd();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hvtupuao();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400662,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_TRUE = 1; \nstatic const int STATIC_CONST_FALSE = 0; \n\n\nvoid f_kzdhltmu()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kzdhltmu();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400663,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_04.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_whtwowbp()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_lgoqljul()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_ubnbebqa()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_gskrydyj()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\nvoid f_sjinflrh()\n{\n    f_whtwowbp();\n    f_lgoqljul();\n    f_ubnbebqa();\n    f_gskrydyj();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_sjinflrh();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400664,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_tlqppcsg()\n{\n    int * data;\n    data = (int *)malloc(10*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tlqppcsg();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400665,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\n\n\nstatic void f_edqdkmzw()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_fbfkkyhe()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_cwhtzdls()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_fcnhnmun()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_hfdkgsff()\n{\n    f_edqdkmzw();\n    f_fbfkkyhe();\n    f_cwhtzdls();\n    f_fcnhnmun();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hfdkgsff();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400666,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticTrue = 1; \nstatic int staticFalse = 0; \n\n\nvoid f_njdkzrjf()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_njdkzrjf();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400667,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_05.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_otmkxtzn()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_mrlidksd()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_mihucxjs()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_nyfmresv()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\nvoid f_jwwweonn()\n{\n    f_otmkxtzn();\n    f_mrlidksd();\n    f_mihucxjs();\n    f_nyfmresv();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jwwweonn();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400668,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_nqfrsqnr()\n{\n    int * data;\n    int dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_nqfrsqnr();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400669,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_izodazgz()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_pioenjzv()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_weyvjmbb()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_kddndxaw()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\nvoid f_kdcjasqb()\n{\n    f_izodazgz();\n    f_pioenjzv();\n    f_weyvjmbb();\n    f_kddndxaw();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kdcjasqb();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400670,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_xonzgxlq()\n{\n    double * data;\n    data = (double *)malloc(10*sizeof(double));\n    if (data == NULL) {exit(-1);}\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xonzgxlq();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400671,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\n\n\nstatic void f_xbzlbwlc()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_qxrzbhth()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_hbhczspm()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\nstatic void f_tnmyxkjj()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\nvoid f_njpnjraa()\n{\n    f_xbzlbwlc();\n    f_qxrzbhth();\n    f_hbhczspm();\n    f_tnmyxkjj();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_njpnjraa();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400672,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticReturnsTrue()\n{\n    return 1;\n}\n\nstatic int staticReturnsFalse()\n{\n    return 0;\n}\n\n\nvoid f_kqsmnzep()\n{\n    double * data;\n    double dataUninitArray[10];\n    data = dataUninitArray;\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(staticReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_kqsmnzep();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400673,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_08.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_hazjyddx()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_rohkgwry()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_wikuejmm()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_iydtxqio()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_toqkrcpv()\n{\n    f_hazjyddx();\n    f_rohkgwry();\n    f_wikuejmm();\n    f_iydtxqio();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_toqkrcpv();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400674,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_02.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ydlzzzso()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ydlzzzso();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400675,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_02.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_fisuvvvi()\n{\n    double * data;\n    data = new double[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_eiwrinna()\n{\n    double * data;\n    data = new double[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xlysgavb()\n{\n    double * data;\n    data = new double[10];\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xysveusg()\n{\n    double * data;\n    data = new double[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_lzvwxldv()\n{\n    f_fisuvvvi();\n    f_eiwrinna();\n    f_xlysgavb();\n    f_xysveusg();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_lzvwxldv();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400676,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_xfjlpolz()\n{\n    double * data;\n    data = new double[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xfjlpolz();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400677,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_qixybctl()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_tbdamyjd()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_wmhzuzye()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_pzxiehfb()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_yuxsuvyg()\n{\n    f_qixybctl();\n    f_tbdamyjd();\n    f_wmhzuzye();\n    f_pzxiehfb();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yuxsuvyg();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400678,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_hsdqeezj()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hsdqeezj();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400679,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_jmnabipg()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_hvzdhwqx()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ohnhzqgn()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_gcglszii()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_vaoebjyd()\n{\n    f_jmnabipg();\n    f_hvzdhwqx();\n    f_ohnhzqgn();\n    f_gcglszii();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_vaoebjyd();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400680,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_10.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_hujehgqq()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hujehgqq();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400681,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_10.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_adugqyaz()\n{\n    double * data;\n    data = new double[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_blflkljn()\n{\n    double * data;\n    data = new double[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_gczdnsec()\n{\n    double * data;\n    data = new double[10];\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_xistxbhi()\n{\n    double * data;\n    data = new double[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_ukmsykmj()\n{\n    f_adugqyaz();\n    f_blflkljn();\n    f_gczdnsec();\n    f_xistxbhi();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ukmsykmj();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400682,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_ectkkpak()\n{\n    double * data;\n    data = new double[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ectkkpak();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400683,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_zlagnzpn()\n{\n    int * data;\n    data = new int[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_ozghaffp()\n{\n    int * data;\n    data = new int[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_krqshzhz()\n{\n    int * data;\n    data = new int[10];\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_uyptwnhl()\n{\n    int * data;\n    data = new int[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_jkdpanoc()\n{\n    f_zlagnzpn();\n    f_ozghaffp();\n    f_krqshzhz();\n    f_uyptwnhl();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_jkdpanoc();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400684,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_09.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_aoabjexv()\n{\n    int * data;\n    data = new int[10];\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aoabjexv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400685,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_09.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_iefduscl()\n{\n    double * data;\n    data = new double[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_dicofknv()\n{\n    double * data;\n    data = new double[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_oyzwfamz()\n{\n    double * data;\n    data = new double[10];\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_nzlrxtjx()\n{\n    double * data;\n    data = new double[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_valkzqgo()\n{\n    f_iefduscl();\n    f_dicofknv();\n    f_oyzwfamz();\n    f_nzlrxtjx();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_valkzqgo();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400686,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_xqljnzcz()\n{\n    double * data;\n    data = new double[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = (double)i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printDoubleLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_xqljnzcz();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400687,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_double_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_hhuieqox()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_fqvkjxdu()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_agnufhcf()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_gltejnjs()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_yalrwcnd()\n{\n    f_hhuieqox();\n    f_fqvkjxdu();\n    f_agnufhcf();\n    f_gltejnjs();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yalrwcnd();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400688,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_11.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_uabzpqds()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_uabzpqds();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400689,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_11.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_fuzjjvrx()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_vcenqtju()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_bvjanxlh()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_pdlwieva()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_zcwsdemr()\n{\n    f_fuzjjvrx();\n    f_vcenqtju();\n    f_bvjanxlh();\n    f_pdlwieva();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_zcwsdemr();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400690,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_14.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ocsgenky()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ocsgenky();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400691,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_14.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_gsmqguqu()\n{\n    int * data;\n    data = new int[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_duusbsdr()\n{\n    int * data;\n    data = new int[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_shfaauus()\n{\n    int * data;\n    data = new int[10];\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_mxhqjgth()\n{\n    int * data;\n    data = new int[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_ljhzqeyq()\n{\n    f_gsmqguqu();\n    f_duusbsdr();\n    f_shfaauus();\n    f_mxhqjgth();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ljhzqeyq();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400692,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_diwrjpmw()\n{\n    int * data;\n    data = new int[10];\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_diwrjpmw();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400693,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_03.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\n\n\nstatic void f_ojfuhcxq()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_lmhprnvo()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_hquogqks()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_hqixrzau()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_ygjiacwa()\n{\n    f_ojfuhcxq();\n    f_lmhprnvo();\n    f_hquogqks();\n    f_hqixrzau();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ygjiacwa();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400694,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic const int STATIC_CONST_FIVE = 5;\n\n\nvoid f_eupqzfqn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_eupqzfqn();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400695,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_06.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\n\n\nstatic void f_zalvmzec()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_sfahaqvs()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_rjeqxnbn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFive!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_aflpdsww()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_gcffgozg()\n{\n    f_zalvmzec();\n    f_sfahaqvs();\n    f_rjeqxnbn();\n    f_aflpdsww();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gcffgozg();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400696,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nstatic int staticFive = 5;\n\n\nvoid f_aigzvdke()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(staticFive==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_aigzvdke();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400697,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_07.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_fluttrgu()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_obtvfoeg()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_uteidecn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ulgpqbwp()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_nlfugksr()\n{\n    f_fluttrgu();\n    f_obtvfoeg();\n    f_uteidecn();\n    f_ulgpqbwp();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_nlfugksr();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400698,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_10.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_muwmmoxv()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_muwmmoxv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400699,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_10.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_bllwkxdw()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_zrchfqfl()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_cwhuvsab()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_vnbrulth()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_yurrynke()\n{\n    f_bllwkxdw();\n    f_zrchfqfl();\n    f_cwhuvsab();\n    f_vnbrulth();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_yurrynke();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400700,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_03.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_ckbgpbqv()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ckbgpbqv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400701,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_03.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_lmqhizns()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_lopulztp()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ijzclnoa()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsFalse())\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_xfubprtg()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_dgtremya()\n{\n    f_lmqhizns();\n    f_lopulztp();\n    f_ijzclnoa();\n    f_xfubprtg();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_dgtremya();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400702,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_11.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_tfifrfem()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tfifrfem();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400703,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_11.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_nsdbyaaw()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_labqvfiq()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_tjxzioey()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(5!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_sxtvgjjt()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_ceykzzwo()\n{\n    f_nsdbyaaw();\n    f_labqvfiq();\n    f_tjxzioey();\n    f_sxtvgjjt();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ceykzzwo();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400704,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_03.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_gddvsqip()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(5==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_gddvsqip();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400705,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_03.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_dkktdfhr()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ajutvmtg()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_smbmowpc()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(GLOBAL_CONST_FALSE)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_sdiqvyqr()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_tnpsdokh()\n{\n    f_dkktdfhr();\n    f_ajutvmtg();\n    f_smbmowpc();\n    f_sdiqvyqr();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tnpsdokh();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400706,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_09.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_tgtabazl()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tgtabazl();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400707,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_09.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_wqkcyzym()\n{\n    int * data;\n    data = new int[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_rdyfrjrk()\n{\n    int * data;\n    data = new int[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_getjmqxp()\n{\n    int * data;\n    data = new int[10];\n    if(globalFalse)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_iqvpxuqo()\n{\n    int * data;\n    data = new int[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_rtvvsqws()\n{\n    f_wqkcyzym();\n    f_rdyfrjrk();\n    f_getjmqxp();\n    f_iqvpxuqo();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_rtvvsqws();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400708,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_edctpbzv()\n{\n    int * data;\n    data = new int[10];\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(globalTrue)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_edctpbzv();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400709,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_10.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_smsbraif()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_whnvffli()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_oxabzokq()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_spgcizgk()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_hgjemamp()\n{\n    f_smsbraif();\n    f_whnvffli();\n    f_oxabzokq();\n    f_spgcizgk();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hgjemamp();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400710,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_13.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_tdmvwchn()\n{\n    twoIntsStruct * data;\n    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_tdmvwchn();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400711,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_13.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\n\n\nstatic void f_btsamztz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_nkvijzro()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_fngmoovq()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\nstatic void f_ucxrqdpd()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\nvoid f_hruroeie()\n{\n    f_btsamztz();\n    f_nkvijzro();\n    f_fngmoovq();\n    f_ucxrqdpd();\n}\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_hruroeie();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400712,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_02.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\n\nvoid f_qwoeznyl()\n{\n    twoIntsStruct * data;\n    twoIntsStruct dataUninitArray[10];\n    data = dataUninitArray;\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i].intOne = i;\n                data[i].intTwo = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i].intOne);\n                printIntLine(data[i].intTwo);\n            }\n        }\n    }\n}\n\n\n\n\n\n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qwoeznyl();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400713,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_02.c",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\n\n\nstatic void f_cjqjkrhx()\n{\n    int * data;\n    data = new int[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_tqvgnycu()\n{\n    int * data;\n    data = new int[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_prhqrknm()\n{\n    int * data;\n    data = new int[10];\n    if(0)\n    {\n        \n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\nstatic void f_qtvtwxfb()\n{\n    int * data;\n    data = new int[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\nvoid f_ynjdknoe()\n{\n    f_cjqjkrhx();\n    f_tqvgnycu();\n    f_prhqrknm();\n    f_qtvtwxfb();\n}\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_ynjdknoe();\n\n    return 0;\n}\n\n",
    "target": 0,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400714,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  },
  {
    "CWE_ID": [
      "CWE-457"
    ],
    "code": "\n\n\n#include \"std_testcase.h\"\n\nnamespace _A_namespace\n{\n\n\nvoid f_qdficllo()\n{\n    int * data;\n    data = new int[10];\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<(10/2); i++)\n            {\n                data[i] = i;\n            }\n        }\n    }\n    if(1)\n    {\n        \n        {\n            int i;\n            for(i=0; i<10; i++)\n            {\n                printIntLine(data[i]);\n            }\n        }\n        \n        delete [] data;\n    }\n}\n\n\n\n} \n\n\n\n\nusing namespace _A_namespace; \n\nint main(int argc, char * argv[])\n{\n    \n    srand( (unsigned)time(NULL) );\n\n    f_qdficllo();\n\n    return 0;\n}\n\n",
    "target": 1,
    "language": "c",
    "dataset": "juliet 1.3",
    "idx": 400715,
    "original_file": "testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__new_int_array_partial_init_02.cpp",
    "RELATED_CWE": [
      "CWE-416",
      "CWE-415",
      "CWE-476"
    ]
  }
]